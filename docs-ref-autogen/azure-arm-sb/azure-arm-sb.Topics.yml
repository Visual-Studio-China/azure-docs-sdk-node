### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-sb.Topics
    id: azure-arm-sb.Topics
    name: Topics
    summary: |-
      Topics
      __NOTE__: An instance of this class is automatically created for an
      instance of the ServiceBusManagementClient.
      Initializes a new instance of the Topics class.
    fullName: azure-arm-sb.Topics
    type: Class
    children:
      - 'azure-arm-sb.Topics.#ctor'
      - 'azure-arm-sb.Topics#client'
      - 'azure-arm-sb.Topics#listAll'
      - 'azure-arm-sb.Topics#createOrUpdate'
      - 'azure-arm-sb.Topics#deleteMethod'
      - 'azure-arm-sb.Topics#get'
      - 'azure-arm-sb.Topics#listAuthorizationRules'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule'
      - 'azure-arm-sb.Topics#getAuthorizationRule'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule'
      - 'azure-arm-sb.Topics#listKeys'
      - 'azure-arm-sb.Topics#regenerateKeys'
      - 'azure-arm-sb.Topics#listAllNext'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext'
  - id: 'azure-arm-sb.Topics.#ctor'
    uid: 'azure-arm-sb.Topics.#ctor'
    parent: azure-arm-sb.Topics
    name: Topics(client)
    fullName: azure-arm-sb.Topics.Topics(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-sb.ServiceBusManagementClient
          description: Reference to the service client.
      content: new Topics(client)
  - uid: 'azure-arm-sb.Topics#client'
    id: 'azure-arm-sb.Topics#client'
    parent: azure-arm-sb.Topics
    name: client
    summary: ''
    fullName: azure-arm-sb.Topics.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-sb.Topics#listAll'
    id: 'azure-arm-sb.Topics#listAll'
    parent: azure-arm-sb.Topics
    name: 'listAll(resourceGroupName, namespaceName, options, callback)'
    summary: Lists all the topics in a namespace.
    fullName: >-
      azure-arm-sb.Topics.listAll(resourceGroupName, namespaceName, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:TopicListResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listAll(resourceGroupName, namespaceName, options, callback)'
    children:
      - 'azure-arm-sb.Topics#listAll~client'
      - 'azure-arm-sb.Topics#listAll~callback'
      - 'azure-arm-sb.Topics#listAll~options'
      - 'azure-arm-sb.Topics#listAll~requestUrl'
      - 'azure-arm-sb.Topics#listAll~requestUrl'
      - 'azure-arm-sb.Topics#listAll~requestUrl'
      - 'azure-arm-sb.Topics#listAll~requestUrl'
      - 'azure-arm-sb.Topics#listAll~regex'
      - 'azure-arm-sb.Topics#listAll~requestUrl'
      - 'azure-arm-sb.Topics#listAll~queryParameters'
      - 'azure-arm-sb.Topics#listAll~requestUrl'
      - 'azure-arm-sb.Topics#listAll~httpRequest'
      - 'azure-arm-sb.Topics#listAll~headerName'
  - uid: 'azure-arm-sb.Topics#createOrUpdate'
    id: 'azure-arm-sb.Topics#createOrUpdate'
    parent: azure-arm-sb.Topics
    name: >-
      createOrUpdate(resourceGroupName, namespaceName, topicName, parameters,
      options, callback)
    summary: Creates a topic in the specified namespace
    fullName: >-
      azure-arm-sb.Topics.createOrUpdate(resourceGroupName, namespaceName,
      topicName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: parameters
          type:
            - object
          description: Parameters supplied to create a Topic Resource.
        - id: parameters.name
          type:
            - string
          description: Topic name.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Location of the resource.
        - id: parameters.accessedAt
          type:
            - date
          description: |-
            Last time the message was sent or a
            request was received for this topic.
          optional: true
        - id: parameters.autoDeleteOnIdle
          type:
            - string
          description: |-
            TimeSpan idle interval after
            which the topic is automatically deleted. The minimum duration is 5
            minutes.
          optional: true
        - id: parameters.entityAvailabilityStatus
          type:
            - string
          description: >-
            Entity availability

            status for the topic. Possible values include: 'Available',
            'Limited',

            'Renaming', 'Restoring', 'Unknown'
          optional: true
        - id: parameters.createdAt
          type:
            - date
          description: Exact time the message was created.
          optional: true
        - id: parameters.countDetails
          type:
            - object
          description: ''
          optional: true
        - id: parameters.countDetails.activeMessageCount
          type:
            - number
          description: |-
            Number of
            active messages in the queue, topic, or subscription.
          optional: true
        - id: parameters.countDetails.deadLetterMessageCount
          type:
            - number
          description: |-
            Number of
            messages that are dead letters.
          optional: true
        - id: parameters.countDetails.scheduledMessageCount
          type:
            - number
          description: |-
            Number
            scheduled messages.
          optional: true
        - id: parameters.countDetails.transferDeadLetterMessageCount
          type:
            - number
          description: Number of messages transferred into dead letters.
          optional: true
        - id: parameters.countDetails.transferMessageCount
          type:
            - number
          description: |-
            Number of
            messages transferred to another queue, topic, or subscription.
          optional: true
        - id: parameters.defaultMessageTimeToLive
          type:
            - string
          description: >-
            Default message time

            to live value. This is the duration after which the message expires,

            starting from when the message is sent to Service Bus. This is the
            default

            value used when TimeToLive is not set on a message itself.
          optional: true
        - id: parameters.duplicateDetectionHistoryTimeWindow
          type:
            - string
          description: >-
            TimeSpan

            structure that defines the duration of the duplicate detection
            history.

            The default value is 10 minutes..
          optional: true
        - id: parameters.enableBatchedOperations
          type:
            - boolean
          description: |-
            Value that indicates
            whether server-side batched operations are enabled..
          optional: true
        - id: parameters.enableExpress
          type:
            - boolean
          description: >-
            Value that indicates whether

            Express Entities are enabled. An express topic holds a message in
            memory

            temporarily before writing it to persistent storage.
          optional: true
        - id: parameters.enablePartitioning
          type:
            - boolean
          description: >-
            Value that indicates

            whether the topic to be partitioned across multiple message brokers
            is

            enabled.
          optional: true
        - id: parameters.enableSubscriptionPartitioning
          type:
            - boolean
          description: |-
            Value that
            indicates whether partitioning is enabled or disabled..
          optional: true
        - id: parameters.filteringMessagesBeforePublishing
          type:
            - boolean
          description: |-
            Whether
            messages should be filtered before publishing.
          optional: true
        - id: parameters.isAnonymousAccessible
          type:
            - boolean
          description: |-
            Value that indicates
            whether the message is anonymous accessible.
          optional: true
        - id: parameters.isExpress
          type:
            - boolean
          description: ''
          optional: true
        - id: parameters.maxSizeInMegabytes
          type:
            - number
          description: |-
            Maximum size of the topic
            in megabytes, which is the size of memory allocated for the topic.
          optional: true
        - id: parameters.requiresDuplicateDetection
          type:
            - boolean
          description: |-
            Value indicating
            if this topic requires duplicate detection.
          optional: true
        - id: parameters.sizeInBytes
          type:
            - number
          description: Size of the topic in bytes.
          optional: true
        - id: parameters.status
          type:
            - string
          description: |-
            Enumerates the possible values for the
            status of a messaging entity. Possible values include: 'Active',
            'Creating', 'Deleting', 'Disabled', 'ReceiveDisabled', 'Renaming',
            'Restoring', 'SendDisabled', 'Unknown'
          optional: true
        - id: parameters.subscriptionCount
          type:
            - number
          description: Number of subscriptions.
          optional: true
        - id: parameters.supportOrdering
          type:
            - boolean
          description: |-
            Value that indicates whether
            the topic supports ordering.
          optional: true
        - id: parameters.updatedAt
          type:
            - date
          description: |-
            The exact time the message has been
            updated.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:TopicResource> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdate(resourceGroupName, namespaceName, topicName,
        parameters, options, callback)
    children:
      - 'azure-arm-sb.Topics#createOrUpdate~client'
      - 'azure-arm-sb.Topics#createOrUpdate~callback'
      - 'azure-arm-sb.Topics#createOrUpdate~options'
      - 'azure-arm-sb.Topics#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdate~regex'
      - 'azure-arm-sb.Topics#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdate~queryParameters'
      - 'azure-arm-sb.Topics#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdate~httpRequest'
      - 'azure-arm-sb.Topics#createOrUpdate~headerName'
      - 'azure-arm-sb.Topics#createOrUpdate~requestContent'
      - 'azure-arm-sb.Topics#createOrUpdate~requestModel'
      - 'azure-arm-sb.Topics#createOrUpdate~requestModelMapper'
      - 'azure-arm-sb.Topics#createOrUpdate~requestModel'
      - 'azure-arm-sb.Topics#createOrUpdate~requestContent'
      - 'azure-arm-sb.Topics#createOrUpdate~serializationError'
  - uid: 'azure-arm-sb.Topics#deleteMethod'
    id: 'azure-arm-sb.Topics#deleteMethod'
    parent: azure-arm-sb.Topics
    name: >-
      deleteMethod(resourceGroupName, namespaceName, topicName, options,
      callback)
    summary: Deletes a topic from the specified namespace and resource group.
    fullName: >-
      azure-arm-sb.Topics.deleteMethod(resourceGroupName, namespaceName,
      topicName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The topics name.
        - id: topicName
          type:
            - string
          description: The topics name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function deleteMethod(resourceGroupName, namespaceName, topicName,
        options, callback)
    children:
      - 'azure-arm-sb.Topics#deleteMethod~client'
      - 'azure-arm-sb.Topics#deleteMethod~callback'
      - 'azure-arm-sb.Topics#deleteMethod~options'
      - 'azure-arm-sb.Topics#deleteMethod~requestUrl'
      - 'azure-arm-sb.Topics#deleteMethod~requestUrl'
      - 'azure-arm-sb.Topics#deleteMethod~requestUrl'
      - 'azure-arm-sb.Topics#deleteMethod~requestUrl'
      - 'azure-arm-sb.Topics#deleteMethod~requestUrl'
      - 'azure-arm-sb.Topics#deleteMethod~regex'
      - 'azure-arm-sb.Topics#deleteMethod~requestUrl'
      - 'azure-arm-sb.Topics#deleteMethod~queryParameters'
      - 'azure-arm-sb.Topics#deleteMethod~requestUrl'
      - 'azure-arm-sb.Topics#deleteMethod~httpRequest'
      - 'azure-arm-sb.Topics#deleteMethod~headerName'
  - uid: 'azure-arm-sb.Topics#get'
    id: 'azure-arm-sb.Topics#get'
    parent: azure-arm-sb.Topics
    name: 'get(resourceGroupName, namespaceName, topicName, options, callback)'
    summary: Returns the description for the specified topic
    fullName: >-
      azure-arm-sb.Topics.get(resourceGroupName, namespaceName, topicName,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:TopicResource> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function get(resourceGroupName, namespaceName, topicName, options,
        callback)
    children:
      - 'azure-arm-sb.Topics#get~client'
      - 'azure-arm-sb.Topics#get~callback'
      - 'azure-arm-sb.Topics#get~options'
      - 'azure-arm-sb.Topics#get~requestUrl'
      - 'azure-arm-sb.Topics#get~requestUrl'
      - 'azure-arm-sb.Topics#get~requestUrl'
      - 'azure-arm-sb.Topics#get~requestUrl'
      - 'azure-arm-sb.Topics#get~requestUrl'
      - 'azure-arm-sb.Topics#get~regex'
      - 'azure-arm-sb.Topics#get~requestUrl'
      - 'azure-arm-sb.Topics#get~queryParameters'
      - 'azure-arm-sb.Topics#get~requestUrl'
      - 'azure-arm-sb.Topics#get~httpRequest'
      - 'azure-arm-sb.Topics#get~headerName'
  - uid: 'azure-arm-sb.Topics#listAuthorizationRules'
    id: 'azure-arm-sb.Topics#listAuthorizationRules'
    parent: azure-arm-sb.Topics
    name: >-
      listAuthorizationRules(resourceGroupName, namespaceName, topicName,
      options, callback)
    summary: Authorization rules for a topic.
    fullName: >-
      azure-arm-sb.Topics.listAuthorizationRules(resourceGroupName,
      namespaceName, topicName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The topic name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SharedAccessAuthorizationRuleListResult>
                               for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function listAuthorizationRules(resourceGroupName, namespaceName,
        topicName, options, callback)
    children:
      - 'azure-arm-sb.Topics#listAuthorizationRules~client'
      - 'azure-arm-sb.Topics#listAuthorizationRules~callback'
      - 'azure-arm-sb.Topics#listAuthorizationRules~options'
      - 'azure-arm-sb.Topics#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRules~regex'
      - 'azure-arm-sb.Topics#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRules~queryParameters'
      - 'azure-arm-sb.Topics#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRules~httpRequest'
      - 'azure-arm-sb.Topics#listAuthorizationRules~headerName'
  - uid: 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule'
    id: 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: >-
      createOrUpdateAuthorizationRule(resourceGroupName, namespaceName,
      topicName, authorizationRuleName, parameters, options, callback)
    summary: Creates an authorizatioRule for the specified topic.
    fullName: >-
      azure-arm-sb.Topics.createOrUpdateAuthorizationRule(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, parameters, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: Aauthorization Rule Name.
        - id: parameters
          type:
            - object
          description: The shared access authorization rule.
        - id: parameters.location
          type:
            - string
          description: data center location.
          optional: true
        - id: parameters.name
          type:
            - string
          description: Name of the AuthorizationRule.
          optional: true
        - id: parameters.rights
          type:
            - array
          description: The rights associated with the rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SharedAccessAuthorizationRuleResource> for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName,
        namespaceName, topicName, authorizationRuleName, parameters, options,
        callback)
    children:
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~client'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~callback'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~options'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~regex'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~queryParameters'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~httpRequest'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~headerName'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestContent'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestModel'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestModelMapper'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestModel'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~requestContent'
      - 'azure-arm-sb.Topics#createOrUpdateAuthorizationRule~serializationError'
  - uid: 'azure-arm-sb.Topics#getAuthorizationRule'
    id: 'azure-arm-sb.Topics#getAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: >-
      getAuthorizationRule(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, options, callback)
    summary: Returns the specified authorizationRule.
    fullName: >-
      azure-arm-sb.Topics.getAuthorizationRule(resourceGroupName, namespaceName,
      topicName, authorizationRuleName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: Authorization rule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SharedAccessAuthorizationRuleResource> for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getAuthorizationRule(resourceGroupName, namespaceName,
        topicName, authorizationRuleName, options, callback)
    children:
      - 'azure-arm-sb.Topics#getAuthorizationRule~client'
      - 'azure-arm-sb.Topics#getAuthorizationRule~callback'
      - 'azure-arm-sb.Topics#getAuthorizationRule~options'
      - 'azure-arm-sb.Topics#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#getAuthorizationRule~regex'
      - 'azure-arm-sb.Topics#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#getAuthorizationRule~queryParameters'
      - 'azure-arm-sb.Topics#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#getAuthorizationRule~httpRequest'
      - 'azure-arm-sb.Topics#getAuthorizationRule~headerName'
  - uid: 'azure-arm-sb.Topics#deleteAuthorizationRule'
    id: 'azure-arm-sb.Topics#deleteAuthorizationRule'
    parent: azure-arm-sb.Topics
    name: >-
      deleteAuthorizationRule(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, options, callback)
    summary: Deletes a topic authorizationRule
    fullName: >-
      azure-arm-sb.Topics.deleteAuthorizationRule(resourceGroupName,
      namespaceName, topicName, authorizationRuleName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: AuthorizationRule Name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function deleteAuthorizationRule(resourceGroupName, namespaceName,
        topicName, authorizationRuleName, options, callback)
    children:
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~client'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~callback'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~options'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~regex'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~queryParameters'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~httpRequest'
      - 'azure-arm-sb.Topics#deleteAuthorizationRule~headerName'
  - uid: 'azure-arm-sb.Topics#listKeys'
    id: 'azure-arm-sb.Topics#listKeys'
    parent: azure-arm-sb.Topics
    name: >-
      listKeys(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, options, callback)
    summary: Primary and Secondary ConnectionStrings to the topic
    fullName: >-
      azure-arm-sb.Topics.listKeys(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationRule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ResourceListKeys> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function listKeys(resourceGroupName, namespaceName, topicName,
        authorizationRuleName, options, callback)
    children:
      - 'azure-arm-sb.Topics#listKeys~client'
      - 'azure-arm-sb.Topics#listKeys~callback'
      - 'azure-arm-sb.Topics#listKeys~options'
      - 'azure-arm-sb.Topics#listKeys~requestUrl'
      - 'azure-arm-sb.Topics#listKeys~requestUrl'
      - 'azure-arm-sb.Topics#listKeys~requestUrl'
      - 'azure-arm-sb.Topics#listKeys~requestUrl'
      - 'azure-arm-sb.Topics#listKeys~requestUrl'
      - 'azure-arm-sb.Topics#listKeys~requestUrl'
      - 'azure-arm-sb.Topics#listKeys~regex'
      - 'azure-arm-sb.Topics#listKeys~requestUrl'
      - 'azure-arm-sb.Topics#listKeys~queryParameters'
      - 'azure-arm-sb.Topics#listKeys~requestUrl'
      - 'azure-arm-sb.Topics#listKeys~httpRequest'
      - 'azure-arm-sb.Topics#listKeys~headerName'
  - uid: 'azure-arm-sb.Topics#regenerateKeys'
    id: 'azure-arm-sb.Topics#regenerateKeys'
    parent: azure-arm-sb.Topics
    name: >-
      regenerateKeys(resourceGroupName, namespaceName, topicName,
      authorizationRuleName, parameters, options, callback)
    summary: Regenerates Primary or Secondary ConnectionStrings to the topic
    fullName: >-
      azure-arm-sb.Topics.regenerateKeys(resourceGroupName, namespaceName,
      topicName, authorizationRuleName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationRule name.
        - id: parameters
          type:
            - object
          description: Parameters supplied to regenerate Auth Rule.
        - id: parameters.policykey
          type:
            - string
          description: |-
            Key that needs to be regenerated .
            Possible values include: 'PrimaryKey', 'SecondaryKey'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ResourceListKeys> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function regenerateKeys(resourceGroupName, namespaceName, topicName,
        authorizationRuleName, parameters, options, callback)
    children:
      - 'azure-arm-sb.Topics#regenerateKeys~client'
      - 'azure-arm-sb.Topics#regenerateKeys~callback'
      - 'azure-arm-sb.Topics#regenerateKeys~options'
      - 'azure-arm-sb.Topics#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Topics#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Topics#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Topics#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Topics#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Topics#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Topics#regenerateKeys~regex'
      - 'azure-arm-sb.Topics#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Topics#regenerateKeys~queryParameters'
      - 'azure-arm-sb.Topics#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Topics#regenerateKeys~httpRequest'
      - 'azure-arm-sb.Topics#regenerateKeys~headerName'
      - 'azure-arm-sb.Topics#regenerateKeys~requestContent'
      - 'azure-arm-sb.Topics#regenerateKeys~requestModel'
      - 'azure-arm-sb.Topics#regenerateKeys~requestModelMapper'
      - 'azure-arm-sb.Topics#regenerateKeys~requestModel'
      - 'azure-arm-sb.Topics#regenerateKeys~requestContent'
      - 'azure-arm-sb.Topics#regenerateKeys~serializationError'
  - uid: 'azure-arm-sb.Topics#listAllNext'
    id: 'azure-arm-sb.Topics#listAllNext'
    parent: azure-arm-sb.Topics
    name: 'listAllNext(nextPageLink, options, callback)'
    summary: Lists all the topics in a namespace.
    fullName: 'azure-arm-sb.Topics.listAllNext(nextPageLink, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:TopicListResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listAllNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-sb.Topics#listAllNext~client'
      - 'azure-arm-sb.Topics#listAllNext~callback'
      - 'azure-arm-sb.Topics#listAllNext~options'
      - 'azure-arm-sb.Topics#listAllNext~requestUrl'
      - 'azure-arm-sb.Topics#listAllNext~requestUrl'
      - 'azure-arm-sb.Topics#listAllNext~regex'
      - 'azure-arm-sb.Topics#listAllNext~requestUrl'
      - 'azure-arm-sb.Topics#listAllNext~httpRequest'
      - 'azure-arm-sb.Topics#listAllNext~headerName'
  - uid: 'azure-arm-sb.Topics#listAuthorizationRulesNext'
    id: 'azure-arm-sb.Topics#listAuthorizationRulesNext'
    parent: azure-arm-sb.Topics
    name: 'listAuthorizationRulesNext(nextPageLink, options, callback)'
    summary: Authorization rules for a topic.
    fullName: >-
      azure-arm-sb.Topics.listAuthorizationRulesNext(nextPageLink, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SharedAccessAuthorizationRuleListResult>
                               for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listAuthorizationRulesNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~client'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~callback'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~options'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~regex'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~requestUrl'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~httpRequest'
      - 'azure-arm-sb.Topics#listAuthorizationRulesNext~headerName'
references:
  - uid: azure-arm-sb.ServiceBusManagementClient
    name: ServiceBusManagementClient
    fullName: azure-arm-sb.ServiceBusManagementClient
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true

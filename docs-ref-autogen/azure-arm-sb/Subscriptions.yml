### YamlMime:UniversalReference
items:
  - uid: azure-arm-sb.Subscriptions
    id: azure-arm-sb.Subscriptions
    name: Subscriptions
    summary: |-
      Subscriptions
      __NOTE__: An instance of this class is automatically created for an
      instance of the ServiceBusManagementClient.
      Initializes a new instance of the Subscriptions class.
    fullName: azure-arm-sb.Subscriptions
    source:
      id: azure-arm-sb.Subscriptions
      path: lib\services\serviceBusManagement2\lib\operations\subscriptions.js
      startLine: 977
      remote:
        branch: master
        path: lib\services\serviceBusManagement2\lib\operations\subscriptions.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    langs:
      - js
    type: Class
    children:
      - 'azure-arm-sb.Subscriptions.#ctor'
      - 'azure-arm-sb.Subscriptions#listAllWithHttpOperationResponse'
      - 'azure-arm-sb.Subscriptions#listAll'
      - 'azure-arm-sb.Subscriptions#createOrUpdateWithHttpOperationResponse'
      - 'azure-arm-sb.Subscriptions#createOrUpdate'
      - 'azure-arm-sb.Subscriptions#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-sb.Subscriptions#deleteMethod'
      - 'azure-arm-sb.Subscriptions#getWithHttpOperationResponse'
      - 'azure-arm-sb.Subscriptions#get'
      - 'azure-arm-sb.Subscriptions#listAllNextWithHttpOperationResponse'
      - 'azure-arm-sb.Subscriptions#listAllNext'
  - id: 'azure-arm-sb.Subscriptions.#ctor'
    uid: 'azure-arm-sb.Subscriptions.#ctor'
    parent: azure-arm-sb.Subscriptions
    name: Subscriptions(client)
    fullName: azure-arm-sb.Subscriptions.Subscriptions(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-sb.ServiceBusManagementClient
          description: Reference to the service client.
      content: new Subscriptions(client)
    langs:
      - js
  - uid: 'azure-arm-sb.Subscriptions#listAllWithHttpOperationResponse'
    id: 'azure-arm-sb.Subscriptions#listAllWithHttpOperationResponse'
    parent: azure-arm-sb.Subscriptions
    name: >-
      listAllWithHttpOperationResponse(resourceGroupName, namespaceName,
      topicName, options)
    summary: List all the subscriptions under a specified topic.
    fullName: >-
      azure-arm-sb.Subscriptions.listAllWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listAllWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, options)
  - uid: 'azure-arm-sb.Subscriptions#listAll'
    id: 'azure-arm-sb.Subscriptions#listAll'
    parent: azure-arm-sb.Subscriptions
    name: >-
      listAll(resourceGroupName, namespaceName, topicName, options,
      optionalCallback)
    summary: List all the subscriptions under a specified topic.
    fullName: >-
      azure-arm-sb.Subscriptions.listAll(resourceGroupName, namespaceName,
      topicName, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAll(resourceGroupName, namespaceName, topicName, options,
        optionalCallback)
  - uid: 'azure-arm-sb.Subscriptions#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-sb.Subscriptions#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-sb.Subscriptions
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, namespaceName,
      topicName, subscriptionName, parameters, options)
    summary: Creates a topic subscription.
    fullName: >-
      azure-arm-sb.Subscriptions.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, subscriptionName, parameters, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: subscriptionName
          type:
            - string
          description: The subscription name.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to create a subscription
            resource.
        - id: parameters.location
          type:
            - string
          description: Subscription data center location.
        - id: parameters.type
          type:
            - string
          description: Resource manager type of the resource.
          optional: true
        - id: parameters.autoDeleteOnIdle
          type:
            - string
          description: >-
            TimeSpan idle interval after

            which the topic is automatically deleted. The minimum duration is 5
            minutes.
          optional: true
        - id: parameters.defaultMessageTimeToLive
          type:
            - string
          description: >-
            Default message time

            to live value. This is the duration after which the message expires,

            starting from when the message is sent to Service Bus. This is the
            default

            value used when TimeToLive is not set on a message itself.
          optional: true
        - id: parameters.deadLetteringOnFilterEvaluationExceptions
          type:
            - boolean
          description: >-
            Value that indicates whether a subscription has dead letter support
            on

            filter evaluation exceptions.
          optional: true
        - id: parameters.deadLetteringOnMessageExpiration
          type:
            - boolean
          description: >-
            Value that

            indicates whether a subscription has dead letter support when a
            message

            expires.
          optional: true
        - id: parameters.enableBatchedOperations
          type:
            - boolean
          description: |-
            Value that indicates
            whether server-side batched operations are enabled.
          optional: true
        - id: parameters.entityAvailabilityStatus
          type:
            - string
          description: >-
            Entity availability

            status for the topic. Possible values include: 'Available',
            'Limited',

            'Renaming', 'Restoring', 'Unknown'
          optional: true
        - id: parameters.isReadOnly
          type:
            - boolean
          description: |-
            Value that indicates whether the
            entity description is read-only.
          optional: true
        - id: parameters.lockDuration
          type:
            - string
          description: |-
            The lock duration time span for
            the subscription.
          optional: true
        - id: parameters.maxDeliveryCount
          type:
            - number
          description: Number of maximum deliveries.
          optional: true
        - id: parameters.requiresSession
          type:
            - boolean
          description: |-
            Value indicating if a
            subscription supports the concept of sessions.
          optional: true
        - id: parameters.status
          type:
            - string
          description: >-
            Enumerates the possible values for the

            status of a messaging entity. Possible values include: 'Active',
            'Creating',

            'Deleting', 'Disabled', 'ReceiveDisabled', 'Renaming', 'Restoring',

            'SendDisabled', 'Unknown'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, subscriptionName, parameters, options)
  - uid: 'azure-arm-sb.Subscriptions#createOrUpdate'
    id: 'azure-arm-sb.Subscriptions#createOrUpdate'
    parent: azure-arm-sb.Subscriptions
    name: >-
      createOrUpdate(resourceGroupName, namespaceName, topicName,
      subscriptionName, parameters, options, optionalCallback)
    summary: Creates a topic subscription.
    fullName: >-
      azure-arm-sb.Subscriptions.createOrUpdate(resourceGroupName,
      namespaceName, topicName, subscriptionName, parameters, options,
      optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: subscriptionName
          type:
            - string
          description: The subscription name.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to create a subscription
            resource.
        - id: parameters.location
          type:
            - string
          description: Subscription data center location.
        - id: parameters.type
          type:
            - string
          description: Resource manager type of the resource.
          optional: true
        - id: parameters.autoDeleteOnIdle
          type:
            - string
          description: >-
            TimeSpan idle interval after

            which the topic is automatically deleted. The minimum duration is 5
            minutes.
          optional: true
        - id: parameters.defaultMessageTimeToLive
          type:
            - string
          description: >-
            Default message time

            to live value. This is the duration after which the message expires,

            starting from when the message is sent to Service Bus. This is the
            default

            value used when TimeToLive is not set on a message itself.
          optional: true
        - id: parameters.deadLetteringOnFilterEvaluationExceptions
          type:
            - boolean
          description: >-
            Value that indicates whether a subscription has dead letter support
            on

            filter evaluation exceptions.
          optional: true
        - id: parameters.deadLetteringOnMessageExpiration
          type:
            - boolean
          description: >-
            Value that

            indicates whether a subscription has dead letter support when a
            message

            expires.
          optional: true
        - id: parameters.enableBatchedOperations
          type:
            - boolean
          description: |-
            Value that indicates
            whether server-side batched operations are enabled.
          optional: true
        - id: parameters.entityAvailabilityStatus
          type:
            - string
          description: >-
            Entity availability

            status for the topic. Possible values include: 'Available',
            'Limited',

            'Renaming', 'Restoring', 'Unknown'
          optional: true
        - id: parameters.isReadOnly
          type:
            - boolean
          description: |-
            Value that indicates whether the
            entity description is read-only.
          optional: true
        - id: parameters.lockDuration
          type:
            - string
          description: |-
            The lock duration time span for
            the subscription.
          optional: true
        - id: parameters.maxDeliveryCount
          type:
            - number
          description: Number of maximum deliveries.
          optional: true
        - id: parameters.requiresSession
          type:
            - boolean
          description: |-
            Value indicating if a
            subscription supports the concept of sessions.
          optional: true
        - id: parameters.status
          type:
            - string
          description: >-
            Enumerates the possible values for the

            status of a messaging entity. Possible values include: 'Active',
            'Creating',

            'Deleting', 'Disabled', 'ReceiveDisabled', 'Renaming', 'Restoring',

            'SendDisabled', 'Unknown'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, namespaceName, topicName,
        subscriptionName, parameters, options, optionalCallback)
  - uid: 'azure-arm-sb.Subscriptions#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-sb.Subscriptions#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-sb.Subscriptions
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, namespaceName,
      topicName, subscriptionName, options)
    summary: Deletes a subscription from the specified topic.
    fullName: >-
      azure-arm-sb.Subscriptions.deleteMethodWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, subscriptionName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: subscriptionName
          type:
            - string
          description: The subscription name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        namespaceName, topicName, subscriptionName, options)
  - uid: 'azure-arm-sb.Subscriptions#deleteMethod'
    id: 'azure-arm-sb.Subscriptions#deleteMethod'
    parent: azure-arm-sb.Subscriptions
    name: >-
      deleteMethod(resourceGroupName, namespaceName, topicName,
      subscriptionName, options, optionalCallback)
    summary: Deletes a subscription from the specified topic.
    fullName: >-
      azure-arm-sb.Subscriptions.deleteMethod(resourceGroupName, namespaceName,
      topicName, subscriptionName, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: subscriptionName
          type:
            - string
          description: The subscription name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, namespaceName, topicName,
        subscriptionName, options, optionalCallback)
  - uid: 'azure-arm-sb.Subscriptions#getWithHttpOperationResponse'
    id: 'azure-arm-sb.Subscriptions#getWithHttpOperationResponse'
    parent: azure-arm-sb.Subscriptions
    name: >-
      getWithHttpOperationResponse(resourceGroupName, namespaceName, topicName,
      subscriptionName, options)
    summary: Returns a subscription description for the specified topic.
    fullName: >-
      azure-arm-sb.Subscriptions.getWithHttpOperationResponse(resourceGroupName,
      namespaceName, topicName, subscriptionName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: subscriptionName
          type:
            - string
          description: The subscription name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, namespaceName,
        topicName, subscriptionName, options)
  - uid: 'azure-arm-sb.Subscriptions#get'
    id: 'azure-arm-sb.Subscriptions#get'
    parent: azure-arm-sb.Subscriptions
    name: >-
      get(resourceGroupName, namespaceName, topicName, subscriptionName,
      options, optionalCallback)
    summary: Returns a subscription description for the specified topic.
    fullName: >-
      azure-arm-sb.Subscriptions.get(resourceGroupName, namespaceName,
      topicName, subscriptionName, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the Resource group within the
            Azure subscription.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: topicName
          type:
            - string
          description: The topic name.
        - id: subscriptionName
          type:
            - string
          description: The subscription name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, namespaceName, topicName,
        subscriptionName, options, optionalCallback)
  - uid: 'azure-arm-sb.Subscriptions#listAllNextWithHttpOperationResponse'
    id: 'azure-arm-sb.Subscriptions#listAllNextWithHttpOperationResponse'
    parent: azure-arm-sb.Subscriptions
    name: 'listAllNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List all the subscriptions under a specified topic.
    fullName: >-
      azure-arm-sb.Subscriptions.listAllNextWithHttpOperationResponse(nextPageLink,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listAllNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-arm-sb.Subscriptions#listAllNext'
    id: 'azure-arm-sb.Subscriptions#listAllNext'
    parent: azure-arm-sb.Subscriptions
    name: 'listAllNext(nextPageLink, options, optionalCallback)'
    summary: List all the subscriptions under a specified topic.
    fullName: >-
      azure-arm-sb.Subscriptions.listAllNext(nextPageLink, options,
      optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listAllNext(nextPageLink, options, optionalCallback)'
references:
  - uid: azure-arm-sb.ServiceBusManagementClient
    name: ServiceBusManagementClient
    fullName: azure-arm-sb.ServiceBusManagementClient
    isExternal: false

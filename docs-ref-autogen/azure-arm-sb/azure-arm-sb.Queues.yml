### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-sb.Queues
    id: azure-arm-sb.Queues
    name: Queues
    summary: |-
      Queues
      __NOTE__: An instance of this class is automatically created for an
      instance of the ServiceBusManagementClient.
      Initializes a new instance of the Queues class.
    fullName: azure-arm-sb.Queues
    type: Class
    children:
      - 'azure-arm-sb.Queues.#ctor'
      - 'azure-arm-sb.Queues#client'
      - 'azure-arm-sb.Queues#listAll'
      - 'azure-arm-sb.Queues#createOrUpdate'
      - 'azure-arm-sb.Queues#deleteMethod'
      - 'azure-arm-sb.Queues#get'
      - 'azure-arm-sb.Queues#listAuthorizationRules'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule'
      - 'azure-arm-sb.Queues#getAuthorizationRule'
      - 'azure-arm-sb.Queues#listKeys'
      - 'azure-arm-sb.Queues#regenerateKeys'
      - 'azure-arm-sb.Queues#listAllNext'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext'
  - id: 'azure-arm-sb.Queues.#ctor'
    uid: 'azure-arm-sb.Queues.#ctor'
    parent: azure-arm-sb.Queues
    name: Queues(client)
    fullName: azure-arm-sb.Queues.Queues(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-sb.ServiceBusManagementClient
          description: Reference to the service client.
      content: new Queues(client)
  - uid: 'azure-arm-sb.Queues#client'
    id: 'azure-arm-sb.Queues#client'
    parent: azure-arm-sb.Queues
    name: client
    summary: ''
    fullName: azure-arm-sb.Queues.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-sb.Queues#listAll'
    id: 'azure-arm-sb.Queues#listAll'
    parent: azure-arm-sb.Queues
    name: 'listAll(resourceGroupName, namespaceName, options, callback)'
    summary: Lists the queues within the namespace.
    fullName: >-
      azure-arm-sb.Queues.listAll(resourceGroupName, namespaceName, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:QueueListResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listAll(resourceGroupName, namespaceName, options, callback)'
    children:
      - 'azure-arm-sb.Queues#listAll~client'
      - 'azure-arm-sb.Queues#listAll~callback'
      - 'azure-arm-sb.Queues#listAll~options'
      - 'azure-arm-sb.Queues#listAll~requestUrl'
      - 'azure-arm-sb.Queues#listAll~requestUrl'
      - 'azure-arm-sb.Queues#listAll~requestUrl'
      - 'azure-arm-sb.Queues#listAll~requestUrl'
      - 'azure-arm-sb.Queues#listAll~regex'
      - 'azure-arm-sb.Queues#listAll~requestUrl'
      - 'azure-arm-sb.Queues#listAll~queryParameters'
      - 'azure-arm-sb.Queues#listAll~requestUrl'
      - 'azure-arm-sb.Queues#listAll~httpRequest'
      - 'azure-arm-sb.Queues#listAll~headerName'
  - uid: 'azure-arm-sb.Queues#createOrUpdate'
    id: 'azure-arm-sb.Queues#createOrUpdate'
    parent: azure-arm-sb.Queues
    name: >-
      createOrUpdate(resourceGroupName, namespaceName, queueName, parameters,
      options, callback)
    summary: Creates/Updates a service Queue. This operation is idempotent.
    fullName: >-
      azure-arm-sb.Queues.createOrUpdate(resourceGroupName, namespaceName,
      queueName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: parameters
          type:
            - object
          description: Parameters supplied to create a Queue Resource.
        - id: parameters.name
          type:
            - string
          description: Queue name.
          optional: true
        - id: parameters.location
          type:
            - string
          description: location of the resource.
        - id: parameters.lockDuration
          type:
            - string
          description: >-
            the duration of a peek lock; that

            is, the amount of time that the message is locked for other
            receivers. The

            maximum value for LockDuration is 5 minutes; the default value is 1
            minute.
          optional: true
        - id: parameters.accessedAt
          type:
            - date
          description: |-
            Last time a message was sent, or the
            last time there was a receive request to this queue.
          optional: true
        - id: parameters.autoDeleteOnIdle
          type:
            - string
          description: >-
            the TimeSpan idle interval

            after which the queue is automatically deleted. The minimum duration
            is 5

            minutes.
          optional: true
        - id: parameters.entityAvailabilityStatus
          type:
            - string
          description: >-
            Entity availability

            status for the queue. Possible values include: 'Available',
            'Limited',

            'Renaming', 'Restoring', 'Unknown'
          optional: true
        - id: parameters.createdAt
          type:
            - date
          description: the exact time the message was created.
          optional: true
        - id: parameters.defaultMessageTimeToLive
          type:
            - string
          description: >-
            the default message

            time to live value. This is the duration after which the message
            expires,

            starting from when the message is sent to Service Bus. This is the
            default

            value used when TimeToLive is not set on a message itself.
          optional: true
        - id: parameters.duplicateDetectionHistoryTimeWindow
          type:
            - string
          description: >-
            TimeSpan

            structure that defines the duration of the duplicate detection
            history.

            The default value is 10 minutes..
          optional: true
        - id: parameters.enableBatchedOperations
          type:
            - boolean
          description: |-
            value that indicates
            whether server-side batched operations are enabled..
          optional: true
        - id: parameters.deadLetteringOnMessageExpiration
          type:
            - boolean
          description: |-
            a value that
            indicates whether this queue has dead letter support when a message
            expires.
          optional: true
        - id: parameters.enableExpress
          type:
            - boolean
          description: >-
            a value that indicates whether

            Express Entities are enabled. An express queue holds a message in
            memory

            temporarily before writing it to persistent storage.
          optional: true
        - id: parameters.enablePartitioning
          type:
            - boolean
          description: >-
            value that indicates

            whether the queue to be partitioned across multiple message brokers
            is

            enabled.
          optional: true
        - id: parameters.isAnonymousAccessible
          type:
            - boolean
          description: |-
            a value that indicates
            whether the message is anonymous accessible.
          optional: true
        - id: parameters.maxDeliveryCount
          type:
            - number
          description: >-
            the maximum delivery count. A

            message is automatically deadlettered after this number of
            deliveries.
          optional: true
        - id: parameters.maxSizeInMegabytes
          type:
            - number
          description: >-
            the maximum size of the

            queue in megabytes, which is the size of memory allocated for the
            queue.
          optional: true
        - id: parameters.messageCount
          type:
            - number
          description: |-
            the number of messages in the
            queue.
          optional: true
        - id: parameters.countDetails
          type:
            - object
          description: ''
          optional: true
        - id: parameters.countDetails.activeMessageCount
          type:
            - number
          description: |-
            Number of
            active messages in the queue, topic, or subscription.
          optional: true
        - id: parameters.countDetails.deadLetterMessageCount
          type:
            - number
          description: |-
            Number of
            messages that are dead letters.
          optional: true
        - id: parameters.countDetails.scheduledMessageCount
          type:
            - number
          description: |-
            Number
            scheduled messages.
          optional: true
        - id: parameters.countDetails.transferDeadLetterMessageCount
          type:
            - number
          description: Number of messages transferred into dead letters.
          optional: true
        - id: parameters.countDetails.transferMessageCount
          type:
            - number
          description: |-
            Number of
            messages transferred to another queue, topic, or subscription.
          optional: true
        - id: parameters.requiresDuplicateDetection
          type:
            - boolean
          description: |-
            the value
            indicating if this queue requires duplicate detection.
          optional: true
        - id: parameters.requiresSession
          type:
            - boolean
          description: |-
            a value that indicates
            whether the queue supports the concept of session.
          optional: true
        - id: parameters.sizeInBytes
          type:
            - number
          description: the size of the queue in bytes.
          optional: true
        - id: parameters.status
          type:
            - string
          description: |-
            Enumerates the possible values for the
            status of a messaging entity. Possible values include: 'Active',
            'Creating', 'Deleting', 'Disabled', 'ReceiveDisabled', 'Renaming',
            'Restoring', 'SendDisabled', 'Unknown'
          optional: true
        - id: parameters.supportOrdering
          type:
            - boolean
          description: |-
            a value that indicates
            whether the queue supports ordering.
          optional: true
        - id: parameters.updatedAt
          type:
            - date
          description: |-
            the exact time the message has been
            updated.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:QueueResource> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdate(resourceGroupName, namespaceName, queueName,
        parameters, options, callback)
    children:
      - 'azure-arm-sb.Queues#createOrUpdate~client'
      - 'azure-arm-sb.Queues#createOrUpdate~callback'
      - 'azure-arm-sb.Queues#createOrUpdate~options'
      - 'azure-arm-sb.Queues#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdate~regex'
      - 'azure-arm-sb.Queues#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdate~queryParameters'
      - 'azure-arm-sb.Queues#createOrUpdate~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdate~httpRequest'
      - 'azure-arm-sb.Queues#createOrUpdate~headerName'
      - 'azure-arm-sb.Queues#createOrUpdate~requestContent'
      - 'azure-arm-sb.Queues#createOrUpdate~requestModel'
      - 'azure-arm-sb.Queues#createOrUpdate~requestModelMapper'
      - 'azure-arm-sb.Queues#createOrUpdate~requestModel'
      - 'azure-arm-sb.Queues#createOrUpdate~requestContent'
      - 'azure-arm-sb.Queues#createOrUpdate~serializationError'
  - uid: 'azure-arm-sb.Queues#deleteMethod'
    id: 'azure-arm-sb.Queues#deleteMethod'
    parent: azure-arm-sb.Queues
    name: >-
      deleteMethod(resourceGroupName, namespaceName, queueName, options,
      callback)
    summary: Deletes a queue from the specified namespace in resource group.
    fullName: >-
      azure-arm-sb.Queues.deleteMethod(resourceGroupName, namespaceName,
      queueName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function deleteMethod(resourceGroupName, namespaceName, queueName,
        options, callback)
    children:
      - 'azure-arm-sb.Queues#deleteMethod~client'
      - 'azure-arm-sb.Queues#deleteMethod~callback'
      - 'azure-arm-sb.Queues#deleteMethod~options'
      - 'azure-arm-sb.Queues#deleteMethod~requestUrl'
      - 'azure-arm-sb.Queues#deleteMethod~requestUrl'
      - 'azure-arm-sb.Queues#deleteMethod~requestUrl'
      - 'azure-arm-sb.Queues#deleteMethod~requestUrl'
      - 'azure-arm-sb.Queues#deleteMethod~requestUrl'
      - 'azure-arm-sb.Queues#deleteMethod~regex'
      - 'azure-arm-sb.Queues#deleteMethod~requestUrl'
      - 'azure-arm-sb.Queues#deleteMethod~queryParameters'
      - 'azure-arm-sb.Queues#deleteMethod~requestUrl'
      - 'azure-arm-sb.Queues#deleteMethod~httpRequest'
      - 'azure-arm-sb.Queues#deleteMethod~headerName'
  - uid: 'azure-arm-sb.Queues#get'
    id: 'azure-arm-sb.Queues#get'
    parent: azure-arm-sb.Queues
    name: 'get(resourceGroupName, namespaceName, queueName, options, callback)'
    summary: Returns the description for the specified queue.
    fullName: >-
      azure-arm-sb.Queues.get(resourceGroupName, namespaceName, queueName,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:QueueResource> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function get(resourceGroupName, namespaceName, queueName, options,
        callback)
    children:
      - 'azure-arm-sb.Queues#get~client'
      - 'azure-arm-sb.Queues#get~callback'
      - 'azure-arm-sb.Queues#get~options'
      - 'azure-arm-sb.Queues#get~requestUrl'
      - 'azure-arm-sb.Queues#get~requestUrl'
      - 'azure-arm-sb.Queues#get~requestUrl'
      - 'azure-arm-sb.Queues#get~requestUrl'
      - 'azure-arm-sb.Queues#get~requestUrl'
      - 'azure-arm-sb.Queues#get~regex'
      - 'azure-arm-sb.Queues#get~requestUrl'
      - 'azure-arm-sb.Queues#get~queryParameters'
      - 'azure-arm-sb.Queues#get~requestUrl'
      - 'azure-arm-sb.Queues#get~httpRequest'
      - 'azure-arm-sb.Queues#get~headerName'
  - uid: 'azure-arm-sb.Queues#listAuthorizationRules'
    id: 'azure-arm-sb.Queues#listAuthorizationRules'
    parent: azure-arm-sb.Queues
    name: >-
      listAuthorizationRules(resourceGroupName, namespaceName, queueName,
      options, callback)
    summary: Returns all Queue authorizationRules.
    fullName: >-
      azure-arm-sb.Queues.listAuthorizationRules(resourceGroupName,
      namespaceName, queueName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SharedAccessAuthorizationRuleListResult>
                               for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function listAuthorizationRules(resourceGroupName, namespaceName,
        queueName, options, callback)
    children:
      - 'azure-arm-sb.Queues#listAuthorizationRules~client'
      - 'azure-arm-sb.Queues#listAuthorizationRules~callback'
      - 'azure-arm-sb.Queues#listAuthorizationRules~options'
      - 'azure-arm-sb.Queues#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRules~regex'
      - 'azure-arm-sb.Queues#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRules~queryParameters'
      - 'azure-arm-sb.Queues#listAuthorizationRules~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRules~httpRequest'
      - 'azure-arm-sb.Queues#listAuthorizationRules~headerName'
  - uid: 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule'
    id: 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: >-
      createOrUpdateAuthorizationRule(resourceGroupName, namespaceName,
      queueName, authorizationRuleName, parameters, options, callback)
    summary: Creates an authorization rule for a queue
    fullName: >-
      azure-arm-sb.Queues.createOrUpdateAuthorizationRule(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, parameters, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: Aauthorization Rule Name.
        - id: parameters
          type:
            - object
          description: The shared access authorization rule.
        - id: parameters.location
          type:
            - string
          description: data center location.
          optional: true
        - id: parameters.name
          type:
            - string
          description: Name of the AuthorizationRule.
          optional: true
        - id: parameters.rights
          type:
            - array
          description: The rights associated with the rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SharedAccessAuthorizationRuleResource> for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdateAuthorizationRule(resourceGroupName,
        namespaceName, queueName, authorizationRuleName, parameters, options,
        callback)
    children:
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~client'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~callback'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~options'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~regex'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~queryParameters'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~httpRequest'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~headerName'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestContent'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestModel'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestModelMapper'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestModel'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~requestContent'
      - 'azure-arm-sb.Queues#createOrUpdateAuthorizationRule~serializationError'
  - uid: 'azure-arm-sb.Queues#deleteAuthorizationRule'
    id: 'azure-arm-sb.Queues#deleteAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: >-
      deleteAuthorizationRule(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, options, callback)
    summary: Deletes a queue authorization rule
    fullName: >-
      azure-arm-sb.Queues.deleteAuthorizationRule(resourceGroupName,
      namespaceName, queueName, authorizationRuleName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: Authorization Rule Name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function deleteAuthorizationRule(resourceGroupName, namespaceName,
        queueName, authorizationRuleName, options, callback)
    children:
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~client'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~callback'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~options'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~regex'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~queryParameters'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~httpRequest'
      - 'azure-arm-sb.Queues#deleteAuthorizationRule~headerName'
  - uid: 'azure-arm-sb.Queues#getAuthorizationRule'
    id: 'azure-arm-sb.Queues#getAuthorizationRule'
    parent: azure-arm-sb.Queues
    name: >-
      getAuthorizationRule(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, options, callback)
    summary: Queue authorizationRule for a queue by name.
    fullName: >-
      azure-arm-sb.Queues.getAuthorizationRule(resourceGroupName, namespaceName,
      queueName, authorizationRuleName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: Authorization rule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SharedAccessAuthorizationRuleResource> for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getAuthorizationRule(resourceGroupName, namespaceName,
        queueName, authorizationRuleName, options, callback)
    children:
      - 'azure-arm-sb.Queues#getAuthorizationRule~client'
      - 'azure-arm-sb.Queues#getAuthorizationRule~callback'
      - 'azure-arm-sb.Queues#getAuthorizationRule~options'
      - 'azure-arm-sb.Queues#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#getAuthorizationRule~regex'
      - 'azure-arm-sb.Queues#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#getAuthorizationRule~queryParameters'
      - 'azure-arm-sb.Queues#getAuthorizationRule~requestUrl'
      - 'azure-arm-sb.Queues#getAuthorizationRule~httpRequest'
      - 'azure-arm-sb.Queues#getAuthorizationRule~headerName'
  - uid: 'azure-arm-sb.Queues#listKeys'
    id: 'azure-arm-sb.Queues#listKeys'
    parent: azure-arm-sb.Queues
    name: >-
      listKeys(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, options, callback)
    summary: Primary and Secondary ConnectionStrings to the queue.
    fullName: >-
      azure-arm-sb.Queues.listKeys(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationRule name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ResourceListKeys> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function listKeys(resourceGroupName, namespaceName, queueName,
        authorizationRuleName, options, callback)
    children:
      - 'azure-arm-sb.Queues#listKeys~client'
      - 'azure-arm-sb.Queues#listKeys~callback'
      - 'azure-arm-sb.Queues#listKeys~options'
      - 'azure-arm-sb.Queues#listKeys~requestUrl'
      - 'azure-arm-sb.Queues#listKeys~requestUrl'
      - 'azure-arm-sb.Queues#listKeys~requestUrl'
      - 'azure-arm-sb.Queues#listKeys~requestUrl'
      - 'azure-arm-sb.Queues#listKeys~requestUrl'
      - 'azure-arm-sb.Queues#listKeys~requestUrl'
      - 'azure-arm-sb.Queues#listKeys~regex'
      - 'azure-arm-sb.Queues#listKeys~requestUrl'
      - 'azure-arm-sb.Queues#listKeys~queryParameters'
      - 'azure-arm-sb.Queues#listKeys~requestUrl'
      - 'azure-arm-sb.Queues#listKeys~httpRequest'
      - 'azure-arm-sb.Queues#listKeys~headerName'
  - uid: 'azure-arm-sb.Queues#regenerateKeys'
    id: 'azure-arm-sb.Queues#regenerateKeys'
    parent: azure-arm-sb.Queues
    name: >-
      regenerateKeys(resourceGroupName, namespaceName, queueName,
      authorizationRuleName, parameters, options, callback)
    summary: Regenerates the Primary or Secondary ConnectionStrings to the Queue
    fullName: >-
      azure-arm-sb.Queues.regenerateKeys(resourceGroupName, namespaceName,
      queueName, authorizationRuleName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: namespaceName
          type:
            - string
          description: The namespace name.
        - id: queueName
          type:
            - string
          description: The queue name.
        - id: authorizationRuleName
          type:
            - string
          description: The authorizationRule name
        - id: parameters
          type:
            - object
          description: Parameters supplied to regenerate Auth Rule.
        - id: parameters.policykey
          type:
            - string
          description: |-
            Key that needs to be regenerated .
            Possible values include: 'PrimaryKey', 'SecondaryKey'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ResourceListKeys> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function regenerateKeys(resourceGroupName, namespaceName, queueName,
        authorizationRuleName, parameters, options, callback)
    children:
      - 'azure-arm-sb.Queues#regenerateKeys~client'
      - 'azure-arm-sb.Queues#regenerateKeys~callback'
      - 'azure-arm-sb.Queues#regenerateKeys~options'
      - 'azure-arm-sb.Queues#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Queues#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Queues#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Queues#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Queues#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Queues#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Queues#regenerateKeys~regex'
      - 'azure-arm-sb.Queues#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Queues#regenerateKeys~queryParameters'
      - 'azure-arm-sb.Queues#regenerateKeys~requestUrl'
      - 'azure-arm-sb.Queues#regenerateKeys~httpRequest'
      - 'azure-arm-sb.Queues#regenerateKeys~headerName'
      - 'azure-arm-sb.Queues#regenerateKeys~requestContent'
      - 'azure-arm-sb.Queues#regenerateKeys~requestModel'
      - 'azure-arm-sb.Queues#regenerateKeys~requestModelMapper'
      - 'azure-arm-sb.Queues#regenerateKeys~requestModel'
      - 'azure-arm-sb.Queues#regenerateKeys~requestContent'
      - 'azure-arm-sb.Queues#regenerateKeys~serializationError'
  - uid: 'azure-arm-sb.Queues#listAllNext'
    id: 'azure-arm-sb.Queues#listAllNext'
    parent: azure-arm-sb.Queues
    name: 'listAllNext(nextPageLink, options, callback)'
    summary: Lists the queues within the namespace.
    fullName: 'azure-arm-sb.Queues.listAllNext(nextPageLink, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:QueueListResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listAllNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-sb.Queues#listAllNext~client'
      - 'azure-arm-sb.Queues#listAllNext~callback'
      - 'azure-arm-sb.Queues#listAllNext~options'
      - 'azure-arm-sb.Queues#listAllNext~requestUrl'
      - 'azure-arm-sb.Queues#listAllNext~requestUrl'
      - 'azure-arm-sb.Queues#listAllNext~regex'
      - 'azure-arm-sb.Queues#listAllNext~requestUrl'
      - 'azure-arm-sb.Queues#listAllNext~httpRequest'
      - 'azure-arm-sb.Queues#listAllNext~headerName'
  - uid: 'azure-arm-sb.Queues#listAuthorizationRulesNext'
    id: 'azure-arm-sb.Queues#listAuthorizationRulesNext'
    parent: azure-arm-sb.Queues
    name: 'listAuthorizationRulesNext(nextPageLink, options, callback)'
    summary: Returns all Queue authorizationRules.
    fullName: >-
      azure-arm-sb.Queues.listAuthorizationRulesNext(nextPageLink, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SharedAccessAuthorizationRuleListResult>
                               for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listAuthorizationRulesNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~client'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~callback'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~options'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~regex'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~requestUrl'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~httpRequest'
      - 'azure-arm-sb.Queues#listAuthorizationRulesNext~headerName'
references:
  - uid: azure-arm-sb.ServiceBusManagementClient
    name: ServiceBusManagementClient
    fullName: azure-arm-sb.ServiceBusManagementClient
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true

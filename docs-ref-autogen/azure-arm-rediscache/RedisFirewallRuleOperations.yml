### YamlMime:UniversalReference
items:
  - uid: azure-arm-rediscache.RedisFirewallRuleOperations
    id: azure-arm-rediscache.RedisFirewallRuleOperations
    name: RedisFirewallRuleOperations
    summary: |-
      RedisFirewallRuleOperations
      __NOTE__: An instance of this class is automatically created for an
      instance of the RedisManagementClient.
      Initializes a new instance of the RedisFirewallRuleOperations class.
    fullName: azure-arm-rediscache.RedisFirewallRuleOperations
    source:
      id: azure-arm-rediscache.RedisFirewallRuleOperations
      path: >-
        lib\services\rediscachemanagement\lib\operations\redisFirewallRuleOperations.js
      startLine: 503
      remote:
        branch: jsdoc
        path: >-
          lib\services\rediscachemanagement\lib\operations\redisFirewallRuleOperations.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-rediscache.RedisFirewallRuleOperations.#ctor'
      - >-
        azure-arm-rediscache.RedisFirewallRuleOperations#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-rediscache.RedisFirewallRuleOperations#createOrUpdate'
      - >-
        azure-arm-rediscache.RedisFirewallRuleOperations#getWithHttpOperationResponse
      - 'azure-arm-rediscache.RedisFirewallRuleOperations#get'
      - >-
        azure-arm-rediscache.RedisFirewallRuleOperations#deleteMethodWithHttpOperationResponse
      - 'azure-arm-rediscache.RedisFirewallRuleOperations#deleteMethod'
    langs:
      - js
  - id: 'azure-arm-rediscache.RedisFirewallRuleOperations.#ctor'
    uid: 'azure-arm-rediscache.RedisFirewallRuleOperations.#ctor'
    parent: azure-arm-rediscache.RedisFirewallRuleOperations
    name: RedisFirewallRuleOperations(client)
    fullName: >-
      azure-arm-rediscache.RedisFirewallRuleOperations.RedisFirewallRuleOperations(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-rediscache.RedisManagementClient
          description: Reference to the service client.
      content: new RedisFirewallRuleOperations(client)
    langs:
      - js
  - uid: >-
      azure-arm-rediscache.RedisFirewallRuleOperations#createOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-rediscache.RedisFirewallRuleOperations#createOrUpdateWithHttpOperationResponse
    parent: azure-arm-rediscache.RedisFirewallRuleOperations
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, cacheName,
      ruleName, parameters, options)
    summary: Create or update a redis cache firewall rule
    fullName: >-
      azure-arm-rediscache.RedisFirewallRuleOperations.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      cacheName, ruleName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RedisFirewallRule>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<RedisFirewallRule>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: cacheName
          type:
            - string
          description: The name of the Redis cache.
        - id: ruleName
          type:
            - string
          description: The name of the firewall rule.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the create or update redis
            firewall rule operation.
        - id: parameters.startIP
          type:
            - string
          description: lowest IP address included in the range
        - id: parameters.endIP
          type:
            - string
          description: highest IP address included in the range
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        cacheName, ruleName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-rediscache.RedisFirewallRuleOperations#createOrUpdate'
    id: 'azure-arm-rediscache.RedisFirewallRuleOperations#createOrUpdate'
    parent: azure-arm-rediscache.RedisFirewallRuleOperations
    name: >-
      createOrUpdate(resourceGroupName, cacheName, ruleName, parameters,
      options, optionalCallback)
    summary: Create or update a redis cache firewall rule
    fullName: >-
      azure-arm-rediscache.RedisFirewallRuleOperations.createOrUpdate(resourceGroupName,
      cacheName, ruleName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RedisFirewallRule} - The deserialized result object.'
        value: '{RedisFirewallRule} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RedisFirewallRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RedisFirewallRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: cacheName
          type:
            - string
          description: The name of the Redis cache.
        - id: ruleName
          type:
            - string
          description: The name of the firewall rule.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the create or update redis
            firewall rule operation.
        - id: parameters.startIP
          type:
            - string
          description: lowest IP address included in the range
        - id: parameters.endIP
          type:
            - string
          description: highest IP address included in the range
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, cacheName, ruleName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-rediscache.RedisFirewallRuleOperations#getWithHttpOperationResponse
    id: >-
      azure-arm-rediscache.RedisFirewallRuleOperations#getWithHttpOperationResponse
    parent: azure-arm-rediscache.RedisFirewallRuleOperations
    name: >-
      getWithHttpOperationResponse(resourceGroupName, cacheName, ruleName,
      options)
    summary: Gets a single firewall rule in a specified redis cache.
    fullName: >-
      azure-arm-rediscache.RedisFirewallRuleOperations.getWithHttpOperationResponse(resourceGroupName,
      cacheName, ruleName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RedisFirewallRule>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<RedisFirewallRule>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: cacheName
          type:
            - string
          description: The name of the Redis cache.
        - id: ruleName
          type:
            - string
          description: The name of the firewall rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, cacheName,
        ruleName, options)
    langs:
      - js
  - uid: 'azure-arm-rediscache.RedisFirewallRuleOperations#get'
    id: 'azure-arm-rediscache.RedisFirewallRuleOperations#get'
    parent: azure-arm-rediscache.RedisFirewallRuleOperations
    name: 'get(resourceGroupName, cacheName, ruleName, options, optionalCallback)'
    summary: Gets a single firewall rule in a specified redis cache.
    fullName: >-
      azure-arm-rediscache.RedisFirewallRuleOperations.get(resourceGroupName,
      cacheName, ruleName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RedisFirewallRule} - The deserialized result object.'
        value: '{RedisFirewallRule} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RedisFirewallRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RedisFirewallRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: cacheName
          type:
            - string
          description: The name of the Redis cache.
        - id: ruleName
          type:
            - string
          description: The name of the firewall rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, cacheName, ruleName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-rediscache.RedisFirewallRuleOperations#deleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-rediscache.RedisFirewallRuleOperations#deleteMethodWithHttpOperationResponse
    parent: azure-arm-rediscache.RedisFirewallRuleOperations
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, cacheName,
      ruleName, options)
    summary: Deletes a single firewall rule in a specified redis cache.
    fullName: >-
      azure-arm-rediscache.RedisFirewallRuleOperations.deleteMethodWithHttpOperationResponse(resourceGroupName,
      cacheName, ruleName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: cacheName
          type:
            - string
          description: The name of the Redis cache.
        - id: ruleName
          type:
            - string
          description: The name of the firewall rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        cacheName, ruleName, options)
    langs:
      - js
  - uid: 'azure-arm-rediscache.RedisFirewallRuleOperations#deleteMethod'
    id: 'azure-arm-rediscache.RedisFirewallRuleOperations#deleteMethod'
    parent: azure-arm-rediscache.RedisFirewallRuleOperations
    name: >-
      deleteMethod(resourceGroupName, cacheName, ruleName, options,
      optionalCallback)
    summary: Deletes a single firewall rule in a specified redis cache.
    fullName: >-
      azure-arm-rediscache.RedisFirewallRuleOperations.deleteMethod(resourceGroupName,
      cacheName, ruleName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: cacheName
          type:
            - string
          description: The name of the Redis cache.
        - id: ruleName
          type:
            - string
          description: The name of the firewall rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, cacheName, ruleName, options,
        optionalCallback)
    langs:
      - js
references:
  - uid: azure-arm-rediscache.RedisManagementClient
    name: RedisManagementClient
    fullName: azure-arm-rediscache.RedisManagementClient
    isExternal: false

### YamlMime:UniversalReference
items:
  - uid: azure-arm-batchai.Jobs
    id: azure-arm-batchai.Jobs
    name: Jobs
    summary: Class representing a Jobs.
    fullName: azure-arm-batchai.Jobs
    type: Class
    children:
      - 'azure-arm-batchai.Jobs.#ctor'
      - 'azure-arm-batchai.Jobs#createWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#create'
      - 'azure-arm-batchai.Jobs#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#deleteMethod'
      - 'azure-arm-batchai.Jobs#getWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#get'
      - >-
        azure-arm-batchai.Jobs#listRemoteLoginInformationWithHttpOperationResponse
      - 'azure-arm-batchai.Jobs#listRemoteLoginInformation'
      - 'azure-arm-batchai.Jobs#terminateWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#terminate'
      - 'azure-arm-batchai.Jobs#listWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#list'
      - 'azure-arm-batchai.Jobs#listByResourceGroupWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listByResourceGroup'
      - 'azure-arm-batchai.Jobs#listOutputFilesWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listOutputFiles'
      - 'azure-arm-batchai.Jobs#beginCreateWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#beginCreate'
      - 'azure-arm-batchai.Jobs#beginDeleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#beginDeleteMethod'
      - 'azure-arm-batchai.Jobs#beginTerminateWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#beginTerminate'
      - >-
        azure-arm-batchai.Jobs#listRemoteLoginInformationNextWithHttpOperationResponse
      - 'azure-arm-batchai.Jobs#listRemoteLoginInformationNext'
      - 'azure-arm-batchai.Jobs#listNextWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listNext'
      - 'azure-arm-batchai.Jobs#listByResourceGroupNextWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listByResourceGroupNext'
      - 'azure-arm-batchai.Jobs#listOutputFilesNextWithHttpOperationResponse'
      - 'azure-arm-batchai.Jobs#listOutputFilesNext'
    langs:
      - js
  - id: 'azure-arm-batchai.Jobs.#ctor'
    uid: 'azure-arm-batchai.Jobs.#ctor'
    parent: azure-arm-batchai.Jobs
    name: Jobs(client)
    fullName: azure-arm-batchai.Jobs.Jobs(client)
    summary: Create a Jobs.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-batchai.BatchAIManagementClient
          description: Reference to the service client.
      content: new Jobs(client)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#createWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#createWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      createWithHttpOperationResponse(resourceGroupName, jobName, parameters,
      options)
    summary: Adds a Job that gets executed on a cluster.
    fullName: >-
      azure-arm-batchai.Jobs.createWithHttpOperationResponse(resourceGroupName,
      jobName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Job>} - The deserialized result object.'
        value: '{HttpOperationResponse<Job>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: parameters
          type:
            - object
          description: The parameters to provide for job creation.
        - id: parameters.location
          type:
            - string
          description: The region in which to create the job.
        - id: parameters.tags
          type:
            - object
          description: |-
            The user specified tags associated with
            the job.
          optional: true
        - id: parameters.experimentName
          type:
            - string
          description: |-
            Describe the experiment
            information of the job
          optional: true
        - id: parameters.priority
          type:
            - number
          description: >-
            Priority associated with the job.

            Priority associated with the job. Priority values can range from
            -1000 to

            1000, with -1000 being the lowest priority and 1000 being the
            highest

            priority. The default value is 0.
          optional: true
        - id: parameters.cluster
          type:
            - object
          description: |-
            Specifies the Id of the cluster on which
            this job will run.
        - id: parameters.nodeCount
          type:
            - number
          description: |-
            Number of compute nodes to run the job
            on. The job will be gang scheduled on that many compute nodes
        - id: parameters.containerSettings
          type:
            - object
          description: >-
            If provided the job will run

            in the specified container. If the container was downloaded as part
            of

            cluster setup then the same container image will be used. If not
            provided,

            the job will run on the VM.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry
          type:
            - object
          description: |-
            Registry to
            download the container from.
        - id: parameters.containerSettings.imageSourceRegistry.serverUrl
          type:
            - string
          description: URL for image repository.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry.image
          type:
            - string
          description: |-
            The
            name of the image in image repository.
        - id: parameters.containerSettings.imageSourceRegistry.credentials
          type:
            - object
          description: |-
            Information
            to access the private Docker repository.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.username
          type:
            - string
          description: |-
            User
            name to login.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.password
          type:
            - string
          description: >-
            Password to login. One of password or passwordSecretReference must
            be

            specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference
          type:
            - object
          description: >-
            Specifies the location of the password, which is a Key Vault Secret.
            Users

            can store their secrets in Azure KeyVault and pass it to the Batch
            AI

            Service to integrate with KeyVault. One of password or

            passwordSecretReference must be specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault
          type:
            - object
          description: Fully qualified resource Id for the Key Vault.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault.id
          type:
            - string
          description: The ID of the resource
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.secretUrl
          type:
            - string
          description: The URL referencing a secret in a Key Vault.
        - id: parameters.cntkSettings
          type:
            - object
          description: |-
            Specifies the settings for CNTK
            (aka Microsoft Cognitive Toolkit) job.
          optional: true
        - id: parameters.cntkSettings.languageType
          type:
            - string
          description: >-
            Specifies the

            language type to use for launching CNTK (aka Microsoft Cognitive
            Toolkit)

            job. Valid values are 'BrainScript' or 'Python'.
          optional: true
        - id: parameters.cntkSettings.configFilePath
          type:
            - string
          description: >-
            Specifies the path

            of the config file. This property can be specified only if the
            languageType

            is 'BrainScript'.
          optional: true
        - id: parameters.cntkSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            The path and

            file name of the python script to execute the job. This property can
            be

            specified only if the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            The path to

            python interpreter. This property can be specified only if the
            languageType

            is 'Python'.
          optional: true
        - id: parameters.cntkSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script or CNTK.exe.
          optional: true
        - id: parameters.cntkSettings.processCount
          type:
            - number
          description: >-
            Number of processes

            parameter that is passed to MPI runtime. The default value for this
            property

            is equal to nodeCount property
          optional: true
        - id: parameters.tensorFlowSettings
          type:
            - object
          description: |-
            Specifies the settings for
            Tensor Flow job.
          optional: true
        - id: parameters.tensorFlowSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path
            and file name of the python script to execute the job.
        - id: parameters.tensorFlowSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The
            path to python interpreter.
          optional: true
        - id: parameters.tensorFlowSettings.masterCommandLineArgs
          type:
            - string
          description: Specifies the command line arguments for the master task.
        - id: parameters.tensorFlowSettings.workerCommandLineArgs
          type:
            - string
          description: >-
            Specifies the command line arguments for the worker task. This
            property is

            optional for single machine training.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCommandLineArgs
          type:
            - string
          description: >-
            Specifies the

            command line arguments for the parameter server task. This property
            is

            optional for single machine training.
          optional: true
        - id: parameters.tensorFlowSettings.workerCount
          type:
            - number
          description: >-
            The number of

            worker tasks. If specified, the value must be less than or equal to

            (nodeCount * numberOfGPUs per VM). If not specified, the default
            value is

            equal to nodeCount. This property can be specified only for
            distributed

            TensorFlow training
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCount
          type:
            - number
          description: >-
            The

            number of parmeter server tasks. If specified, the value must be
            less than

            or equal to nodeCount. If not specified, the default value is equal
            to 1 for

            distributed TensorFlow training (This property is not applicable for
            single

            machine training). This property can be specified only for
            distributed

            TensorFlow training.
          optional: true
        - id: parameters.caffeSettings
          type:
            - object
          description: |-
            Specifies the settings for Caffe
            job.
          optional: true
        - id: parameters.caffeSettings.configFilePath
          type:
            - string
          description: |-
            Specifies the path
            of the config file. This property cannot be specified if
            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            The path and

            file name of the python script to execute the job. This property
            cannot be

            specified if configFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path to
            python interpreter. This property can be specified only if the
            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the Caffe job.
          optional: true
        - id: parameters.caffeSettings.processCount
          type:
            - number
          description: >-
            Number of processes

            parameter that is passed to MPI runtime. The default value for this
            property

            is equal to nodeCount property
          optional: true
        - id: parameters.caffe2Settings
          type:
            - object
          description: |-
            Specifies the settings for
            Caffe2 job.
          optional: true
        - id: parameters.caffe2Settings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path and
            file name of the python script to execute the job.
        - id: parameters.caffe2Settings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path
            to python interpreter.
          optional: true
        - id: parameters.caffe2Settings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script
          optional: true
        - id: parameters.chainerSettings
          type:
            - object
          description: |-
            Specifies the settings for
            Chainer job.
          optional: true
        - id: parameters.chainerSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path and
            file name of the python script to execute the job.
        - id: parameters.chainerSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path
            to python interpreter.
          optional: true
        - id: parameters.chainerSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script
          optional: true
        - id: parameters.chainerSettings.processCount
          type:
            - number
          description: >-
            Number of

            processes parameter that is passed to MPI runtime. The default value
            for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.customToolkitSettings
          type:
            - object
          description: |-
            Specifies the settings
            for custom tool kit job.
          optional: true
        - id: parameters.customToolkitSettings.commandLine
          type:
            - string
          description: |-
            The command
            line to execute the custom toolkit Job.
          optional: true
        - id: parameters.jobPreparation
          type:
            - object
          description: >-
            Specifies the command line to be

            executed before tool kit is launched. The specified actions will run
            on all

            the nodes that are part of the job
          optional: true
        - id: parameters.jobPreparation.commandLine
          type:
            - string
          description: >-
            The command line to

            execute. If containerSettings is specified on the job, this
            commandLine will

            be executed in the same container as job. Otherwise it will be
            executed on

            the node.
        - id: parameters.stdOutErrPathPrefix
          type:
            - string
          description: |-
            The path where the Batch AI
            service will upload stdout and stderror of the job.
        - id: parameters.inputDirectories
          type:
            - array
          description: |-
            Specifies the list of input
            directories for the Job.
          optional: true
        - id: parameters.outputDirectories
          type:
            - array
          description: |-
            Specifies the list of output
            directories where the models will be created. .
          optional: true
        - id: parameters.environmentVariables
          type:
            - array
          description: >-
            Additional environment

            variables to set on the job. Batch AI service sets the following
            environment

            variables for all jobs: AZ_BATCHAI_INPUT_id, AZ_BATCHAI_OUTPUT_id,

            AZ_BATCHAI_NUM_GPUS_PER_NODE. For distributed TensorFlow jobs,
            following

            additional environment variables are set by the Batch AI Service:

            AZ_BATCHAI_PS_HOSTS, AZ_BATCHAI_WORKER_HOSTS
          optional: true
        - id: parameters.constraints
          type:
            - object
          description: |-
            Constraints associated with the
            Job.
          optional: true
        - id: parameters.constraints.maxWallClockTime
          type:
            - azure-arm-batchai.moment.duration
          description: |-
            Max time
            the job can run. Default Value = 1 week.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName, jobName,
        parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#create'
    id: 'azure-arm-batchai.Jobs#create'
    parent: azure-arm-batchai.Jobs
    name: 'create(resourceGroupName, jobName, parameters, options, optionalCallback)'
    summary: Adds a Job that gets executed on a cluster.
    fullName: >-
      azure-arm-batchai.Jobs.create(resourceGroupName, jobName, parameters,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Job} - The deserialized result object.'
        value: '{Job} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: parameters
          type:
            - object
          description: The parameters to provide for job creation.
        - id: parameters.location
          type:
            - string
          description: The region in which to create the job.
        - id: parameters.tags
          type:
            - object
          description: |-
            The user specified tags associated with
            the job.
          optional: true
        - id: parameters.experimentName
          type:
            - string
          description: |-
            Describe the experiment
            information of the job
          optional: true
        - id: parameters.priority
          type:
            - number
          description: >-
            Priority associated with the job.

            Priority associated with the job. Priority values can range from
            -1000 to

            1000, with -1000 being the lowest priority and 1000 being the
            highest

            priority. The default value is 0.
          optional: true
        - id: parameters.cluster
          type:
            - object
          description: |-
            Specifies the Id of the cluster on which
            this job will run.
        - id: parameters.nodeCount
          type:
            - number
          description: |-
            Number of compute nodes to run the job
            on. The job will be gang scheduled on that many compute nodes
        - id: parameters.containerSettings
          type:
            - object
          description: >-
            If provided the job will run

            in the specified container. If the container was downloaded as part
            of

            cluster setup then the same container image will be used. If not
            provided,

            the job will run on the VM.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry
          type:
            - object
          description: |-
            Registry to
            download the container from.
        - id: parameters.containerSettings.imageSourceRegistry.serverUrl
          type:
            - string
          description: URL for image repository.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry.image
          type:
            - string
          description: |-
            The
            name of the image in image repository.
        - id: parameters.containerSettings.imageSourceRegistry.credentials
          type:
            - object
          description: |-
            Information
            to access the private Docker repository.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.username
          type:
            - string
          description: |-
            User
            name to login.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.password
          type:
            - string
          description: >-
            Password to login. One of password or passwordSecretReference must
            be

            specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference
          type:
            - object
          description: >-
            Specifies the location of the password, which is a Key Vault Secret.
            Users

            can store their secrets in Azure KeyVault and pass it to the Batch
            AI

            Service to integrate with KeyVault. One of password or

            passwordSecretReference must be specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault
          type:
            - object
          description: Fully qualified resource Id for the Key Vault.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault.id
          type:
            - string
          description: The ID of the resource
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.secretUrl
          type:
            - string
          description: The URL referencing a secret in a Key Vault.
        - id: parameters.cntkSettings
          type:
            - object
          description: |-
            Specifies the settings for CNTK
            (aka Microsoft Cognitive Toolkit) job.
          optional: true
        - id: parameters.cntkSettings.languageType
          type:
            - string
          description: >-
            Specifies the

            language type to use for launching CNTK (aka Microsoft Cognitive
            Toolkit)

            job. Valid values are 'BrainScript' or 'Python'.
          optional: true
        - id: parameters.cntkSettings.configFilePath
          type:
            - string
          description: >-
            Specifies the path

            of the config file. This property can be specified only if the
            languageType

            is 'BrainScript'.
          optional: true
        - id: parameters.cntkSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            The path and

            file name of the python script to execute the job. This property can
            be

            specified only if the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            The path to

            python interpreter. This property can be specified only if the
            languageType

            is 'Python'.
          optional: true
        - id: parameters.cntkSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script or CNTK.exe.
          optional: true
        - id: parameters.cntkSettings.processCount
          type:
            - number
          description: >-
            Number of processes

            parameter that is passed to MPI runtime. The default value for this
            property

            is equal to nodeCount property
          optional: true
        - id: parameters.tensorFlowSettings
          type:
            - object
          description: |-
            Specifies the settings for
            Tensor Flow job.
          optional: true
        - id: parameters.tensorFlowSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path
            and file name of the python script to execute the job.
        - id: parameters.tensorFlowSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The
            path to python interpreter.
          optional: true
        - id: parameters.tensorFlowSettings.masterCommandLineArgs
          type:
            - string
          description: Specifies the command line arguments for the master task.
        - id: parameters.tensorFlowSettings.workerCommandLineArgs
          type:
            - string
          description: >-
            Specifies the command line arguments for the worker task. This
            property is

            optional for single machine training.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCommandLineArgs
          type:
            - string
          description: >-
            Specifies the

            command line arguments for the parameter server task. This property
            is

            optional for single machine training.
          optional: true
        - id: parameters.tensorFlowSettings.workerCount
          type:
            - number
          description: >-
            The number of

            worker tasks. If specified, the value must be less than or equal to

            (nodeCount * numberOfGPUs per VM). If not specified, the default
            value is

            equal to nodeCount. This property can be specified only for
            distributed

            TensorFlow training
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCount
          type:
            - number
          description: >-
            The

            number of parmeter server tasks. If specified, the value must be
            less than

            or equal to nodeCount. If not specified, the default value is equal
            to 1 for

            distributed TensorFlow training (This property is not applicable for
            single

            machine training). This property can be specified only for
            distributed

            TensorFlow training.
          optional: true
        - id: parameters.caffeSettings
          type:
            - object
          description: |-
            Specifies the settings for Caffe
            job.
          optional: true
        - id: parameters.caffeSettings.configFilePath
          type:
            - string
          description: |-
            Specifies the path
            of the config file. This property cannot be specified if
            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            The path and

            file name of the python script to execute the job. This property
            cannot be

            specified if configFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path to
            python interpreter. This property can be specified only if the
            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the Caffe job.
          optional: true
        - id: parameters.caffeSettings.processCount
          type:
            - number
          description: >-
            Number of processes

            parameter that is passed to MPI runtime. The default value for this
            property

            is equal to nodeCount property
          optional: true
        - id: parameters.caffe2Settings
          type:
            - object
          description: |-
            Specifies the settings for
            Caffe2 job.
          optional: true
        - id: parameters.caffe2Settings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path and
            file name of the python script to execute the job.
        - id: parameters.caffe2Settings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path
            to python interpreter.
          optional: true
        - id: parameters.caffe2Settings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script
          optional: true
        - id: parameters.chainerSettings
          type:
            - object
          description: |-
            Specifies the settings for
            Chainer job.
          optional: true
        - id: parameters.chainerSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path and
            file name of the python script to execute the job.
        - id: parameters.chainerSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path
            to python interpreter.
          optional: true
        - id: parameters.chainerSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script
          optional: true
        - id: parameters.chainerSettings.processCount
          type:
            - number
          description: >-
            Number of

            processes parameter that is passed to MPI runtime. The default value
            for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.customToolkitSettings
          type:
            - object
          description: |-
            Specifies the settings
            for custom tool kit job.
          optional: true
        - id: parameters.customToolkitSettings.commandLine
          type:
            - string
          description: |-
            The command
            line to execute the custom toolkit Job.
          optional: true
        - id: parameters.jobPreparation
          type:
            - object
          description: >-
            Specifies the command line to be

            executed before tool kit is launched. The specified actions will run
            on all

            the nodes that are part of the job
          optional: true
        - id: parameters.jobPreparation.commandLine
          type:
            - string
          description: >-
            The command line to

            execute. If containerSettings is specified on the job, this
            commandLine will

            be executed in the same container as job. Otherwise it will be
            executed on

            the node.
        - id: parameters.stdOutErrPathPrefix
          type:
            - string
          description: |-
            The path where the Batch AI
            service will upload stdout and stderror of the job.
        - id: parameters.inputDirectories
          type:
            - array
          description: |-
            Specifies the list of input
            directories for the Job.
          optional: true
        - id: parameters.outputDirectories
          type:
            - array
          description: |-
            Specifies the list of output
            directories where the models will be created. .
          optional: true
        - id: parameters.environmentVariables
          type:
            - array
          description: >-
            Additional environment

            variables to set on the job. Batch AI service sets the following
            environment

            variables for all jobs: AZ_BATCHAI_INPUT_id, AZ_BATCHAI_OUTPUT_id,

            AZ_BATCHAI_NUM_GPUS_PER_NODE. For distributed TensorFlow jobs,
            following

            additional environment variables are set by the Batch AI Service:

            AZ_BATCHAI_PS_HOSTS, AZ_BATCHAI_WORKER_HOSTS
          optional: true
        - id: parameters.constraints
          type:
            - object
          description: |-
            Constraints associated with the
            Job.
          optional: true
        - id: parameters.constraints.maxWallClockTime
          type:
            - azure-arm-batchai.moment.duration
          description: |-
            Max time
            the job can run. Default Value = 1 week.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, jobName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'deleteMethodWithHttpOperationResponse(resourceGroupName, jobName, options)'
    summary: Deletes the specified Batch AI job.
    fullName: >-
      azure-arm-batchai.Jobs.deleteMethodWithHttpOperationResponse(resourceGroupName,
      jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#deleteMethod'
    id: 'azure-arm-batchai.Jobs#deleteMethod'
    parent: azure-arm-batchai.Jobs
    name: 'deleteMethod(resourceGroupName, jobName, options, optionalCallback)'
    summary: Deletes the specified Batch AI job.
    fullName: >-
      azure-arm-batchai.Jobs.deleteMethod(resourceGroupName, jobName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, jobName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#getWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#getWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'getWithHttpOperationResponse(resourceGroupName, jobName, options)'
    summary: Gets information about the specified Batch AI job.
    fullName: >-
      azure-arm-batchai.Jobs.getWithHttpOperationResponse(resourceGroupName,
      jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Job>} - The deserialized result object.'
        value: '{HttpOperationResponse<Job>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, jobName,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#get'
    id: 'azure-arm-batchai.Jobs#get'
    parent: azure-arm-batchai.Jobs
    name: 'get(resourceGroupName, jobName, options, optionalCallback)'
    summary: Gets information about the specified Batch AI job.
    fullName: >-
      azure-arm-batchai.Jobs.get(resourceGroupName, jobName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Job} - The deserialized result object.'
        value: '{Job} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(resourceGroupName, jobName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listRemoteLoginInformationWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listRemoteLoginInformationWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
      jobName, options)
    summary: >-
      Gets the IP address and port information of all the compute nodes which
      are

      used for job execution.
    fullName: >-
      azure-arm-batchai.Jobs.listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
      jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
        jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listRemoteLoginInformation'
    id: 'azure-arm-batchai.Jobs#listRemoteLoginInformation'
    parent: azure-arm-batchai.Jobs
    name: >-
      listRemoteLoginInformation(resourceGroupName, jobName, options,
      optionalCallback)
    summary: >-
      Gets the IP address and port information of all the compute nodes which
      are

      used for job execution.
    fullName: >-
      azure-arm-batchai.Jobs.listRemoteLoginInformation(resourceGroupName,
      jobName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RemoteLoginInformationListResult} - The deserialized result object.'
        value: '{RemoteLoginInformationListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRemoteLoginInformation(resourceGroupName, jobName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#terminateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#terminateWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'terminateWithHttpOperationResponse(resourceGroupName, jobName, options)'
    summary: Terminates a job.
    fullName: >-
      azure-arm-batchai.Jobs.terminateWithHttpOperationResponse(resourceGroupName,
      jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function terminateWithHttpOperationResponse(resourceGroupName, jobName,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#terminate'
    id: 'azure-arm-batchai.Jobs#terminate'
    parent: azure-arm-batchai.Jobs
    name: 'terminate(resourceGroupName, jobName, options, optionalCallback)'
    summary: Terminates a job.
    fullName: >-
      azure-arm-batchai.Jobs.terminate(resourceGroupName, jobName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function terminate(resourceGroupName, jobName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: listWithHttpOperationResponse(options)
    summary: Gets information about the jobs associated with the subscription.
    fullName: azure-arm-batchai.Jobs.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobsListOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobsListOptions.filter
          type:
            - string
          description: |-
            An OData $filter clause..
            Used to filter results that are returned in the GET respnose.
          optional: true
        - id: options.jobsListOptions.select
          type:
            - string
          description: |-
            An OData $select clause.
            Used to select the properties to be returned in the GET respnose.
          optional: true
        - id: options.jobsListOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of

            items to return in the response. A maximum of 1000 files can be
            returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#list'
    id: 'azure-arm-batchai.Jobs#list'
    parent: azure-arm-batchai.Jobs
    name: 'list(options, optionalCallback)'
    summary: Gets information about the jobs associated with the subscription.
    fullName: 'azure-arm-batchai.Jobs.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{JobListResult} - The deserialized result object.'
        value: '{JobListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobsListOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
          optional: true
        - id: options.jobsListOptions.filter
          type:
            - string
          description: |-
            An OData $filter clause..
            Used to filter results that are returned in the GET respnose.
          optional: true
        - id: options.jobsListOptions.select
          type:
            - string
          description: |-
            An OData $select clause.
            Used to select the properties to be returned in the GET respnose.
          optional: true
        - id: options.jobsListOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of

            items to return in the response. A maximum of 1000 files can be
            returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listByResourceGroupWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listByResourceGroupWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: |-
      Gets information about the Batch AI jobs associated within the specified
      resource group.
    fullName: >-
      azure-arm-batchai.Jobs.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobsListByResourceGroupOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobsListByResourceGroupOptions.filter
          type:
            - string
          description: |-
            An OData
            $filter clause.. Used to filter results that are returned in the GET
            respnose.
          optional: true
        - id: options.jobsListByResourceGroupOptions.select
          type:
            - string
          description: >-
            An OData

            $select clause. Used to select the properties to be returned in the
            GET

            respnose.
          optional: true
        - id: options.jobsListByResourceGroupOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            files

            can be returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listByResourceGroup'
    id: 'azure-arm-batchai.Jobs#listByResourceGroup'
    parent: azure-arm-batchai.Jobs
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: |-
      Gets information about the Batch AI jobs associated within the specified
      resource group.
    fullName: >-
      azure-arm-batchai.Jobs.listByResourceGroup(resourceGroupName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{JobListResult} - The deserialized result object.'
        value: '{JobListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobsListByResourceGroupOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.jobsListByResourceGroupOptions.filter
          type:
            - string
          description: |-
            An OData
            $filter clause.. Used to filter results that are returned in the GET
            respnose.
          optional: true
        - id: options.jobsListByResourceGroupOptions.select
          type:
            - string
          description: >-
            An OData

            $select clause. Used to select the properties to be returned in the
            GET

            respnose.
          optional: true
        - id: options.jobsListByResourceGroupOptions.maxResults
          type:
            - number
          description: >-
            The

            maximum number of items to return in the response. A maximum of 1000
            files

            can be returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listOutputFilesWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listOutputFilesWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      listOutputFilesWithHttpOperationResponse(resourceGroupName, jobName,
      jobsListOutputFilesOptions, options)
    summary: |-
      List all files inside the given output directory (Only if the output
      directory is on Azure File Share or Azure Storage container).
    fullName: >-
      azure-arm-batchai.Jobs.listOutputFilesWithHttpOperationResponse(resourceGroupName,
      jobName, jobsListOutputFilesOptions, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: jobsListOutputFilesOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
        - id: jobsListOutputFilesOptions.outputdirectoryid
          type:
            - string
          description: >-
            Id of the job

            output directory. This is the OutputDirectory-->id parameter that is
            given

            by the user during Create Job.
        - id: jobsListOutputFilesOptions.linkexpiryinminutes
          type:
            - number
          description: |-
            The number
            of minutes after which the download link will expire.
          optional: true
        - id: jobsListOutputFilesOptions.maxResults
          type:
            - number
          description: >-
            The maximum number

            of items to return in the response. A maximum of 1000 files can be
            returned.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listOutputFilesWithHttpOperationResponse(resourceGroupName,
        jobName, jobsListOutputFilesOptions, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listOutputFiles'
    id: 'azure-arm-batchai.Jobs#listOutputFiles'
    parent: azure-arm-batchai.Jobs
    name: >-
      listOutputFiles(resourceGroupName, jobName, jobsListOutputFilesOptions,
      options, optionalCallback)
    summary: |-
      List all files inside the given output directory (Only if the output
      directory is on Azure File Share or Azure Storage container).
    fullName: >-
      azure-arm-batchai.Jobs.listOutputFiles(resourceGroupName, jobName,
      jobsListOutputFilesOptions, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileListResult} - The deserialized result object.'
        value: '{FileListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: jobsListOutputFilesOptions
          type:
            - object
          description: |-
            Additional parameters for the
            operation
        - id: jobsListOutputFilesOptions.outputdirectoryid
          type:
            - string
          description: >-
            Id of the job

            output directory. This is the OutputDirectory-->id parameter that is
            given

            by the user during Create Job.
        - id: jobsListOutputFilesOptions.linkexpiryinminutes
          type:
            - number
          description: |-
            The number
            of minutes after which the download link will expire.
          optional: true
        - id: jobsListOutputFilesOptions.maxResults
          type:
            - number
          description: >-
            The maximum number

            of items to return in the response. A maximum of 1000 files can be
            returned.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listOutputFiles(resourceGroupName, jobName,
        jobsListOutputFilesOptions, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#beginCreateWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, jobName,
      parameters, options)
    summary: Adds a Job that gets executed on a cluster.
    fullName: >-
      azure-arm-batchai.Jobs.beginCreateWithHttpOperationResponse(resourceGroupName,
      jobName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Job>} - The deserialized result object.'
        value: '{HttpOperationResponse<Job>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: parameters
          type:
            - object
          description: The parameters to provide for job creation.
        - id: parameters.location
          type:
            - string
          description: The region in which to create the job.
        - id: parameters.tags
          type:
            - object
          description: |-
            The user specified tags associated with
            the job.
          optional: true
        - id: parameters.experimentName
          type:
            - string
          description: |-
            Describe the experiment
            information of the job
          optional: true
        - id: parameters.priority
          type:
            - number
          description: >-
            Priority associated with the job.

            Priority associated with the job. Priority values can range from
            -1000 to

            1000, with -1000 being the lowest priority and 1000 being the
            highest

            priority. The default value is 0.
          optional: true
        - id: parameters.cluster
          type:
            - object
          description: |-
            Specifies the Id of the cluster on which
            this job will run.
        - id: parameters.nodeCount
          type:
            - number
          description: |-
            Number of compute nodes to run the job
            on. The job will be gang scheduled on that many compute nodes
        - id: parameters.containerSettings
          type:
            - object
          description: >-
            If provided the job will run

            in the specified container. If the container was downloaded as part
            of

            cluster setup then the same container image will be used. If not
            provided,

            the job will run on the VM.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry
          type:
            - object
          description: |-
            Registry to
            download the container from.
        - id: parameters.containerSettings.imageSourceRegistry.serverUrl
          type:
            - string
          description: URL for image repository.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry.image
          type:
            - string
          description: |-
            The
            name of the image in image repository.
        - id: parameters.containerSettings.imageSourceRegistry.credentials
          type:
            - object
          description: |-
            Information
            to access the private Docker repository.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.username
          type:
            - string
          description: |-
            User
            name to login.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.password
          type:
            - string
          description: >-
            Password to login. One of password or passwordSecretReference must
            be

            specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference
          type:
            - object
          description: >-
            Specifies the location of the password, which is a Key Vault Secret.
            Users

            can store their secrets in Azure KeyVault and pass it to the Batch
            AI

            Service to integrate with KeyVault. One of password or

            passwordSecretReference must be specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault
          type:
            - object
          description: Fully qualified resource Id for the Key Vault.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault.id
          type:
            - string
          description: The ID of the resource
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.secretUrl
          type:
            - string
          description: The URL referencing a secret in a Key Vault.
        - id: parameters.cntkSettings
          type:
            - object
          description: |-
            Specifies the settings for CNTK
            (aka Microsoft Cognitive Toolkit) job.
          optional: true
        - id: parameters.cntkSettings.languageType
          type:
            - string
          description: >-
            Specifies the

            language type to use for launching CNTK (aka Microsoft Cognitive
            Toolkit)

            job. Valid values are 'BrainScript' or 'Python'.
          optional: true
        - id: parameters.cntkSettings.configFilePath
          type:
            - string
          description: >-
            Specifies the path

            of the config file. This property can be specified only if the
            languageType

            is 'BrainScript'.
          optional: true
        - id: parameters.cntkSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            The path and

            file name of the python script to execute the job. This property can
            be

            specified only if the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            The path to

            python interpreter. This property can be specified only if the
            languageType

            is 'Python'.
          optional: true
        - id: parameters.cntkSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script or CNTK.exe.
          optional: true
        - id: parameters.cntkSettings.processCount
          type:
            - number
          description: >-
            Number of processes

            parameter that is passed to MPI runtime. The default value for this
            property

            is equal to nodeCount property
          optional: true
        - id: parameters.tensorFlowSettings
          type:
            - object
          description: |-
            Specifies the settings for
            Tensor Flow job.
          optional: true
        - id: parameters.tensorFlowSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path
            and file name of the python script to execute the job.
        - id: parameters.tensorFlowSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The
            path to python interpreter.
          optional: true
        - id: parameters.tensorFlowSettings.masterCommandLineArgs
          type:
            - string
          description: Specifies the command line arguments for the master task.
        - id: parameters.tensorFlowSettings.workerCommandLineArgs
          type:
            - string
          description: >-
            Specifies the command line arguments for the worker task. This
            property is

            optional for single machine training.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCommandLineArgs
          type:
            - string
          description: >-
            Specifies the

            command line arguments for the parameter server task. This property
            is

            optional for single machine training.
          optional: true
        - id: parameters.tensorFlowSettings.workerCount
          type:
            - number
          description: >-
            The number of

            worker tasks. If specified, the value must be less than or equal to

            (nodeCount * numberOfGPUs per VM). If not specified, the default
            value is

            equal to nodeCount. This property can be specified only for
            distributed

            TensorFlow training
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCount
          type:
            - number
          description: >-
            The

            number of parmeter server tasks. If specified, the value must be
            less than

            or equal to nodeCount. If not specified, the default value is equal
            to 1 for

            distributed TensorFlow training (This property is not applicable for
            single

            machine training). This property can be specified only for
            distributed

            TensorFlow training.
          optional: true
        - id: parameters.caffeSettings
          type:
            - object
          description: |-
            Specifies the settings for Caffe
            job.
          optional: true
        - id: parameters.caffeSettings.configFilePath
          type:
            - string
          description: |-
            Specifies the path
            of the config file. This property cannot be specified if
            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            The path and

            file name of the python script to execute the job. This property
            cannot be

            specified if configFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path to
            python interpreter. This property can be specified only if the
            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the Caffe job.
          optional: true
        - id: parameters.caffeSettings.processCount
          type:
            - number
          description: >-
            Number of processes

            parameter that is passed to MPI runtime. The default value for this
            property

            is equal to nodeCount property
          optional: true
        - id: parameters.caffe2Settings
          type:
            - object
          description: |-
            Specifies the settings for
            Caffe2 job.
          optional: true
        - id: parameters.caffe2Settings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path and
            file name of the python script to execute the job.
        - id: parameters.caffe2Settings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path
            to python interpreter.
          optional: true
        - id: parameters.caffe2Settings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script
          optional: true
        - id: parameters.chainerSettings
          type:
            - object
          description: |-
            Specifies the settings for
            Chainer job.
          optional: true
        - id: parameters.chainerSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path and
            file name of the python script to execute the job.
        - id: parameters.chainerSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path
            to python interpreter.
          optional: true
        - id: parameters.chainerSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script
          optional: true
        - id: parameters.chainerSettings.processCount
          type:
            - number
          description: >-
            Number of

            processes parameter that is passed to MPI runtime. The default value
            for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.customToolkitSettings
          type:
            - object
          description: |-
            Specifies the settings
            for custom tool kit job.
          optional: true
        - id: parameters.customToolkitSettings.commandLine
          type:
            - string
          description: |-
            The command
            line to execute the custom toolkit Job.
          optional: true
        - id: parameters.jobPreparation
          type:
            - object
          description: >-
            Specifies the command line to be

            executed before tool kit is launched. The specified actions will run
            on all

            the nodes that are part of the job
          optional: true
        - id: parameters.jobPreparation.commandLine
          type:
            - string
          description: >-
            The command line to

            execute. If containerSettings is specified on the job, this
            commandLine will

            be executed in the same container as job. Otherwise it will be
            executed on

            the node.
        - id: parameters.stdOutErrPathPrefix
          type:
            - string
          description: |-
            The path where the Batch AI
            service will upload stdout and stderror of the job.
        - id: parameters.inputDirectories
          type:
            - array
          description: |-
            Specifies the list of input
            directories for the Job.
          optional: true
        - id: parameters.outputDirectories
          type:
            - array
          description: |-
            Specifies the list of output
            directories where the models will be created. .
          optional: true
        - id: parameters.environmentVariables
          type:
            - array
          description: >-
            Additional environment

            variables to set on the job. Batch AI service sets the following
            environment

            variables for all jobs: AZ_BATCHAI_INPUT_id, AZ_BATCHAI_OUTPUT_id,

            AZ_BATCHAI_NUM_GPUS_PER_NODE. For distributed TensorFlow jobs,
            following

            additional environment variables are set by the Batch AI Service:

            AZ_BATCHAI_PS_HOSTS, AZ_BATCHAI_WORKER_HOSTS
          optional: true
        - id: parameters.constraints
          type:
            - object
          description: |-
            Constraints associated with the
            Job.
          optional: true
        - id: parameters.constraints.maxWallClockTime
          type:
            - azure-arm-batchai.moment.duration
          description: |-
            Max time
            the job can run. Default Value = 1 week.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        jobName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginCreate'
    id: 'azure-arm-batchai.Jobs#beginCreate'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginCreate(resourceGroupName, jobName, parameters, options,
      optionalCallback)
    summary: Adds a Job that gets executed on a cluster.
    fullName: >-
      azure-arm-batchai.Jobs.beginCreate(resourceGroupName, jobName, parameters,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Job} - The deserialized result object.'
        value: '{Job} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Job} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: parameters
          type:
            - object
          description: The parameters to provide for job creation.
        - id: parameters.location
          type:
            - string
          description: The region in which to create the job.
        - id: parameters.tags
          type:
            - object
          description: |-
            The user specified tags associated with
            the job.
          optional: true
        - id: parameters.experimentName
          type:
            - string
          description: |-
            Describe the experiment
            information of the job
          optional: true
        - id: parameters.priority
          type:
            - number
          description: >-
            Priority associated with the job.

            Priority associated with the job. Priority values can range from
            -1000 to

            1000, with -1000 being the lowest priority and 1000 being the
            highest

            priority. The default value is 0.
          optional: true
        - id: parameters.cluster
          type:
            - object
          description: |-
            Specifies the Id of the cluster on which
            this job will run.
        - id: parameters.nodeCount
          type:
            - number
          description: |-
            Number of compute nodes to run the job
            on. The job will be gang scheduled on that many compute nodes
        - id: parameters.containerSettings
          type:
            - object
          description: >-
            If provided the job will run

            in the specified container. If the container was downloaded as part
            of

            cluster setup then the same container image will be used. If not
            provided,

            the job will run on the VM.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry
          type:
            - object
          description: |-
            Registry to
            download the container from.
        - id: parameters.containerSettings.imageSourceRegistry.serverUrl
          type:
            - string
          description: URL for image repository.
          optional: true
        - id: parameters.containerSettings.imageSourceRegistry.image
          type:
            - string
          description: |-
            The
            name of the image in image repository.
        - id: parameters.containerSettings.imageSourceRegistry.credentials
          type:
            - object
          description: |-
            Information
            to access the private Docker repository.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.username
          type:
            - string
          description: |-
            User
            name to login.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.password
          type:
            - string
          description: >-
            Password to login. One of password or passwordSecretReference must
            be

            specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference
          type:
            - object
          description: >-
            Specifies the location of the password, which is a Key Vault Secret.
            Users

            can store their secrets in Azure KeyVault and pass it to the Batch
            AI

            Service to integrate with KeyVault. One of password or

            passwordSecretReference must be specified.
          optional: true
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault
          type:
            - object
          description: Fully qualified resource Id for the Key Vault.
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.sourceVault.id
          type:
            - string
          description: The ID of the resource
        - id: >-
            parameters.containerSettings.imageSourceRegistry.credentials.passwordSecretReference.secretUrl
          type:
            - string
          description: The URL referencing a secret in a Key Vault.
        - id: parameters.cntkSettings
          type:
            - object
          description: |-
            Specifies the settings for CNTK
            (aka Microsoft Cognitive Toolkit) job.
          optional: true
        - id: parameters.cntkSettings.languageType
          type:
            - string
          description: >-
            Specifies the

            language type to use for launching CNTK (aka Microsoft Cognitive
            Toolkit)

            job. Valid values are 'BrainScript' or 'Python'.
          optional: true
        - id: parameters.cntkSettings.configFilePath
          type:
            - string
          description: >-
            Specifies the path

            of the config file. This property can be specified only if the
            languageType

            is 'BrainScript'.
          optional: true
        - id: parameters.cntkSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            The path and

            file name of the python script to execute the job. This property can
            be

            specified only if the languageType is 'Python'.
          optional: true
        - id: parameters.cntkSettings.pythonInterpreterPath
          type:
            - string
          description: >-
            The path to

            python interpreter. This property can be specified only if the
            languageType

            is 'Python'.
          optional: true
        - id: parameters.cntkSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script or CNTK.exe.
          optional: true
        - id: parameters.cntkSettings.processCount
          type:
            - number
          description: >-
            Number of processes

            parameter that is passed to MPI runtime. The default value for this
            property

            is equal to nodeCount property
          optional: true
        - id: parameters.tensorFlowSettings
          type:
            - object
          description: |-
            Specifies the settings for
            Tensor Flow job.
          optional: true
        - id: parameters.tensorFlowSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path
            and file name of the python script to execute the job.
        - id: parameters.tensorFlowSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The
            path to python interpreter.
          optional: true
        - id: parameters.tensorFlowSettings.masterCommandLineArgs
          type:
            - string
          description: Specifies the command line arguments for the master task.
        - id: parameters.tensorFlowSettings.workerCommandLineArgs
          type:
            - string
          description: >-
            Specifies the command line arguments for the worker task. This
            property is

            optional for single machine training.
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCommandLineArgs
          type:
            - string
          description: >-
            Specifies the

            command line arguments for the parameter server task. This property
            is

            optional for single machine training.
          optional: true
        - id: parameters.tensorFlowSettings.workerCount
          type:
            - number
          description: >-
            The number of

            worker tasks. If specified, the value must be less than or equal to

            (nodeCount * numberOfGPUs per VM). If not specified, the default
            value is

            equal to nodeCount. This property can be specified only for
            distributed

            TensorFlow training
          optional: true
        - id: parameters.tensorFlowSettings.parameterServerCount
          type:
            - number
          description: >-
            The

            number of parmeter server tasks. If specified, the value must be
            less than

            or equal to nodeCount. If not specified, the default value is equal
            to 1 for

            distributed TensorFlow training (This property is not applicable for
            single

            machine training). This property can be specified only for
            distributed

            TensorFlow training.
          optional: true
        - id: parameters.caffeSettings
          type:
            - object
          description: |-
            Specifies the settings for Caffe
            job.
          optional: true
        - id: parameters.caffeSettings.configFilePath
          type:
            - string
          description: |-
            Specifies the path
            of the config file. This property cannot be specified if
            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonScriptFilePath
          type:
            - string
          description: >-
            The path and

            file name of the python script to execute the job. This property
            cannot be

            specified if configFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path to
            python interpreter. This property can be specified only if the
            pythonScriptFilePath is specified.
          optional: true
        - id: parameters.caffeSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the Caffe job.
          optional: true
        - id: parameters.caffeSettings.processCount
          type:
            - number
          description: >-
            Number of processes

            parameter that is passed to MPI runtime. The default value for this
            property

            is equal to nodeCount property
          optional: true
        - id: parameters.caffe2Settings
          type:
            - object
          description: |-
            Specifies the settings for
            Caffe2 job.
          optional: true
        - id: parameters.caffe2Settings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path and
            file name of the python script to execute the job.
        - id: parameters.caffe2Settings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path
            to python interpreter.
          optional: true
        - id: parameters.caffe2Settings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script
          optional: true
        - id: parameters.chainerSettings
          type:
            - object
          description: |-
            Specifies the settings for
            Chainer job.
          optional: true
        - id: parameters.chainerSettings.pythonScriptFilePath
          type:
            - string
          description: |-
            The path and
            file name of the python script to execute the job.
        - id: parameters.chainerSettings.pythonInterpreterPath
          type:
            - string
          description: |-
            The path
            to python interpreter.
          optional: true
        - id: parameters.chainerSettings.commandLineArgs
          type:
            - string
          description: |-
            Command line
            arguments that needs to be passed to the python script
          optional: true
        - id: parameters.chainerSettings.processCount
          type:
            - number
          description: >-
            Number of

            processes parameter that is passed to MPI runtime. The default value
            for

            this property is equal to nodeCount property
          optional: true
        - id: parameters.customToolkitSettings
          type:
            - object
          description: |-
            Specifies the settings
            for custom tool kit job.
          optional: true
        - id: parameters.customToolkitSettings.commandLine
          type:
            - string
          description: |-
            The command
            line to execute the custom toolkit Job.
          optional: true
        - id: parameters.jobPreparation
          type:
            - object
          description: >-
            Specifies the command line to be

            executed before tool kit is launched. The specified actions will run
            on all

            the nodes that are part of the job
          optional: true
        - id: parameters.jobPreparation.commandLine
          type:
            - string
          description: >-
            The command line to

            execute. If containerSettings is specified on the job, this
            commandLine will

            be executed in the same container as job. Otherwise it will be
            executed on

            the node.
        - id: parameters.stdOutErrPathPrefix
          type:
            - string
          description: |-
            The path where the Batch AI
            service will upload stdout and stderror of the job.
        - id: parameters.inputDirectories
          type:
            - array
          description: |-
            Specifies the list of input
            directories for the Job.
          optional: true
        - id: parameters.outputDirectories
          type:
            - array
          description: |-
            Specifies the list of output
            directories where the models will be created. .
          optional: true
        - id: parameters.environmentVariables
          type:
            - array
          description: >-
            Additional environment

            variables to set on the job. Batch AI service sets the following
            environment

            variables for all jobs: AZ_BATCHAI_INPUT_id, AZ_BATCHAI_OUTPUT_id,

            AZ_BATCHAI_NUM_GPUS_PER_NODE. For distributed TensorFlow jobs,
            following

            additional environment variables are set by the Batch AI Service:

            AZ_BATCHAI_PS_HOSTS, AZ_BATCHAI_WORKER_HOSTS
          optional: true
        - id: parameters.constraints
          type:
            - object
          description: |-
            Constraints associated with the
            Job.
          optional: true
        - id: parameters.constraints.maxWallClockTime
          type:
            - azure-arm-batchai.moment.duration
          description: |-
            Max time
            the job can run. Default Value = 1 week.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreate(resourceGroupName, jobName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginDeleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#beginDeleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName, jobName,
      options)
    summary: Deletes the specified Batch AI job.
    fullName: >-
      azure-arm-batchai.Jobs.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginDeleteMethod'
    id: 'azure-arm-batchai.Jobs#beginDeleteMethod'
    parent: azure-arm-batchai.Jobs
    name: 'beginDeleteMethod(resourceGroupName, jobName, options, optionalCallback)'
    summary: Deletes the specified Batch AI job.
    fullName: >-
      azure-arm-batchai.Jobs.beginDeleteMethod(resourceGroupName, jobName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, jobName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginTerminateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#beginTerminateWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: >-
      beginTerminateWithHttpOperationResponse(resourceGroupName, jobName,
      options)
    summary: Terminates a job.
    fullName: >-
      azure-arm-batchai.Jobs.beginTerminateWithHttpOperationResponse(resourceGroupName,
      jobName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginTerminateWithHttpOperationResponse(resourceGroupName,
        jobName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#beginTerminate'
    id: 'azure-arm-batchai.Jobs#beginTerminate'
    parent: azure-arm-batchai.Jobs
    name: 'beginTerminate(resourceGroupName, jobName, options, optionalCallback)'
    summary: Terminates a job.
    fullName: >-
      azure-arm-batchai.Jobs.beginTerminate(resourceGroupName, jobName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: jobName
          type:
            - string
          description: >-
            The name of the job within the specified resource

            group. Job names can only contain a combination of alphanumeric
            characters

            along with dash (-) and underscore (_). The name must be from 1
            through 64

            characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginTerminate(resourceGroupName, jobName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-batchai.Jobs#listRemoteLoginInformationNextWithHttpOperationResponse
    id: >-
      azure-arm-batchai.Jobs#listRemoteLoginInformationNextWithHttpOperationResponse
    parent: azure-arm-batchai.Jobs
    name: >-
      listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: >-
      Gets the IP address and port information of all the compute nodes which
      are

      used for job execution.
    fullName: >-
      azure-arm-batchai.Jobs.listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listRemoteLoginInformationNext'
    id: 'azure-arm-batchai.Jobs#listRemoteLoginInformationNext'
    parent: azure-arm-batchai.Jobs
    name: 'listRemoteLoginInformationNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Gets the IP address and port information of all the compute nodes which
      are

      used for job execution.
    fullName: >-
      azure-arm-batchai.Jobs.listRemoteLoginInformationNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RemoteLoginInformationListResult} - The deserialized result object.'
        value: '{RemoteLoginInformationListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link RemoteLoginInformationListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listRemoteLoginInformationNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listNextWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets information about the jobs associated with the subscription.
    fullName: >-
      azure-arm-batchai.Jobs.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listNext'
    id: 'azure-arm-batchai.Jobs#listNext'
    parent: azure-arm-batchai.Jobs
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Gets information about the jobs associated with the subscription.
    fullName: 'azure-arm-batchai.Jobs.listNext(nextPageLink, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{JobListResult} - The deserialized result object.'
        value: '{JobListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listByResourceGroupNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listByResourceGroupNextWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets information about the Batch AI jobs associated within the specified
      resource group.
    fullName: >-
      azure-arm-batchai.Jobs.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<JobListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listByResourceGroupNext'
    id: 'azure-arm-batchai.Jobs#listByResourceGroupNext'
    parent: azure-arm-batchai.Jobs
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets information about the Batch AI jobs associated within the specified
      resource group.
    fullName: >-
      azure-arm-batchai.Jobs.listByResourceGroupNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{JobListResult} - The deserialized result object.'
        value: '{JobListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link JobListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listOutputFilesNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.Jobs#listOutputFilesNextWithHttpOperationResponse'
    parent: azure-arm-batchai.Jobs
    name: 'listOutputFilesNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      List all files inside the given output directory (Only if the output
      directory is on Azure File Share or Azure Storage container).
    fullName: >-
      azure-arm-batchai.Jobs.listOutputFilesNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listOutputFilesNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Jobs#listOutputFilesNext'
    id: 'azure-arm-batchai.Jobs#listOutputFilesNext'
    parent: azure-arm-batchai.Jobs
    name: 'listOutputFilesNext(nextPageLink, options, optionalCallback)'
    summary: |-
      List all files inside the given output directory (Only if the output
      directory is on Azure File Share or Azure Storage container).
    fullName: >-
      azure-arm-batchai.Jobs.listOutputFilesNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileListResult} - The deserialized result object.'
        value: '{FileListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listOutputFilesNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-arm-batchai.BatchAIManagementClient
    name: BatchAIManagementClient
    fullName: azure-arm-batchai.BatchAIManagementClient
    isExternal: false

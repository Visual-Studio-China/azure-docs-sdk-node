### YamlMime:UniversalReference
items:
  - uid: azure-batchai.FileServers
    id: azure-batchai.FileServers
    name: FileServers
    summary: Class representing a FileServers.
    fullName: azure-batchai.FileServers
    type: Class
    children:
      - 'azure-batchai.FileServers.#ctor'
      - 'azure-batchai.FileServers#createWithHttpOperationResponse'
      - 'azure-batchai.FileServers#create'
      - 'azure-batchai.FileServers#deleteMethodWithHttpOperationResponse'
      - 'azure-batchai.FileServers#deleteMethod'
      - 'azure-batchai.FileServers#getWithHttpOperationResponse'
      - 'azure-batchai.FileServers#get'
      - 'azure-batchai.FileServers#listWithHttpOperationResponse'
      - 'azure-batchai.FileServers#list'
      - 'azure-batchai.FileServers#listByResourceGroupWithHttpOperationResponse'
      - 'azure-batchai.FileServers#listByResourceGroup'
      - 'azure-batchai.FileServers#beginCreateWithHttpOperationResponse'
      - 'azure-batchai.FileServers#beginCreate'
      - 'azure-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
      - 'azure-batchai.FileServers#beginDeleteMethod'
      - 'azure-batchai.FileServers#listNextWithHttpOperationResponse'
      - 'azure-batchai.FileServers#listNext'
      - >-
        azure-batchai.FileServers#listByResourceGroupNextWithHttpOperationResponse
      - 'azure-batchai.FileServers#listByResourceGroupNext'
    langs:
      - js
  - id: 'azure-batchai.FileServers.#ctor'
    uid: 'azure-batchai.FileServers.#ctor'
    parent: azure-batchai.FileServers
    name: FileServers(client)
    fullName: azure-batchai.FileServers.FileServers(client)
    summary: Create a FileServers.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-batchai.BatchAIManagementClient
          description: Reference to the service client.
      content: new FileServers(client)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#createWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#createWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: >-
      createWithHttpOperationResponse(resourceGroupName, fileServerName,
      parameters, options)
    summary: Creates a file server.
    fullName: >-
      azure-batchai.FileServers.createWithHttpOperationResponse(resourceGroupName,
      fileServerName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for file server
            creation.
        - id: parameters.location
          type:
            - string
          description: |-
            The region in which to create the File
            Server.
        - id: parameters.tags
          type:
            - object
          description: |-
            The user specified tags associated with
            the File Server.
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: >-
            The size of the virtual machine of the

            file server. For information about available VM sizes for
            fileservers from

            the Virtual Machines Marketplace, see Sizes for Virtual Machines
            (Linux).
        - id: parameters.sshConfiguration
          type:
            - object
          description: |-
            SSH settings for the file
            server.
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: >-
            List of source

            IP ranges to allow SSH connection to VM. Default value is '*' can be
            used to

            match all source IPs. Maximum number of publicIPs that can be
            specified are

            400.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: |-
            Settings for
            user account of VMs.
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: |-
            Specifies the
            name of the administrator account.
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: >-
            SSH

            public keys used to authenticate with linux based VMs. This does not
            get

            returned in a GET response body.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: >-
            Admin

            user Password (linux only). This does not get returned in a GET
            response

            body.
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: |-
            Settings for the data disk which would
            be created for the file server.
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: >-
            Initial disk size in GB

            for blank data disks, and the new desired size for resizing existing
            data

            disks.
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: >-
            Number of data disks to be

            attached to the VM. RAID level 0 will be applied in the case of
            multiple

            disks.
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: >-
            Specifies the type

            of storage account to be used on the disk. Possible values are:
            Standard_LRS

            or Premium_LRS. Possible values include: 'Standard_LRS',
            'Premium_LRS'
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName,
        fileServerName, parameters, options)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#create'
    id: 'azure-batchai.FileServers#create'
    parent: azure-batchai.FileServers
    name: >-
      create(resourceGroupName, fileServerName, parameters, options,
      optionalCallback)
    summary: Creates a file server.
    fullName: >-
      azure-batchai.FileServers.create(resourceGroupName, fileServerName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for file server
            creation.
        - id: parameters.location
          type:
            - string
          description: |-
            The region in which to create the File
            Server.
        - id: parameters.tags
          type:
            - object
          description: |-
            The user specified tags associated with
            the File Server.
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: >-
            The size of the virtual machine of the

            file server. For information about available VM sizes for
            fileservers from

            the Virtual Machines Marketplace, see Sizes for Virtual Machines
            (Linux).
        - id: parameters.sshConfiguration
          type:
            - object
          description: |-
            SSH settings for the file
            server.
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: >-
            List of source

            IP ranges to allow SSH connection to VM. Default value is '*' can be
            used to

            match all source IPs. Maximum number of publicIPs that can be
            specified are

            400.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: |-
            Settings for
            user account of VMs.
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: |-
            Specifies the
            name of the administrator account.
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: >-
            SSH

            public keys used to authenticate with linux based VMs. This does not
            get

            returned in a GET response body.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: >-
            Admin

            user Password (linux only). This does not get returned in a GET
            response

            body.
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: |-
            Settings for the data disk which would
            be created for the file server.
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: >-
            Initial disk size in GB

            for blank data disks, and the new desired size for resizing existing
            data

            disks.
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: >-
            Number of data disks to be

            attached to the VM. RAID level 0 will be applied in the case of
            multiple

            disks.
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: >-
            Specifies the type

            of storage account to be used on the disk. Possible values are:
            Standard_LRS

            or Premium_LRS. Possible values include: 'Standard_LRS',
            'Premium_LRS'
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, fileServerName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#deleteMethodWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#deleteMethodWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, fileServerName,
      options)
    summary: Delete a file Server.
    fullName: >-
      azure-batchai.FileServers.deleteMethodWithHttpOperationResponse(resourceGroupName,
      fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        fileServerName, options)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#deleteMethod'
    id: 'azure-batchai.FileServers#deleteMethod'
    parent: azure-batchai.FileServers
    name: 'deleteMethod(resourceGroupName, fileServerName, options, optionalCallback)'
    summary: Delete a file Server.
    fullName: >-
      azure-batchai.FileServers.deleteMethod(resourceGroupName, fileServerName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, fileServerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#getWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#getWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: 'getWithHttpOperationResponse(resourceGroupName, fileServerName, options)'
    summary: Gets information about the specified Cluster.
    fullName: >-
      azure-batchai.FileServers.getWithHttpOperationResponse(resourceGroupName,
      fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, fileServerName,
        options)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#get'
    id: 'azure-batchai.FileServers#get'
    parent: azure-batchai.FileServers
    name: 'get(resourceGroupName, fileServerName, options, optionalCallback)'
    summary: Gets information about the specified Cluster.
    fullName: >-
      azure-batchai.FileServers.get(resourceGroupName, fileServerName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, fileServerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#listWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#listWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: listWithHttpOperationResponse(options)
    summary: |-
      To list all the file servers available under the given subscription (and
      across all resource groups within that subscription)
    fullName: azure-batchai.FileServers.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.fileServersListOptions.filter
          type:
            - string
          description: >-
            An OData $filter

            clause.. Used to filter results that are returned in the GET
            respnose.
          optional: true
        - id: options.fileServersListOptions.select
          type:
            - string
          description: >-
            An OData $select

            clause. Used to select the properties to be returned in the GET
            respnose.
          optional: true
        - id: options.fileServersListOptions.maxResults
          type:
            - number
          description: >-
            The maximum

            number of items to return in the response. A maximum of 1000 files
            can be

            returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#list'
    id: 'azure-batchai.FileServers#list'
    parent: azure-batchai.FileServers
    name: 'list(options, optionalCallback)'
    summary: |-
      To list all the file servers available under the given subscription (and
      across all resource groups within that subscription)
    fullName: 'azure-batchai.FileServers.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListOptions
          type:
            - object
          description: |-
            Additional parameters for
            the operation
          optional: true
        - id: options.fileServersListOptions.filter
          type:
            - string
          description: >-
            An OData $filter

            clause.. Used to filter results that are returned in the GET
            respnose.
          optional: true
        - id: options.fileServersListOptions.select
          type:
            - string
          description: >-
            An OData $select

            clause. Used to select the properties to be returned in the GET
            respnose.
          optional: true
        - id: options.fileServersListOptions.maxResults
          type:
            - number
          description: >-
            The maximum

            number of items to return in the response. A maximum of 1000 files
            can be

            returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batchai.FileServers#listByResourceGroupWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#listByResourceGroupWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: >-
      Gets a formatted list of file servers and their properties associated
      within

      the specified resource group.
    fullName: >-
      azure-batchai.FileServers.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListByResourceGroupOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.fileServersListByResourceGroupOptions.filter
          type:
            - string
          description: >-
            An

            OData $filter clause.. Used to filter results that are returned in
            the GET

            respnose.
          optional: true
        - id: options.fileServersListByResourceGroupOptions.select
          type:
            - string
          description: >-
            An

            OData $select clause. Used to select the properties to be returned
            in the

            GET respnose.
          optional: true
        - id: options.fileServersListByResourceGroupOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of items to return in the response. A maximum of
            1000

            files can be returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#listByResourceGroup'
    id: 'azure-batchai.FileServers#listByResourceGroup'
    parent: azure-batchai.FileServers
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: >-
      Gets a formatted list of file servers and their properties associated
      within

      the specified resource group.
    fullName: >-
      azure-batchai.FileServers.listByResourceGroup(resourceGroupName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListByResourceGroupOptions
          type:
            - object
          description: |-
            Additional
            parameters for the operation
          optional: true
        - id: options.fileServersListByResourceGroupOptions.filter
          type:
            - string
          description: >-
            An

            OData $filter clause.. Used to filter results that are returned in
            the GET

            respnose.
          optional: true
        - id: options.fileServersListByResourceGroupOptions.select
          type:
            - string
          description: >-
            An

            OData $select clause. Used to select the properties to be returned
            in the

            GET respnose.
          optional: true
        - id: options.fileServersListByResourceGroupOptions.maxResults
          type:
            - number
          description: >-
            The maximum number of items to return in the response. A maximum of
            1000

            files can be returned.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#beginCreateWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#beginCreateWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, fileServerName,
      parameters, options)
    summary: Creates a file server.
    fullName: >-
      azure-batchai.FileServers.beginCreateWithHttpOperationResponse(resourceGroupName,
      fileServerName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for file server
            creation.
        - id: parameters.location
          type:
            - string
          description: |-
            The region in which to create the File
            Server.
        - id: parameters.tags
          type:
            - object
          description: |-
            The user specified tags associated with
            the File Server.
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: >-
            The size of the virtual machine of the

            file server. For information about available VM sizes for
            fileservers from

            the Virtual Machines Marketplace, see Sizes for Virtual Machines
            (Linux).
        - id: parameters.sshConfiguration
          type:
            - object
          description: |-
            SSH settings for the file
            server.
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: >-
            List of source

            IP ranges to allow SSH connection to VM. Default value is '*' can be
            used to

            match all source IPs. Maximum number of publicIPs that can be
            specified are

            400.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: |-
            Settings for
            user account of VMs.
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: |-
            Specifies the
            name of the administrator account.
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: >-
            SSH

            public keys used to authenticate with linux based VMs. This does not
            get

            returned in a GET response body.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: >-
            Admin

            user Password (linux only). This does not get returned in a GET
            response

            body.
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: |-
            Settings for the data disk which would
            be created for the file server.
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: >-
            Initial disk size in GB

            for blank data disks, and the new desired size for resizing existing
            data

            disks.
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: >-
            Number of data disks to be

            attached to the VM. RAID level 0 will be applied in the case of
            multiple

            disks.
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: >-
            Specifies the type

            of storage account to be used on the disk. Possible values are:
            Standard_LRS

            or Premium_LRS. Possible values include: 'Standard_LRS',
            'Premium_LRS'
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        fileServerName, parameters, options)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#beginCreate'
    id: 'azure-batchai.FileServers#beginCreate'
    parent: azure-batchai.FileServers
    name: >-
      beginCreate(resourceGroupName, fileServerName, parameters, options,
      optionalCallback)
    summary: Creates a file server.
    fullName: >-
      azure-batchai.FileServers.beginCreate(resourceGroupName, fileServerName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServer} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for file server
            creation.
        - id: parameters.location
          type:
            - string
          description: |-
            The region in which to create the File
            Server.
        - id: parameters.tags
          type:
            - object
          description: |-
            The user specified tags associated with
            the File Server.
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: >-
            The size of the virtual machine of the

            file server. For information about available VM sizes for
            fileservers from

            the Virtual Machines Marketplace, see Sizes for Virtual Machines
            (Linux).
        - id: parameters.sshConfiguration
          type:
            - object
          description: |-
            SSH settings for the file
            server.
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: >-
            List of source

            IP ranges to allow SSH connection to VM. Default value is '*' can be
            used to

            match all source IPs. Maximum number of publicIPs that can be
            specified are

            400.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: |-
            Settings for
            user account of VMs.
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: |-
            Specifies the
            name of the administrator account.
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: >-
            SSH

            public keys used to authenticate with linux based VMs. This does not
            get

            returned in a GET response body.
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: >-
            Admin

            user Password (linux only). This does not get returned in a GET
            response

            body.
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: |-
            Settings for the data disk which would
            be created for the file server.
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: >-
            Initial disk size in GB

            for blank data disks, and the new desired size for resizing existing
            data

            disks.
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: >-
            Number of data disks to be

            attached to the VM. RAID level 0 will be applied in the case of
            multiple

            disks.
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: >-
            Specifies the type

            of storage account to be used on the disk. Possible values are:
            Standard_LRS

            or Premium_LRS. Possible values include: 'Standard_LRS',
            'Premium_LRS'
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreate(resourceGroupName, fileServerName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      fileServerName, options)
    summary: Delete a file Server.
    fullName: >-
      azure-batchai.FileServers.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        fileServerName, options)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#beginDeleteMethod'
    id: 'azure-batchai.FileServers#beginDeleteMethod'
    parent: azure-batchai.FileServers
    name: >-
      beginDeleteMethod(resourceGroupName, fileServerName, options,
      optionalCallback)
    summary: Delete a file Server.
    fullName: >-
      azure-batchai.FileServers.beginDeleteMethod(resourceGroupName,
      fileServerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            Name of the resource group to which the
            resource belongs.
        - id: fileServerName
          type:
            - string
          description: >-
            The name of the file server within the

            specified resource group. File server names can only contain a
            combination

            of alphanumeric characters along with dash (-) and underscore (_).
            The name

            must be from 1 through 64 characters long.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, fileServerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#listNextWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#listNextWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      To list all the file servers available under the given subscription (and
      across all resource groups within that subscription)
    fullName: >-
      azure-batchai.FileServers.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-batchai.FileServers#listNext'
    id: 'azure-batchai.FileServers#listNext'
    parent: azure-batchai.FileServers
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: |-
      To list all the file servers available under the given subscription (and
      across all resource groups within that subscription)
    fullName: >-
      azure-batchai.FileServers.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batchai.FileServers#listByResourceGroupNextWithHttpOperationResponse'
    id: 'azure-batchai.FileServers#listByResourceGroupNextWithHttpOperationResponse'
    parent: azure-batchai.FileServers
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      Gets a formatted list of file servers and their properties associated
      within

      the specified resource group.
    fullName: >-
      azure-batchai.FileServers.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-batchai.FileServers#listByResourceGroupNext'
    id: 'azure-batchai.FileServers#listByResourceGroupNext'
    parent: azure-batchai.FileServers
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Gets a formatted list of file servers and their properties associated
      within

      the specified resource group.
    fullName: >-
      azure-batchai.FileServers.listByResourceGroupNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link FileServerListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
references:
  - uid: azure-batchai.BatchAIManagementClient
    name: BatchAIManagementClient
    fullName: azure-batchai.BatchAIManagementClient
    isExternal: false

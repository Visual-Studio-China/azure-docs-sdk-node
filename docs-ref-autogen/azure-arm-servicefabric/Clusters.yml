### YamlMime:UniversalReference
items:
  - uid: azure-arm-servicefabric.Clusters
    id: azure-arm-servicefabric.Clusters
    name: Clusters
    summary: Class representing a Clusters.
    fullName: azure-arm-servicefabric.Clusters
    type: Class
    children:
      - 'azure-arm-servicefabric.Clusters.#ctor'
    langs:
      - js
  - id: 'azure-arm-servicefabric.Clusters.#ctor'
    uid: 'azure-arm-servicefabric.Clusters.#ctor'
    parent: azure-arm-servicefabric.Clusters
    name: Clusters(client)
    fullName: azure-arm-servicefabric.Clusters.Clusters(client)
    summary: Create a Clusters.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-servicefabric.ServiceFabricManagementClient
          description: Reference to the service client.
      content: new Clusters(client)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#createWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#createWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      createWithHttpOperationResponse(resourceGroupName, clusterName, cluster,
      options)
    summary: |-
      Create a ServiceFabric cluster

      Create cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.createWithHttpOperationResponse(resourceGroupName,
      clusterName, cluster, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: cluster
          type:
            - object
          description: The cluster resource.
        - id: cluster.availableClusterVersions
          type:
            - array
          description: |-
            The Service Fabric runtime
            versions available for this cluster.
          optional: true
        - id: cluster.clusterState
          type:
            - string
          description: |-
            Possible values include:
            'WaitingForNodes', 'Deploying', 'BaselineUpgrade',
            'UpdatingUserConfiguration', 'UpdatingUserCertificate',
            'UpdatingInfrastructure', 'EnforcingClusterVersion',
            'UpgradeServiceUnreachable', 'AutoScale', 'Ready'
          optional: true
        - id: cluster.clusterCodeVersion
          type:
            - string
          description: >-
            The Service Fabric runtime

            version of the cluster. This property can only by set the user when

            **upgradeMode** is set to 'Manual'. To get list of available Service
            Fabric

            versions for new clusters use [ClusterVersion
            API](./ClusterVersion.md). To

            get the list of available version for existing clusters use

            **availableClusterVersions**.
          optional: true
        - id: cluster.certificate
          type:
            - object
          description: >-
            The certificate to use for securing

            the cluster. The certificate provided will be used for  node to node

            security within the cluster, SSL certificate for cluster management
            endpoint

            and default  admin client.
          optional: true
        - id: cluster.reliabilityLevel
          type:
            - string
          description: |-
            Possible values include: 'None',
            'Bronze', 'Silver', 'Gold', 'Platinum'
          optional: true
        - id: cluster.upgradeMode
          type:
            - string
          description: |-
            Possible values include: 'Automatic',
            'Manual'
          optional: true
        - id: cluster.clientCertificateThumbprints
          type:
            - array
          description: |-
            The list of client
            certificates referenced by thumbprint that are allowed to manage the
            cluster.
          optional: true
        - id: cluster.clientCertificateCommonNames
          type:
            - array
          description: >-
            The list of client

            certificates referenced by common name that are allowed to manage
            the

            cluster.
          optional: true
        - id: cluster.fabricSettings
          type:
            - array
          description: |-
            The list of custom fabric settings
            to configure the cluster.
          optional: true
        - id: cluster.reverseProxyCertificate
          type:
            - object
          description: |-
            The server certificate
            used by reverse proxy.
          optional: true
        - id: cluster.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of the
            primary certificate.
        - id: cluster.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate.
          optional: true
        - id: cluster.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: cluster.managementEndpoint
          type:
            - string
          description: |-
            The http management endpoint of
            the cluster.
        - id: cluster.nodeTypes
          type:
            - array
          description: The list of node types in the cluster.
        - id: cluster.azureActiveDirectory
          type:
            - object
          description: |-
            The AAD authentication
            settings of the cluster.
          optional: true
        - id: cluster.azureActiveDirectory.tenantId
          type:
            - string
          description: |-
            Azure active
            directory tenant id.
          optional: true
        - id: cluster.azureActiveDirectory.clusterApplication
          type:
            - string
          description: |-
            Azure
            active directory cluster application id.
          optional: true
        - id: cluster.azureActiveDirectory.clientApplication
          type:
            - string
          description: |-
            Azure
            active directory client application id.
          optional: true
        - id: cluster.vmImage
          type:
            - string
          description: |-
            The VM image VMSS has been configured
            with. Generic names such as Windows or Linux can be used.
          optional: true
        - id: cluster.diagnosticsStorageAccountConfig
          type:
            - object
          description: |-
            The storage
            account information for storing Service Fabric diagnostic logs.
          optional: true
        - id: cluster.diagnosticsStorageAccountConfig.storageAccountName
          type:
            - string
          description: The Azure storage account name.
        - id: cluster.diagnosticsStorageAccountConfig.protectedAccountKeyName
          type:
            - string
          description: |-
            The
            protected diagnostics storage key name.
        - id: cluster.diagnosticsStorageAccountConfig.blobEndpoint
          type:
            - string
          description: |-
            The
            blob endpoint of the azure storage account.
        - id: cluster.diagnosticsStorageAccountConfig.queueEndpoint
          type:
            - string
          description: |-
            The
            queue endpoint of the azure storage account.
        - id: cluster.diagnosticsStorageAccountConfig.tableEndpoint
          type:
            - string
          description: |-
            The
            table endpoint of the azure storage account.
        - id: cluster.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: cluster.upgradeDescription.forceRestart
          type:
            - boolean
          description: >-
            If true, then

            processes are forcefully restarted during upgrade even when the code
            version

            has not changed (the upgrade only changes configuration or data).
          optional: true
        - id: cluster.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            The

            maximum amount of time to block processing of an upgrade domain and
            revent

            loss of availability when there are unexpected issues. When this
            timeout

            expires, processing of the upgrade domain will proceed regardless of

            availability loss issues. The timeout is reset at the start of each
            upgrade

            domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
        - id: cluster.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks. The duration can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: cluster.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            amount of time that the application or cluster must remain healthy
            before

            the upgrade proceeds to the next upgrade domain. The duration can be
            in

            either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            amount of time to retry health evaluation when the application or
            cluster is

            unhealthy before the upgrade rolls back. The timeout can be in
            either

            hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.upgradeTimeout
          type:
            - string
          description: >-
            The amount of time

            the overall upgrade has to complete before the upgrade rolls back.
            The

            timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: >-
            The amount

            of time each upgrade domain has to complete before the upgrade rolls
            back.

            The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            The cluster health
            policy used when upgrading the cluster.
        - id: cluster.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            cluster.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: cluster.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            The delta
            health policy used when upgrading the cluster.
          optional: true
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of nodes health degradation allowed
            during

            cluster upgrades. The delta is measured between the state of the
            nodes at

            the beginning of upgrade and the state of the nodes at the time of
            the

            health evaluation. The check is performed after every upgrade domain
            upgrade

            completion to make sure the global state of the cluster is within
            tolerated

            limits.
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of upgrade domain nodes health
            degradation

            allowed during cluster upgrades. The delta is measured between the
            state of

            the upgrade domain nodes at the beginning of upgrade and the state
            of the

            upgrade domain nodes at the time of the health evaluation. The check
            is

            performed after every upgrade domain upgrade completion for all
            completed

            upgrade domains to make sure the state of the upgrade domains is
            within

            tolerated limits.
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of applications health degradation
            allowed

            during cluster upgrades. The delta is measured between the state of
            the

            applications at the beginning of upgrade and the state of the
            applications

            at the time of the health evaluation. The check is performed after
            every

            upgrade domain upgrade completion to make sure the global state of
            the

            cluster is within tolerated limits. System services are not included
            in

            this.
        - id: cluster.addOnFeatures
          type:
            - array
          description: |-
            The list of add-on features to enable
            in the cluster.
          optional: true
        - id: cluster.location
          type:
            - string
          description: Resource location.
        - id: cluster.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName, clusterName,
        cluster, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#create'
    id: 'azure-arm-servicefabric.Clusters#create'
    parent: azure-arm-servicefabric.Clusters
    name: 'create(resourceGroupName, clusterName, cluster, options, optionalCallback)'
    summary: |-
      Create a ServiceFabric cluster

      Create cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.create(resourceGroupName, clusterName,
      cluster, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: cluster
          type:
            - object
          description: The cluster resource.
        - id: cluster.availableClusterVersions
          type:
            - array
          description: |-
            The Service Fabric runtime
            versions available for this cluster.
          optional: true
        - id: cluster.clusterState
          type:
            - string
          description: |-
            Possible values include:
            'WaitingForNodes', 'Deploying', 'BaselineUpgrade',
            'UpdatingUserConfiguration', 'UpdatingUserCertificate',
            'UpdatingInfrastructure', 'EnforcingClusterVersion',
            'UpgradeServiceUnreachable', 'AutoScale', 'Ready'
          optional: true
        - id: cluster.clusterCodeVersion
          type:
            - string
          description: >-
            The Service Fabric runtime

            version of the cluster. This property can only by set the user when

            **upgradeMode** is set to 'Manual'. To get list of available Service
            Fabric

            versions for new clusters use [ClusterVersion
            API](./ClusterVersion.md). To

            get the list of available version for existing clusters use

            **availableClusterVersions**.
          optional: true
        - id: cluster.certificate
          type:
            - object
          description: >-
            The certificate to use for securing

            the cluster. The certificate provided will be used for  node to node

            security within the cluster, SSL certificate for cluster management
            endpoint

            and default  admin client.
          optional: true
        - id: cluster.reliabilityLevel
          type:
            - string
          description: |-
            Possible values include: 'None',
            'Bronze', 'Silver', 'Gold', 'Platinum'
          optional: true
        - id: cluster.upgradeMode
          type:
            - string
          description: |-
            Possible values include: 'Automatic',
            'Manual'
          optional: true
        - id: cluster.clientCertificateThumbprints
          type:
            - array
          description: |-
            The list of client
            certificates referenced by thumbprint that are allowed to manage the
            cluster.
          optional: true
        - id: cluster.clientCertificateCommonNames
          type:
            - array
          description: >-
            The list of client

            certificates referenced by common name that are allowed to manage
            the

            cluster.
          optional: true
        - id: cluster.fabricSettings
          type:
            - array
          description: |-
            The list of custom fabric settings
            to configure the cluster.
          optional: true
        - id: cluster.reverseProxyCertificate
          type:
            - object
          description: |-
            The server certificate
            used by reverse proxy.
          optional: true
        - id: cluster.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of the
            primary certificate.
        - id: cluster.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate.
          optional: true
        - id: cluster.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: cluster.managementEndpoint
          type:
            - string
          description: |-
            The http management endpoint of
            the cluster.
        - id: cluster.nodeTypes
          type:
            - array
          description: The list of node types in the cluster.
        - id: cluster.azureActiveDirectory
          type:
            - object
          description: |-
            The AAD authentication
            settings of the cluster.
          optional: true
        - id: cluster.azureActiveDirectory.tenantId
          type:
            - string
          description: |-
            Azure active
            directory tenant id.
          optional: true
        - id: cluster.azureActiveDirectory.clusterApplication
          type:
            - string
          description: |-
            Azure
            active directory cluster application id.
          optional: true
        - id: cluster.azureActiveDirectory.clientApplication
          type:
            - string
          description: |-
            Azure
            active directory client application id.
          optional: true
        - id: cluster.vmImage
          type:
            - string
          description: |-
            The VM image VMSS has been configured
            with. Generic names such as Windows or Linux can be used.
          optional: true
        - id: cluster.diagnosticsStorageAccountConfig
          type:
            - object
          description: |-
            The storage
            account information for storing Service Fabric diagnostic logs.
          optional: true
        - id: cluster.diagnosticsStorageAccountConfig.storageAccountName
          type:
            - string
          description: The Azure storage account name.
        - id: cluster.diagnosticsStorageAccountConfig.protectedAccountKeyName
          type:
            - string
          description: |-
            The
            protected diagnostics storage key name.
        - id: cluster.diagnosticsStorageAccountConfig.blobEndpoint
          type:
            - string
          description: |-
            The
            blob endpoint of the azure storage account.
        - id: cluster.diagnosticsStorageAccountConfig.queueEndpoint
          type:
            - string
          description: |-
            The
            queue endpoint of the azure storage account.
        - id: cluster.diagnosticsStorageAccountConfig.tableEndpoint
          type:
            - string
          description: |-
            The
            table endpoint of the azure storage account.
        - id: cluster.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: cluster.upgradeDescription.forceRestart
          type:
            - boolean
          description: >-
            If true, then

            processes are forcefully restarted during upgrade even when the code
            version

            has not changed (the upgrade only changes configuration or data).
          optional: true
        - id: cluster.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            The

            maximum amount of time to block processing of an upgrade domain and
            revent

            loss of availability when there are unexpected issues. When this
            timeout

            expires, processing of the upgrade domain will proceed regardless of

            availability loss issues. The timeout is reset at the start of each
            upgrade

            domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
        - id: cluster.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks. The duration can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: cluster.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            amount of time that the application or cluster must remain healthy
            before

            the upgrade proceeds to the next upgrade domain. The duration can be
            in

            either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            amount of time to retry health evaluation when the application or
            cluster is

            unhealthy before the upgrade rolls back. The timeout can be in
            either

            hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.upgradeTimeout
          type:
            - string
          description: >-
            The amount of time

            the overall upgrade has to complete before the upgrade rolls back.
            The

            timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: >-
            The amount

            of time each upgrade domain has to complete before the upgrade rolls
            back.

            The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            The cluster health
            policy used when upgrading the cluster.
        - id: cluster.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            cluster.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: cluster.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            The delta
            health policy used when upgrading the cluster.
          optional: true
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of nodes health degradation allowed
            during

            cluster upgrades. The delta is measured between the state of the
            nodes at

            the beginning of upgrade and the state of the nodes at the time of
            the

            health evaluation. The check is performed after every upgrade domain
            upgrade

            completion to make sure the global state of the cluster is within
            tolerated

            limits.
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of upgrade domain nodes health
            degradation

            allowed during cluster upgrades. The delta is measured between the
            state of

            the upgrade domain nodes at the beginning of upgrade and the state
            of the

            upgrade domain nodes at the time of the health evaluation. The check
            is

            performed after every upgrade domain upgrade completion for all
            completed

            upgrade domains to make sure the state of the upgrade domains is
            within

            tolerated limits.
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of applications health degradation
            allowed

            during cluster upgrades. The delta is measured between the state of
            the

            applications at the beginning of upgrade and the state of the
            applications

            at the time of the health evaluation. The check is performed after
            every

            upgrade domain upgrade completion to make sure the global state of
            the

            cluster is within tolerated limits. System services are not included
            in

            this.
        - id: cluster.addOnFeatures
          type:
            - array
          description: |-
            The list of add-on features to enable
            in the cluster.
          optional: true
        - id: cluster.location
          type:
            - string
          description: Resource location.
        - id: cluster.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, clusterName, cluster, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, clusterName,
      options)
    summary: |-
      Delete cluster resource

      Delete cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.deleteMethodWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#deleteMethod'
    id: 'azure-arm-servicefabric.Clusters#deleteMethod'
    parent: azure-arm-servicefabric.Clusters
    name: 'deleteMethod(resourceGroupName, clusterName, options, optionalCallback)'
    summary: |-
      Delete cluster resource

      Delete cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.deleteMethod(resourceGroupName,
      clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, clusterName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#getWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#getWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: 'getWithHttpOperationResponse(resourceGroupName, clusterName, options)'
    summary: |-
      Get cluster resource

      Get cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.getWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, clusterName,
        options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#get'
    id: 'azure-arm-servicefabric.Clusters#get'
    parent: azure-arm-servicefabric.Clusters
    name: 'get(resourceGroupName, clusterName, options, optionalCallback)'
    summary: |-
      Get cluster resource

      Get cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.get(resourceGroupName, clusterName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(resourceGroupName, clusterName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#updateWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#updateWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, clusterName,
      clusterUpdateParameters, options)
    summary: |-
      Update cluster configuration

      Update cluster configuration
    fullName: >-
      azure-arm-servicefabric.Clusters.updateWithHttpOperationResponse(resourceGroupName,
      clusterName, clusterUpdateParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: clusterUpdateParameters
          type:
            - object
          description: |-
            The parameters which contains the
            property value and property name which used to update the cluster
            configuration.
        - id: clusterUpdateParameters.reliabilityLevel
          type:
            - string
          description: >-
            The reliability

            level sets the replica set size of system services. Learn about

            [ReliabilityLevel](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity).

            Possible values include: 'Bronze', 'Silver', 'Gold'
          optional: true
        - id: clusterUpdateParameters.upgradeMode
          type:
            - string
          description: >-
            The upgrade mode of

            the cluster. This indicates if the cluster should be automatically
            upgraded

            when new Service Fabric runtime version is available. Possible
            values

            include: 'Automatic', 'Manual'
          optional: true
        - id: clusterUpdateParameters.clusterCodeVersion
          type:
            - string
          description: >-
            The Service

            Fabric runtime version of the cluster. This property can only by set
            the

            user when **upgradeMode** is set to 'Manual'. To get list of
            available

            Service Fabric versions for new clusters use [ClusterVersion

            API](./ClusterVersion.md). To get the list of available version for
            existing

            clusters use **availableClusterVersions**.
          optional: true
        - id: clusterUpdateParameters.certificate
          type:
            - object
          description: >-
            The certificate to use

            for securing the cluster. The certificate provided will be used for 
            node to

            node security within the cluster, SSL certificate for cluster
            management

            endpoint and default  admin client.
          optional: true
        - id: clusterUpdateParameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The

            list of client certificates referenced by thumbprint that are
            allowed to

            manage the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.clientCertificateCommonNames
          type:
            - array
          description: >-
            The

            list of client certificates referenced by common name that are
            allowed to

            manage the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.fabricSettings
          type:
            - array
          description: >-
            The list of custom

            fabric settings to configure the cluster. This will overwrite the
            existing

            list.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate
          type:
            - object
          description: |-
            The server
            certificate used by reverse proxy.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: Thumbprint of the primary certificate.
        - id: clusterUpdateParameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: clusterUpdateParameters.nodeTypes
          type:
            - array
          description: |-
            The list of node types in
            the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to
            use when upgrading the cluster.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: >-
            If true, then processes are forcefully restarted during upgrade even
            when

            the code version has not changed (the upgrade only changes
            configuration or

            data).
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            The

            maximum amount of time to block processing of an upgrade domain and
            revent

            loss of availability when there are unexpected issues. When this
            timeout

            expires, processing of the upgrade domain will proceed regardless of

            availability loss issues. The timeout is reset at the start of each
            upgrade

            domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks. The duration can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            amount of time that the application or cluster must remain healthy
            before

            the upgrade proceeds to the next upgrade domain. The duration can be
            in

            either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            amount of time to retry health evaluation when the application or
            cluster is

            unhealthy before the upgrade rolls back. The timeout can be in
            either

            hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: >-
            The amount of time the overall upgrade has to complete before the
            upgrade

            rolls back. The timeout can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: clusterUpdateParameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: >-
            The amount

            of time each upgrade domain has to complete before the upgrade rolls
            back.

            The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            The
            cluster health policy used when upgrading the cluster.
        - id: >-
            clusterUpdateParameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy nodes before reporting
            an error.

            For example, to allow 10% of nodes to be unhealthy, this value would
            be 10.
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            The delta
            health policy used when upgrading the cluster.
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of nodes health degradation allowed
            during

            cluster upgrades. The delta is measured between the state of the
            nodes at

            the beginning of upgrade and the state of the nodes at the time of
            the

            health evaluation. The check is performed after every upgrade domain
            upgrade

            completion to make sure the global state of the cluster is within
            tolerated

            limits.
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of upgrade domain nodes health
            degradation

            allowed during cluster upgrades. The delta is measured between the
            state of

            the upgrade domain nodes at the beginning of upgrade and the state
            of the

            upgrade domain nodes at the time of the health evaluation. The check
            is

            performed after every upgrade domain upgrade completion for all
            completed

            upgrade domains to make sure the state of the upgrade domains is
            within

            tolerated limits.
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of applications health degradation
            allowed

            during cluster upgrades. The delta is measured between the state of
            the

            applications at the beginning of upgrade and the state of the
            applications

            at the time of the health evaluation. The check is performed after
            every

            upgrade domain upgrade completion to make sure the global state of
            the

            cluster is within tolerated limits. System services are not included
            in

            this.
        - id: clusterUpdateParameters.addOnFeatures
          type:
            - array
          description: |-
            The list of add-on
            features to enable in the cluster.
          optional: true
        - id: clusterUpdateParameters.tags
          type:
            - object
          description: Cluster update parameters
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName, clusterName,
        clusterUpdateParameters, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#update'
    id: 'azure-arm-servicefabric.Clusters#update'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      update(resourceGroupName, clusterName, clusterUpdateParameters, options,
      optionalCallback)
    summary: |-
      Update cluster configuration

      Update cluster configuration
    fullName: >-
      azure-arm-servicefabric.Clusters.update(resourceGroupName, clusterName,
      clusterUpdateParameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: clusterUpdateParameters
          type:
            - object
          description: |-
            The parameters which contains the
            property value and property name which used to update the cluster
            configuration.
        - id: clusterUpdateParameters.reliabilityLevel
          type:
            - string
          description: >-
            The reliability

            level sets the replica set size of system services. Learn about

            [ReliabilityLevel](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity).

            Possible values include: 'Bronze', 'Silver', 'Gold'
          optional: true
        - id: clusterUpdateParameters.upgradeMode
          type:
            - string
          description: >-
            The upgrade mode of

            the cluster. This indicates if the cluster should be automatically
            upgraded

            when new Service Fabric runtime version is available. Possible
            values

            include: 'Automatic', 'Manual'
          optional: true
        - id: clusterUpdateParameters.clusterCodeVersion
          type:
            - string
          description: >-
            The Service

            Fabric runtime version of the cluster. This property can only by set
            the

            user when **upgradeMode** is set to 'Manual'. To get list of
            available

            Service Fabric versions for new clusters use [ClusterVersion

            API](./ClusterVersion.md). To get the list of available version for
            existing

            clusters use **availableClusterVersions**.
          optional: true
        - id: clusterUpdateParameters.certificate
          type:
            - object
          description: >-
            The certificate to use

            for securing the cluster. The certificate provided will be used for 
            node to

            node security within the cluster, SSL certificate for cluster
            management

            endpoint and default  admin client.
          optional: true
        - id: clusterUpdateParameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The

            list of client certificates referenced by thumbprint that are
            allowed to

            manage the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.clientCertificateCommonNames
          type:
            - array
          description: >-
            The

            list of client certificates referenced by common name that are
            allowed to

            manage the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.fabricSettings
          type:
            - array
          description: >-
            The list of custom

            fabric settings to configure the cluster. This will overwrite the
            existing

            list.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate
          type:
            - object
          description: |-
            The server
            certificate used by reverse proxy.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: Thumbprint of the primary certificate.
        - id: clusterUpdateParameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: clusterUpdateParameters.nodeTypes
          type:
            - array
          description: |-
            The list of node types in
            the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to
            use when upgrading the cluster.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: >-
            If true, then processes are forcefully restarted during upgrade even
            when

            the code version has not changed (the upgrade only changes
            configuration or

            data).
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            The

            maximum amount of time to block processing of an upgrade domain and
            revent

            loss of availability when there are unexpected issues. When this
            timeout

            expires, processing of the upgrade domain will proceed regardless of

            availability loss issues. The timeout is reset at the start of each
            upgrade

            domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks. The duration can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            amount of time that the application or cluster must remain healthy
            before

            the upgrade proceeds to the next upgrade domain. The duration can be
            in

            either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            amount of time to retry health evaluation when the application or
            cluster is

            unhealthy before the upgrade rolls back. The timeout can be in
            either

            hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: >-
            The amount of time the overall upgrade has to complete before the
            upgrade

            rolls back. The timeout can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: clusterUpdateParameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: >-
            The amount

            of time each upgrade domain has to complete before the upgrade rolls
            back.

            The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            The
            cluster health policy used when upgrading the cluster.
        - id: >-
            clusterUpdateParameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy nodes before reporting
            an error.

            For example, to allow 10% of nodes to be unhealthy, this value would
            be 10.
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            The delta
            health policy used when upgrading the cluster.
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of nodes health degradation allowed
            during

            cluster upgrades. The delta is measured between the state of the
            nodes at

            the beginning of upgrade and the state of the nodes at the time of
            the

            health evaluation. The check is performed after every upgrade domain
            upgrade

            completion to make sure the global state of the cluster is within
            tolerated

            limits.
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of upgrade domain nodes health
            degradation

            allowed during cluster upgrades. The delta is measured between the
            state of

            the upgrade domain nodes at the beginning of upgrade and the state
            of the

            upgrade domain nodes at the time of the health evaluation. The check
            is

            performed after every upgrade domain upgrade completion for all
            completed

            upgrade domains to make sure the state of the upgrade domains is
            within

            tolerated limits.
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of applications health degradation
            allowed

            during cluster upgrades. The delta is measured between the state of
            the

            applications at the beginning of upgrade and the state of the
            applications

            at the time of the health evaluation. The check is performed after
            every

            upgrade domain upgrade completion to make sure the global state of
            the

            cluster is within tolerated limits. System services are not included
            in

            this.
        - id: clusterUpdateParameters.addOnFeatures
          type:
            - array
          description: |-
            The list of add-on
            features to enable in the cluster.
          optional: true
        - id: clusterUpdateParameters.tags
          type:
            - object
          description: Cluster update parameters
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(resourceGroupName, clusterName, clusterUpdateParameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-servicefabric.Clusters#listByResourceGroupWithHttpOperationResponse
    id: >-
      azure-arm-servicefabric.Clusters#listByResourceGroupWithHttpOperationResponse
    parent: azure-arm-servicefabric.Clusters
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: |-
      List cluster resource by resource group

      List cluster resource by resource group
    fullName: >-
      azure-arm-servicefabric.Clusters.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#listByResourceGroup'
    id: 'azure-arm-servicefabric.Clusters#listByResourceGroup'
    parent: azure-arm-servicefabric.Clusters
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: |-
      List cluster resource by resource group

      List cluster resource by resource group
    fullName: >-
      azure-arm-servicefabric.Clusters.listByResourceGroup(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#listWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#listWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: listWithHttpOperationResponse(options)
    summary: |-
      List cluster resource

      List cluster resource
    fullName: azure-arm-servicefabric.Clusters.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#list'
    id: 'azure-arm-servicefabric.Clusters#list'
    parent: azure-arm-servicefabric.Clusters
    name: 'list(options, optionalCallback)'
    summary: |-
      List cluster resource

      List cluster resource
    fullName: 'azure-arm-servicefabric.Clusters.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ClusterListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#beginCreateWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, clusterName,
      cluster, options)
    summary: |-
      Create a ServiceFabric cluster

      Create cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.beginCreateWithHttpOperationResponse(resourceGroupName,
      clusterName, cluster, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: cluster
          type:
            - object
          description: The cluster resource.
        - id: cluster.availableClusterVersions
          type:
            - array
          description: |-
            The Service Fabric runtime
            versions available for this cluster.
          optional: true
        - id: cluster.clusterState
          type:
            - string
          description: |-
            Possible values include:
            'WaitingForNodes', 'Deploying', 'BaselineUpgrade',
            'UpdatingUserConfiguration', 'UpdatingUserCertificate',
            'UpdatingInfrastructure', 'EnforcingClusterVersion',
            'UpgradeServiceUnreachable', 'AutoScale', 'Ready'
          optional: true
        - id: cluster.clusterCodeVersion
          type:
            - string
          description: >-
            The Service Fabric runtime

            version of the cluster. This property can only by set the user when

            **upgradeMode** is set to 'Manual'. To get list of available Service
            Fabric

            versions for new clusters use [ClusterVersion
            API](./ClusterVersion.md). To

            get the list of available version for existing clusters use

            **availableClusterVersions**.
          optional: true
        - id: cluster.certificate
          type:
            - object
          description: >-
            The certificate to use for securing

            the cluster. The certificate provided will be used for  node to node

            security within the cluster, SSL certificate for cluster management
            endpoint

            and default  admin client.
          optional: true
        - id: cluster.reliabilityLevel
          type:
            - string
          description: |-
            Possible values include: 'None',
            'Bronze', 'Silver', 'Gold', 'Platinum'
          optional: true
        - id: cluster.upgradeMode
          type:
            - string
          description: |-
            Possible values include: 'Automatic',
            'Manual'
          optional: true
        - id: cluster.clientCertificateThumbprints
          type:
            - array
          description: |-
            The list of client
            certificates referenced by thumbprint that are allowed to manage the
            cluster.
          optional: true
        - id: cluster.clientCertificateCommonNames
          type:
            - array
          description: >-
            The list of client

            certificates referenced by common name that are allowed to manage
            the

            cluster.
          optional: true
        - id: cluster.fabricSettings
          type:
            - array
          description: |-
            The list of custom fabric settings
            to configure the cluster.
          optional: true
        - id: cluster.reverseProxyCertificate
          type:
            - object
          description: |-
            The server certificate
            used by reverse proxy.
          optional: true
        - id: cluster.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of the
            primary certificate.
        - id: cluster.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate.
          optional: true
        - id: cluster.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: cluster.managementEndpoint
          type:
            - string
          description: |-
            The http management endpoint of
            the cluster.
        - id: cluster.nodeTypes
          type:
            - array
          description: The list of node types in the cluster.
        - id: cluster.azureActiveDirectory
          type:
            - object
          description: |-
            The AAD authentication
            settings of the cluster.
          optional: true
        - id: cluster.azureActiveDirectory.tenantId
          type:
            - string
          description: |-
            Azure active
            directory tenant id.
          optional: true
        - id: cluster.azureActiveDirectory.clusterApplication
          type:
            - string
          description: |-
            Azure
            active directory cluster application id.
          optional: true
        - id: cluster.azureActiveDirectory.clientApplication
          type:
            - string
          description: |-
            Azure
            active directory client application id.
          optional: true
        - id: cluster.vmImage
          type:
            - string
          description: |-
            The VM image VMSS has been configured
            with. Generic names such as Windows or Linux can be used.
          optional: true
        - id: cluster.diagnosticsStorageAccountConfig
          type:
            - object
          description: |-
            The storage
            account information for storing Service Fabric diagnostic logs.
          optional: true
        - id: cluster.diagnosticsStorageAccountConfig.storageAccountName
          type:
            - string
          description: The Azure storage account name.
        - id: cluster.diagnosticsStorageAccountConfig.protectedAccountKeyName
          type:
            - string
          description: |-
            The
            protected diagnostics storage key name.
        - id: cluster.diagnosticsStorageAccountConfig.blobEndpoint
          type:
            - string
          description: |-
            The
            blob endpoint of the azure storage account.
        - id: cluster.diagnosticsStorageAccountConfig.queueEndpoint
          type:
            - string
          description: |-
            The
            queue endpoint of the azure storage account.
        - id: cluster.diagnosticsStorageAccountConfig.tableEndpoint
          type:
            - string
          description: |-
            The
            table endpoint of the azure storage account.
        - id: cluster.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: cluster.upgradeDescription.forceRestart
          type:
            - boolean
          description: >-
            If true, then

            processes are forcefully restarted during upgrade even when the code
            version

            has not changed (the upgrade only changes configuration or data).
          optional: true
        - id: cluster.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            The

            maximum amount of time to block processing of an upgrade domain and
            revent

            loss of availability when there are unexpected issues. When this
            timeout

            expires, processing of the upgrade domain will proceed regardless of

            availability loss issues. The timeout is reset at the start of each
            upgrade

            domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
        - id: cluster.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks. The duration can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: cluster.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            amount of time that the application or cluster must remain healthy
            before

            the upgrade proceeds to the next upgrade domain. The duration can be
            in

            either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            amount of time to retry health evaluation when the application or
            cluster is

            unhealthy before the upgrade rolls back. The timeout can be in
            either

            hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.upgradeTimeout
          type:
            - string
          description: >-
            The amount of time

            the overall upgrade has to complete before the upgrade rolls back.
            The

            timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: >-
            The amount

            of time each upgrade domain has to complete before the upgrade rolls
            back.

            The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            The cluster health
            policy used when upgrading the cluster.
        - id: cluster.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            cluster.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: cluster.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            The delta
            health policy used when upgrading the cluster.
          optional: true
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of nodes health degradation allowed
            during

            cluster upgrades. The delta is measured between the state of the
            nodes at

            the beginning of upgrade and the state of the nodes at the time of
            the

            health evaluation. The check is performed after every upgrade domain
            upgrade

            completion to make sure the global state of the cluster is within
            tolerated

            limits.
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of upgrade domain nodes health
            degradation

            allowed during cluster upgrades. The delta is measured between the
            state of

            the upgrade domain nodes at the beginning of upgrade and the state
            of the

            upgrade domain nodes at the time of the health evaluation. The check
            is

            performed after every upgrade domain upgrade completion for all
            completed

            upgrade domains to make sure the state of the upgrade domains is
            within

            tolerated limits.
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of applications health degradation
            allowed

            during cluster upgrades. The delta is measured between the state of
            the

            applications at the beginning of upgrade and the state of the
            applications

            at the time of the health evaluation. The check is performed after
            every

            upgrade domain upgrade completion to make sure the global state of
            the

            cluster is within tolerated limits. System services are not included
            in

            this.
        - id: cluster.addOnFeatures
          type:
            - array
          description: |-
            The list of add-on features to enable
            in the cluster.
          optional: true
        - id: cluster.location
          type:
            - string
          description: Resource location.
        - id: cluster.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        clusterName, cluster, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#beginCreate'
    id: 'azure-arm-servicefabric.Clusters#beginCreate'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      beginCreate(resourceGroupName, clusterName, cluster, options,
      optionalCallback)
    summary: |-
      Create a ServiceFabric cluster

      Create cluster resource
    fullName: >-
      azure-arm-servicefabric.Clusters.beginCreate(resourceGroupName,
      clusterName, cluster, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: cluster
          type:
            - object
          description: The cluster resource.
        - id: cluster.availableClusterVersions
          type:
            - array
          description: |-
            The Service Fabric runtime
            versions available for this cluster.
          optional: true
        - id: cluster.clusterState
          type:
            - string
          description: |-
            Possible values include:
            'WaitingForNodes', 'Deploying', 'BaselineUpgrade',
            'UpdatingUserConfiguration', 'UpdatingUserCertificate',
            'UpdatingInfrastructure', 'EnforcingClusterVersion',
            'UpgradeServiceUnreachable', 'AutoScale', 'Ready'
          optional: true
        - id: cluster.clusterCodeVersion
          type:
            - string
          description: >-
            The Service Fabric runtime

            version of the cluster. This property can only by set the user when

            **upgradeMode** is set to 'Manual'. To get list of available Service
            Fabric

            versions for new clusters use [ClusterVersion
            API](./ClusterVersion.md). To

            get the list of available version for existing clusters use

            **availableClusterVersions**.
          optional: true
        - id: cluster.certificate
          type:
            - object
          description: >-
            The certificate to use for securing

            the cluster. The certificate provided will be used for  node to node

            security within the cluster, SSL certificate for cluster management
            endpoint

            and default  admin client.
          optional: true
        - id: cluster.reliabilityLevel
          type:
            - string
          description: |-
            Possible values include: 'None',
            'Bronze', 'Silver', 'Gold', 'Platinum'
          optional: true
        - id: cluster.upgradeMode
          type:
            - string
          description: |-
            Possible values include: 'Automatic',
            'Manual'
          optional: true
        - id: cluster.clientCertificateThumbprints
          type:
            - array
          description: |-
            The list of client
            certificates referenced by thumbprint that are allowed to manage the
            cluster.
          optional: true
        - id: cluster.clientCertificateCommonNames
          type:
            - array
          description: >-
            The list of client

            certificates referenced by common name that are allowed to manage
            the

            cluster.
          optional: true
        - id: cluster.fabricSettings
          type:
            - array
          description: |-
            The list of custom fabric settings
            to configure the cluster.
          optional: true
        - id: cluster.reverseProxyCertificate
          type:
            - object
          description: |-
            The server certificate
            used by reverse proxy.
          optional: true
        - id: cluster.reverseProxyCertificate.thumbprint
          type:
            - string
          description: |-
            Thumbprint of the
            primary certificate.
        - id: cluster.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate.
          optional: true
        - id: cluster.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: cluster.managementEndpoint
          type:
            - string
          description: |-
            The http management endpoint of
            the cluster.
        - id: cluster.nodeTypes
          type:
            - array
          description: The list of node types in the cluster.
        - id: cluster.azureActiveDirectory
          type:
            - object
          description: |-
            The AAD authentication
            settings of the cluster.
          optional: true
        - id: cluster.azureActiveDirectory.tenantId
          type:
            - string
          description: |-
            Azure active
            directory tenant id.
          optional: true
        - id: cluster.azureActiveDirectory.clusterApplication
          type:
            - string
          description: |-
            Azure
            active directory cluster application id.
          optional: true
        - id: cluster.azureActiveDirectory.clientApplication
          type:
            - string
          description: |-
            Azure
            active directory client application id.
          optional: true
        - id: cluster.vmImage
          type:
            - string
          description: |-
            The VM image VMSS has been configured
            with. Generic names such as Windows or Linux can be used.
          optional: true
        - id: cluster.diagnosticsStorageAccountConfig
          type:
            - object
          description: |-
            The storage
            account information for storing Service Fabric diagnostic logs.
          optional: true
        - id: cluster.diagnosticsStorageAccountConfig.storageAccountName
          type:
            - string
          description: The Azure storage account name.
        - id: cluster.diagnosticsStorageAccountConfig.protectedAccountKeyName
          type:
            - string
          description: |-
            The
            protected diagnostics storage key name.
        - id: cluster.diagnosticsStorageAccountConfig.blobEndpoint
          type:
            - string
          description: |-
            The
            blob endpoint of the azure storage account.
        - id: cluster.diagnosticsStorageAccountConfig.queueEndpoint
          type:
            - string
          description: |-
            The
            queue endpoint of the azure storage account.
        - id: cluster.diagnosticsStorageAccountConfig.tableEndpoint
          type:
            - string
          description: |-
            The
            table endpoint of the azure storage account.
        - id: cluster.upgradeDescription
          type:
            - object
          description: |-
            The policy to use when
            upgrading the cluster.
          optional: true
        - id: cluster.upgradeDescription.forceRestart
          type:
            - boolean
          description: >-
            If true, then

            processes are forcefully restarted during upgrade even when the code
            version

            has not changed (the upgrade only changes configuration or data).
          optional: true
        - id: cluster.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            The

            maximum amount of time to block processing of an upgrade domain and
            revent

            loss of availability when there are unexpected issues. When this
            timeout

            expires, processing of the upgrade domain will proceed regardless of

            availability loss issues. The timeout is reset at the start of each
            upgrade

            domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
        - id: cluster.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks. The duration can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: cluster.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            amount of time that the application or cluster must remain healthy
            before

            the upgrade proceeds to the next upgrade domain. The duration can be
            in

            either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            amount of time to retry health evaluation when the application or
            cluster is

            unhealthy before the upgrade rolls back. The timeout can be in
            either

            hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.upgradeTimeout
          type:
            - string
          description: >-
            The amount of time

            the overall upgrade has to complete before the upgrade rolls back.
            The

            timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: >-
            The amount

            of time each upgrade domain has to complete before the upgrade rolls
            back.

            The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: cluster.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            The cluster health
            policy used when upgrading the cluster.
        - id: cluster.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The

            maximum allowed percentage of unhealthy nodes before reporting an
            error. For

            example, to allow 10% of nodes to be unhealthy, this value would be
            10.
          optional: true
        - id: >-
            cluster.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: cluster.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            The delta
            health policy used when upgrading the cluster.
          optional: true
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of nodes health degradation allowed
            during

            cluster upgrades. The delta is measured between the state of the
            nodes at

            the beginning of upgrade and the state of the nodes at the time of
            the

            health evaluation. The check is performed after every upgrade domain
            upgrade

            completion to make sure the global state of the cluster is within
            tolerated

            limits.
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of upgrade domain nodes health
            degradation

            allowed during cluster upgrades. The delta is measured between the
            state of

            the upgrade domain nodes at the beginning of upgrade and the state
            of the

            upgrade domain nodes at the time of the health evaluation. The check
            is

            performed after every upgrade domain upgrade completion for all
            completed

            upgrade domains to make sure the state of the upgrade domains is
            within

            tolerated limits.
        - id: >-
            cluster.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of applications health degradation
            allowed

            during cluster upgrades. The delta is measured between the state of
            the

            applications at the beginning of upgrade and the state of the
            applications

            at the time of the health evaluation. The check is performed after
            every

            upgrade domain upgrade completion to make sure the global state of
            the

            cluster is within tolerated limits. System services are not included
            in

            this.
        - id: cluster.addOnFeatures
          type:
            - array
          description: |-
            The list of add-on features to enable
            in the cluster.
          optional: true
        - id: cluster.location
          type:
            - string
          description: Resource location.
        - id: cluster.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreate(resourceGroupName, clusterName, cluster, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#beginUpdateWithHttpOperationResponse'
    id: 'azure-arm-servicefabric.Clusters#beginUpdateWithHttpOperationResponse'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      beginUpdateWithHttpOperationResponse(resourceGroupName, clusterName,
      clusterUpdateParameters, options)
    summary: |-
      Update cluster configuration

      Update cluster configuration
    fullName: >-
      azure-arm-servicefabric.Clusters.beginUpdateWithHttpOperationResponse(resourceGroupName,
      clusterName, clusterUpdateParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: clusterUpdateParameters
          type:
            - object
          description: |-
            The parameters which contains the
            property value and property name which used to update the cluster
            configuration.
        - id: clusterUpdateParameters.reliabilityLevel
          type:
            - string
          description: >-
            The reliability

            level sets the replica set size of system services. Learn about

            [ReliabilityLevel](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity).

            Possible values include: 'Bronze', 'Silver', 'Gold'
          optional: true
        - id: clusterUpdateParameters.upgradeMode
          type:
            - string
          description: >-
            The upgrade mode of

            the cluster. This indicates if the cluster should be automatically
            upgraded

            when new Service Fabric runtime version is available. Possible
            values

            include: 'Automatic', 'Manual'
          optional: true
        - id: clusterUpdateParameters.clusterCodeVersion
          type:
            - string
          description: >-
            The Service

            Fabric runtime version of the cluster. This property can only by set
            the

            user when **upgradeMode** is set to 'Manual'. To get list of
            available

            Service Fabric versions for new clusters use [ClusterVersion

            API](./ClusterVersion.md). To get the list of available version for
            existing

            clusters use **availableClusterVersions**.
          optional: true
        - id: clusterUpdateParameters.certificate
          type:
            - object
          description: >-
            The certificate to use

            for securing the cluster. The certificate provided will be used for 
            node to

            node security within the cluster, SSL certificate for cluster
            management

            endpoint and default  admin client.
          optional: true
        - id: clusterUpdateParameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The

            list of client certificates referenced by thumbprint that are
            allowed to

            manage the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.clientCertificateCommonNames
          type:
            - array
          description: >-
            The

            list of client certificates referenced by common name that are
            allowed to

            manage the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.fabricSettings
          type:
            - array
          description: >-
            The list of custom

            fabric settings to configure the cluster. This will overwrite the
            existing

            list.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate
          type:
            - object
          description: |-
            The server
            certificate used by reverse proxy.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: Thumbprint of the primary certificate.
        - id: clusterUpdateParameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: clusterUpdateParameters.nodeTypes
          type:
            - array
          description: |-
            The list of node types in
            the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to
            use when upgrading the cluster.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: >-
            If true, then processes are forcefully restarted during upgrade even
            when

            the code version has not changed (the upgrade only changes
            configuration or

            data).
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            The

            maximum amount of time to block processing of an upgrade domain and
            revent

            loss of availability when there are unexpected issues. When this
            timeout

            expires, processing of the upgrade domain will proceed regardless of

            availability loss issues. The timeout is reset at the start of each
            upgrade

            domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks. The duration can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            amount of time that the application or cluster must remain healthy
            before

            the upgrade proceeds to the next upgrade domain. The duration can be
            in

            either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            amount of time to retry health evaluation when the application or
            cluster is

            unhealthy before the upgrade rolls back. The timeout can be in
            either

            hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: >-
            The amount of time the overall upgrade has to complete before the
            upgrade

            rolls back. The timeout can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: clusterUpdateParameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: >-
            The amount

            of time each upgrade domain has to complete before the upgrade rolls
            back.

            The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            The
            cluster health policy used when upgrading the cluster.
        - id: >-
            clusterUpdateParameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy nodes before reporting
            an error.

            For example, to allow 10% of nodes to be unhealthy, this value would
            be 10.
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            The delta
            health policy used when upgrading the cluster.
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of nodes health degradation allowed
            during

            cluster upgrades. The delta is measured between the state of the
            nodes at

            the beginning of upgrade and the state of the nodes at the time of
            the

            health evaluation. The check is performed after every upgrade domain
            upgrade

            completion to make sure the global state of the cluster is within
            tolerated

            limits.
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of upgrade domain nodes health
            degradation

            allowed during cluster upgrades. The delta is measured between the
            state of

            the upgrade domain nodes at the beginning of upgrade and the state
            of the

            upgrade domain nodes at the time of the health evaluation. The check
            is

            performed after every upgrade domain upgrade completion for all
            completed

            upgrade domains to make sure the state of the upgrade domains is
            within

            tolerated limits.
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of applications health degradation
            allowed

            during cluster upgrades. The delta is measured between the state of
            the

            applications at the beginning of upgrade and the state of the
            applications

            at the time of the health evaluation. The check is performed after
            every

            upgrade domain upgrade completion to make sure the global state of
            the

            cluster is within tolerated limits. System services are not included
            in

            this.
        - id: clusterUpdateParameters.addOnFeatures
          type:
            - array
          description: |-
            The list of add-on
            features to enable in the cluster.
          optional: true
        - id: clusterUpdateParameters.tags
          type:
            - object
          description: Cluster update parameters
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName,
        clusterName, clusterUpdateParameters, options)
    langs:
      - js
  - uid: 'azure-arm-servicefabric.Clusters#beginUpdate'
    id: 'azure-arm-servicefabric.Clusters#beginUpdate'
    parent: azure-arm-servicefabric.Clusters
    name: >-
      beginUpdate(resourceGroupName, clusterName, clusterUpdateParameters,
      options, optionalCallback)
    summary: |-
      Update cluster configuration

      Update cluster configuration
    fullName: >-
      azure-arm-servicefabric.Clusters.beginUpdate(resourceGroupName,
      clusterName, clusterUpdateParameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Cluster} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: clusterName
          type:
            - string
          description: The name of the cluster resource
        - id: clusterUpdateParameters
          type:
            - object
          description: |-
            The parameters which contains the
            property value and property name which used to update the cluster
            configuration.
        - id: clusterUpdateParameters.reliabilityLevel
          type:
            - string
          description: >-
            The reliability

            level sets the replica set size of system services. Learn about

            [ReliabilityLevel](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-cluster-capacity).

            Possible values include: 'Bronze', 'Silver', 'Gold'
          optional: true
        - id: clusterUpdateParameters.upgradeMode
          type:
            - string
          description: >-
            The upgrade mode of

            the cluster. This indicates if the cluster should be automatically
            upgraded

            when new Service Fabric runtime version is available. Possible
            values

            include: 'Automatic', 'Manual'
          optional: true
        - id: clusterUpdateParameters.clusterCodeVersion
          type:
            - string
          description: >-
            The Service

            Fabric runtime version of the cluster. This property can only by set
            the

            user when **upgradeMode** is set to 'Manual'. To get list of
            available

            Service Fabric versions for new clusters use [ClusterVersion

            API](./ClusterVersion.md). To get the list of available version for
            existing

            clusters use **availableClusterVersions**.
          optional: true
        - id: clusterUpdateParameters.certificate
          type:
            - object
          description: >-
            The certificate to use

            for securing the cluster. The certificate provided will be used for 
            node to

            node security within the cluster, SSL certificate for cluster
            management

            endpoint and default  admin client.
          optional: true
        - id: clusterUpdateParameters.clientCertificateThumbprints
          type:
            - array
          description: >-
            The

            list of client certificates referenced by thumbprint that are
            allowed to

            manage the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.clientCertificateCommonNames
          type:
            - array
          description: >-
            The

            list of client certificates referenced by common name that are
            allowed to

            manage the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.fabricSettings
          type:
            - array
          description: >-
            The list of custom

            fabric settings to configure the cluster. This will overwrite the
            existing

            list.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate
          type:
            - object
          description: |-
            The server
            certificate used by reverse proxy.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate.thumbprint
          type:
            - string
          description: Thumbprint of the primary certificate.
        - id: clusterUpdateParameters.reverseProxyCertificate.thumbprintSecondary
          type:
            - string
          description: Thumbprint of the secondary certificate.
          optional: true
        - id: clusterUpdateParameters.reverseProxyCertificate.x509StoreName
          type:
            - string
          description: |-
            The local
            certificate store location. Possible values include: 'AddressBook',
            'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root',
            'TrustedPeople', 'TrustedPublisher'
          optional: true
        - id: clusterUpdateParameters.nodeTypes
          type:
            - array
          description: |-
            The list of node types in
            the cluster. This will overwrite the existing list.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription
          type:
            - object
          description: |-
            The policy to
            use when upgrading the cluster.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription.forceRestart
          type:
            - boolean
          description: >-
            If true, then processes are forcefully restarted during upgrade even
            when

            the code version has not changed (the upgrade only changes
            configuration or

            data).
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.upgradeReplicaSetCheckTimeout
          type:
            - string
          description: >-
            The

            maximum amount of time to block processing of an upgrade domain and
            revent

            loss of availability when there are unexpected issues. When this
            timeout

            expires, processing of the upgrade domain will proceed regardless of

            availability loss issues. The timeout is reset at the start of each
            upgrade

            domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms
            format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckWaitDuration
          type:
            - string
          description: >-
            The

            length of time to wait after completing an upgrade domain before
            performing

            health checks. The duration can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckStableDuration
          type:
            - string
          description: >-
            The

            amount of time that the application or cluster must remain healthy
            before

            the upgrade proceeds to the next upgrade domain. The duration can be
            in

            either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.healthCheckRetryTimeout
          type:
            - string
          description: >-
            The

            amount of time to retry health evaluation when the application or
            cluster is

            unhealthy before the upgrade rolls back. The timeout can be in
            either

            hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.upgradeTimeout
          type:
            - string
          description: >-
            The amount of time the overall upgrade has to complete before the
            upgrade

            rolls back. The timeout can be in either hh:mm:ss or in
            d.hh:mm:ss.ms

            format.
        - id: clusterUpdateParameters.upgradeDescription.upgradeDomainTimeout
          type:
            - string
          description: >-
            The amount

            of time each upgrade domain has to complete before the upgrade rolls
            back.

            The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
        - id: clusterUpdateParameters.upgradeDescription.healthPolicy
          type:
            - object
          description: |-
            The
            cluster health policy used when upgrading the cluster.
        - id: >-
            clusterUpdateParameters.upgradeDescription.healthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy nodes before reporting
            an error.

            For example, to allow 10% of nodes to be unhealthy, this value would
            be 10.
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.healthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of unhealthy applications before
            reporting an

            error. For example, to allow 10% of applications to be unhealthy,
            this value

            would be 10.
          optional: true
        - id: clusterUpdateParameters.upgradeDescription.deltaHealthPolicy
          type:
            - object
          description: |-
            The delta
            health policy used when upgrading the cluster.
          optional: true
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of nodes health degradation allowed
            during

            cluster upgrades. The delta is measured between the state of the
            nodes at

            the beginning of upgrade and the state of the nodes at the time of
            the

            health evaluation. The check is performed after every upgrade domain
            upgrade

            completion to make sure the global state of the cluster is within
            tolerated

            limits.
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: >-
            The maximum allowed percentage of upgrade domain nodes health
            degradation

            allowed during cluster upgrades. The delta is measured between the
            state of

            the upgrade domain nodes at the beginning of upgrade and the state
            of the

            upgrade domain nodes at the time of the health evaluation. The check
            is

            performed after every upgrade domain upgrade completion for all
            completed

            upgrade domains to make sure the state of the upgrade domains is
            within

            tolerated limits.
        - id: >-
            clusterUpdateParameters.upgradeDescription.deltaHealthPolicy.maxPercentDeltaUnhealthyApplications
          type:
            - number
          description: >-
            The maximum allowed percentage of applications health degradation
            allowed

            during cluster upgrades. The delta is measured between the state of
            the

            applications at the beginning of upgrade and the state of the
            applications

            at the time of the health evaluation. The check is performed after
            every

            upgrade domain upgrade completion to make sure the global state of
            the

            cluster is within tolerated limits. System services are not included
            in

            this.
        - id: clusterUpdateParameters.addOnFeatures
          type:
            - array
          description: |-
            The list of add-on
            features to enable in the cluster.
          optional: true
        - id: clusterUpdateParameters.tags
          type:
            - object
          description: Cluster update parameters
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginUpdate(resourceGroupName, clusterName,
        clusterUpdateParameters, options, optionalCallback)
    langs:
      - js
references:
  - uid: azure-arm-servicefabric.ServiceFabricManagementClient
    name: ServiceFabricManagementClient
    fullName: azure-arm-servicefabric.ServiceFabricManagementClient
    isExternal: false

### YamlMime:UniversalReference
items:
  - uid: azure-arm-network.InboundNatRules
    id: azure-arm-network.InboundNatRules
    name: InboundNatRules
    summary: Class representing a InboundNatRules.
    fullName: azure-arm-network.InboundNatRules
    type: Class
    children:
      - 'azure-arm-network.InboundNatRules.#ctor'
      - 'azure-arm-network.InboundNatRules#listWithHttpOperationResponse'
      - 'azure-arm-network.InboundNatRules#list'
      - 'azure-arm-network.InboundNatRules#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-network.InboundNatRules#deleteMethod'
      - 'azure-arm-network.InboundNatRules#getWithHttpOperationResponse'
      - 'azure-arm-network.InboundNatRules#get'
      - >-
        azure-arm-network.InboundNatRules#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-network.InboundNatRules#createOrUpdate'
      - >-
        azure-arm-network.InboundNatRules#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-network.InboundNatRules#beginDeleteMethod'
      - >-
        azure-arm-network.InboundNatRules#beginCreateOrUpdateWithHttpOperationResponse
      - 'azure-arm-network.InboundNatRules#beginCreateOrUpdate'
      - 'azure-arm-network.InboundNatRules#listNextWithHttpOperationResponse'
      - 'azure-arm-network.InboundNatRules#listNext'
    langs:
      - js
  - id: 'azure-arm-network.InboundNatRules.#ctor'
    uid: 'azure-arm-network.InboundNatRules.#ctor'
    parent: azure-arm-network.InboundNatRules
    name: InboundNatRules(client)
    fullName: azure-arm-network.InboundNatRules.InboundNatRules(client)
    summary: Create a InboundNatRules.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-network.NetworkManagementClient
          description: Reference to the service client.
      content: new InboundNatRules(client)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#listWithHttpOperationResponse'
    id: 'azure-arm-network.InboundNatRules#listWithHttpOperationResponse'
    parent: azure-arm-network.InboundNatRules
    name: >-
      listWithHttpOperationResponse(resourceGroupName, loadBalancerName,
      options)
    summary: Gets all the inbound nat rules in a load balancer.
    fullName: >-
      azure-arm-network.InboundNatRules.listWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<InboundNatRuleListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<InboundNatRuleListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listWithHttpOperationResponse(resourceGroupName,
        loadBalancerName, options)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#list'
    id: 'azure-arm-network.InboundNatRules#list'
    parent: azure-arm-network.InboundNatRules
    name: 'list(resourceGroupName, loadBalancerName, options, optionalCallback)'
    summary: Gets all the inbound nat rules in a load balancer.
    fullName: >-
      azure-arm-network.InboundNatRules.list(resourceGroupName,
      loadBalancerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{InboundNatRuleListResult} - The deserialized result object.'
        value: '{InboundNatRuleListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRuleListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRuleListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function list(resourceGroupName, loadBalancerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-network.InboundNatRules#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-network.InboundNatRules
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, loadBalancerName,
      inboundNatRuleName, options)
    summary: Deletes the specified load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.deleteMethodWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, inboundNatRuleName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        loadBalancerName, inboundNatRuleName, options)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#deleteMethod'
    id: 'azure-arm-network.InboundNatRules#deleteMethod'
    parent: azure-arm-network.InboundNatRules
    name: >-
      deleteMethod(resourceGroupName, loadBalancerName, inboundNatRuleName,
      options, optionalCallback)
    summary: Deletes the specified load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.deleteMethod(resourceGroupName,
      loadBalancerName, inboundNatRuleName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, loadBalancerName,
        inboundNatRuleName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#getWithHttpOperationResponse'
    id: 'azure-arm-network.InboundNatRules#getWithHttpOperationResponse'
    parent: azure-arm-network.InboundNatRules
    name: >-
      getWithHttpOperationResponse(resourceGroupName, loadBalancerName,
      inboundNatRuleName, options)
    summary: Gets the specified load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.getWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, inboundNatRuleName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<InboundNatRule>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<InboundNatRule>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: Expands referenced resources.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName,
        loadBalancerName, inboundNatRuleName, options)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#get'
    id: 'azure-arm-network.InboundNatRules#get'
    parent: azure-arm-network.InboundNatRules
    name: >-
      get(resourceGroupName, loadBalancerName, inboundNatRuleName, options,
      optionalCallback)
    summary: Gets the specified load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.get(resourceGroupName, loadBalancerName,
      inboundNatRuleName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{InboundNatRule} - The deserialized result object.'
        value: '{InboundNatRule} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: Expands referenced resources.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, loadBalancerName, inboundNatRuleName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-network.InboundNatRules#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-network.InboundNatRules
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, inboundNatRuleName, inboundNatRuleParameters, options)
    summary: Creates or updates a load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, inboundNatRuleName, inboundNatRuleParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<InboundNatRule>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<InboundNatRule>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: inboundNatRuleParameters
          type:
            - object
          description: |-
            Parameters supplied to the create
            or update inbound nat rule operation.
        - id: inboundNatRuleParameters.frontendIPConfiguration
          type:
            - object
          description: |-
            A
            reference to frontend IP addresses.
          optional: true
        - id: inboundNatRuleParameters.frontendIPConfiguration.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: inboundNatRuleParameters.protocol
          type:
            - string
          description: |-
            Possible values include:
            'Udp', 'Tcp', 'All'
          optional: true
        - id: inboundNatRuleParameters.frontendPort
          type:
            - number
          description: >-
            The port for the

            external endpoint. Port numbers for each rule must be unique within
            the Load

            Balancer. Acceptable values range from 1 to 65534.
          optional: true
        - id: inboundNatRuleParameters.backendPort
          type:
            - number
          description: |-
            The port used for the
            internal endpoint. Acceptable values range from 1 to 65535.
          optional: true
        - id: inboundNatRuleParameters.idleTimeoutInMinutes
          type:
            - number
          description: >-
            The timeout

            for the TCP idle connection. The value can be set between 4 and 30
            minutes.

            The default value is 4 minutes. This element is only used when the
            protocol

            is set to TCP.
          optional: true
        - id: inboundNatRuleParameters.enableFloatingIP
          type:
            - boolean
          description: >-
            Configures a

            virtual machine's endpoint for the floating IP capability required
            to

            configure a SQL AlwaysOn Availability Group. This setting is
            required when

            using the SQL AlwaysOn Availability Groups in SQL server. This
            setting can't

            be changed after you create the endpoint.
          optional: true
        - id: inboundNatRuleParameters.provisioningState
          type:
            - string
          description: |-
            Gets the
            provisioning state of the public IP resource. Possible values are:
            'Updating', 'Deleting', and 'Failed'.
          optional: true
        - id: inboundNatRuleParameters.name
          type:
            - string
          description: >-
            Gets name of the resource

            that is unique within a resource group. This name can be used to
            access the

            resource.
          optional: true
        - id: inboundNatRuleParameters.etag
          type:
            - string
          description: |-
            A unique read-only string
            that changes whenever the resource is updated.
          optional: true
        - id: inboundNatRuleParameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        loadBalancerName, inboundNatRuleName, inboundNatRuleParameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#createOrUpdate'
    id: 'azure-arm-network.InboundNatRules#createOrUpdate'
    parent: azure-arm-network.InboundNatRules
    name: >-
      createOrUpdate(resourceGroupName, loadBalancerName, inboundNatRuleName,
      inboundNatRuleParameters, options, optionalCallback)
    summary: Creates or updates a load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.createOrUpdate(resourceGroupName,
      loadBalancerName, inboundNatRuleName, inboundNatRuleParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{InboundNatRule} - The deserialized result object.'
        value: '{InboundNatRule} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: inboundNatRuleParameters
          type:
            - object
          description: |-
            Parameters supplied to the create
            or update inbound nat rule operation.
        - id: inboundNatRuleParameters.frontendIPConfiguration
          type:
            - object
          description: |-
            A
            reference to frontend IP addresses.
          optional: true
        - id: inboundNatRuleParameters.frontendIPConfiguration.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: inboundNatRuleParameters.protocol
          type:
            - string
          description: |-
            Possible values include:
            'Udp', 'Tcp', 'All'
          optional: true
        - id: inboundNatRuleParameters.frontendPort
          type:
            - number
          description: >-
            The port for the

            external endpoint. Port numbers for each rule must be unique within
            the Load

            Balancer. Acceptable values range from 1 to 65534.
          optional: true
        - id: inboundNatRuleParameters.backendPort
          type:
            - number
          description: |-
            The port used for the
            internal endpoint. Acceptable values range from 1 to 65535.
          optional: true
        - id: inboundNatRuleParameters.idleTimeoutInMinutes
          type:
            - number
          description: >-
            The timeout

            for the TCP idle connection. The value can be set between 4 and 30
            minutes.

            The default value is 4 minutes. This element is only used when the
            protocol

            is set to TCP.
          optional: true
        - id: inboundNatRuleParameters.enableFloatingIP
          type:
            - boolean
          description: >-
            Configures a

            virtual machine's endpoint for the floating IP capability required
            to

            configure a SQL AlwaysOn Availability Group. This setting is
            required when

            using the SQL AlwaysOn Availability Groups in SQL server. This
            setting can't

            be changed after you create the endpoint.
          optional: true
        - id: inboundNatRuleParameters.provisioningState
          type:
            - string
          description: |-
            Gets the
            provisioning state of the public IP resource. Possible values are:
            'Updating', 'Deleting', and 'Failed'.
          optional: true
        - id: inboundNatRuleParameters.name
          type:
            - string
          description: >-
            Gets name of the resource

            that is unique within a resource group. This name can be used to
            access the

            resource.
          optional: true
        - id: inboundNatRuleParameters.etag
          type:
            - string
          description: |-
            A unique read-only string
            that changes whenever the resource is updated.
          optional: true
        - id: inboundNatRuleParameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, loadBalancerName,
        inboundNatRuleName, inboundNatRuleParameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.InboundNatRules#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-network.InboundNatRules#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-network.InboundNatRules
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, inboundNatRuleName, options)
    summary: Deletes the specified load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, inboundNatRuleName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        loadBalancerName, inboundNatRuleName, options)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#beginDeleteMethod'
    id: 'azure-arm-network.InboundNatRules#beginDeleteMethod'
    parent: azure-arm-network.InboundNatRules
    name: >-
      beginDeleteMethod(resourceGroupName, loadBalancerName, inboundNatRuleName,
      options, optionalCallback)
    summary: Deletes the specified load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.beginDeleteMethod(resourceGroupName,
      loadBalancerName, inboundNatRuleName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, loadBalancerName,
        inboundNatRuleName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.InboundNatRules#beginCreateOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-network.InboundNatRules#beginCreateOrUpdateWithHttpOperationResponse
    parent: azure-arm-network.InboundNatRules
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, inboundNatRuleName, inboundNatRuleParameters, options)
    summary: Creates or updates a load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      loadBalancerName, inboundNatRuleName, inboundNatRuleParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<InboundNatRule>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<InboundNatRule>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: inboundNatRuleParameters
          type:
            - object
          description: |-
            Parameters supplied to the create
            or update inbound nat rule operation.
        - id: inboundNatRuleParameters.frontendIPConfiguration
          type:
            - object
          description: |-
            A
            reference to frontend IP addresses.
          optional: true
        - id: inboundNatRuleParameters.frontendIPConfiguration.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: inboundNatRuleParameters.protocol
          type:
            - string
          description: |-
            Possible values include:
            'Udp', 'Tcp', 'All'
          optional: true
        - id: inboundNatRuleParameters.frontendPort
          type:
            - number
          description: >-
            The port for the

            external endpoint. Port numbers for each rule must be unique within
            the Load

            Balancer. Acceptable values range from 1 to 65534.
          optional: true
        - id: inboundNatRuleParameters.backendPort
          type:
            - number
          description: |-
            The port used for the
            internal endpoint. Acceptable values range from 1 to 65535.
          optional: true
        - id: inboundNatRuleParameters.idleTimeoutInMinutes
          type:
            - number
          description: >-
            The timeout

            for the TCP idle connection. The value can be set between 4 and 30
            minutes.

            The default value is 4 minutes. This element is only used when the
            protocol

            is set to TCP.
          optional: true
        - id: inboundNatRuleParameters.enableFloatingIP
          type:
            - boolean
          description: >-
            Configures a

            virtual machine's endpoint for the floating IP capability required
            to

            configure a SQL AlwaysOn Availability Group. This setting is
            required when

            using the SQL AlwaysOn Availability Groups in SQL server. This
            setting can't

            be changed after you create the endpoint.
          optional: true
        - id: inboundNatRuleParameters.provisioningState
          type:
            - string
          description: |-
            Gets the
            provisioning state of the public IP resource. Possible values are:
            'Updating', 'Deleting', and 'Failed'.
          optional: true
        - id: inboundNatRuleParameters.name
          type:
            - string
          description: >-
            Gets name of the resource

            that is unique within a resource group. This name can be used to
            access the

            resource.
          optional: true
        - id: inboundNatRuleParameters.etag
          type:
            - string
          description: |-
            A unique read-only string
            that changes whenever the resource is updated.
          optional: true
        - id: inboundNatRuleParameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        loadBalancerName, inboundNatRuleName, inboundNatRuleParameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#beginCreateOrUpdate'
    id: 'azure-arm-network.InboundNatRules#beginCreateOrUpdate'
    parent: azure-arm-network.InboundNatRules
    name: >-
      beginCreateOrUpdate(resourceGroupName, loadBalancerName,
      inboundNatRuleName, inboundNatRuleParameters, options, optionalCallback)
    summary: Creates or updates a load balancer inbound nat rule.
    fullName: >-
      azure-arm-network.InboundNatRules.beginCreateOrUpdate(resourceGroupName,
      loadBalancerName, inboundNatRuleName, inboundNatRuleParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{InboundNatRule} - The deserialized result object.'
        value: '{InboundNatRule} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRule} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: loadBalancerName
          type:
            - string
          description: The name of the load balancer.
        - id: inboundNatRuleName
          type:
            - string
          description: The name of the inbound nat rule.
        - id: inboundNatRuleParameters
          type:
            - object
          description: |-
            Parameters supplied to the create
            or update inbound nat rule operation.
        - id: inboundNatRuleParameters.frontendIPConfiguration
          type:
            - object
          description: |-
            A
            reference to frontend IP addresses.
          optional: true
        - id: inboundNatRuleParameters.frontendIPConfiguration.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: inboundNatRuleParameters.protocol
          type:
            - string
          description: |-
            Possible values include:
            'Udp', 'Tcp', 'All'
          optional: true
        - id: inboundNatRuleParameters.frontendPort
          type:
            - number
          description: >-
            The port for the

            external endpoint. Port numbers for each rule must be unique within
            the Load

            Balancer. Acceptable values range from 1 to 65534.
          optional: true
        - id: inboundNatRuleParameters.backendPort
          type:
            - number
          description: |-
            The port used for the
            internal endpoint. Acceptable values range from 1 to 65535.
          optional: true
        - id: inboundNatRuleParameters.idleTimeoutInMinutes
          type:
            - number
          description: >-
            The timeout

            for the TCP idle connection. The value can be set between 4 and 30
            minutes.

            The default value is 4 minutes. This element is only used when the
            protocol

            is set to TCP.
          optional: true
        - id: inboundNatRuleParameters.enableFloatingIP
          type:
            - boolean
          description: >-
            Configures a

            virtual machine's endpoint for the floating IP capability required
            to

            configure a SQL AlwaysOn Availability Group. This setting is
            required when

            using the SQL AlwaysOn Availability Groups in SQL server. This
            setting can't

            be changed after you create the endpoint.
          optional: true
        - id: inboundNatRuleParameters.provisioningState
          type:
            - string
          description: |-
            Gets the
            provisioning state of the public IP resource. Possible values are:
            'Updating', 'Deleting', and 'Failed'.
          optional: true
        - id: inboundNatRuleParameters.name
          type:
            - string
          description: >-
            Gets name of the resource

            that is unique within a resource group. This name can be used to
            access the

            resource.
          optional: true
        - id: inboundNatRuleParameters.etag
          type:
            - string
          description: |-
            A unique read-only string
            that changes whenever the resource is updated.
          optional: true
        - id: inboundNatRuleParameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdate(resourceGroupName, loadBalancerName,
        inboundNatRuleName, inboundNatRuleParameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#listNextWithHttpOperationResponse'
    id: 'azure-arm-network.InboundNatRules#listNextWithHttpOperationResponse'
    parent: azure-arm-network.InboundNatRules
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets all the inbound nat rules in a load balancer.
    fullName: >-
      azure-arm-network.InboundNatRules.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<InboundNatRuleListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<InboundNatRuleListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-network.InboundNatRules#listNext'
    id: 'azure-arm-network.InboundNatRules#listNext'
    parent: azure-arm-network.InboundNatRules
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Gets all the inbound nat rules in a load balancer.
    fullName: >-
      azure-arm-network.InboundNatRules.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{InboundNatRuleListResult} - The deserialized result object.'
        value: '{InboundNatRuleListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRuleListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link InboundNatRuleListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-arm-network.NetworkManagementClient
    name: NetworkManagementClient
    fullName: azure-arm-network.NetworkManagementClient
    isExternal: false

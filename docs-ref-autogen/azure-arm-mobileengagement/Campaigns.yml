### YamlMime:UniversalReference
items:
  - uid: azure-arm-mobileengagement.Campaigns
    id: azure-arm-mobileengagement.Campaigns
    name: Campaigns
    summary: Class representing a Campaigns.
    fullName: azure-arm-mobileengagement.Campaigns
    type: Class
    children:
      - 'azure-arm-mobileengagement.Campaigns.#ctor'
    langs:
      - js
  - id: 'azure-arm-mobileengagement.Campaigns.#ctor'
    uid: 'azure-arm-mobileengagement.Campaigns.#ctor'
    parent: azure-arm-mobileengagement.Campaigns
    name: Campaigns(client)
    fullName: azure-arm-mobileengagement.Campaigns.Campaigns(client)
    summary: Create a Campaigns.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-mobileengagement.MobileEngagementClient
          description: Reference to the service client.
      content: new Campaigns(client)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#listWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#listWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      listWithHttpOperationResponse(resourceGroupName, appCollection, appName,
      kind, options)
    summary: Get the list of campaigns.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.listWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignsListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignsListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skip
          type:
            - number
          description: |-
            Control paging of campaigns, start results at
            the given offset, defaults to 0 (1st page of data).
          optional: true
        - id: options.top
          type:
            - number
          description: >-
            Control paging of campaigns, number of

            campaigns to return with each call. It returns all campaigns by
            default.

            When specifying $top parameter, the response contains a `nextLink`
            property

            describing the path to get the next page if there are more results.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Filter can be used to restrict the results

            to campaigns matching a specific state. The syntax is `$filter=state
            eq

            'draft'`. Valid state values are: draft, scheduled, in-progress, and

            finished. Only the eq operator and the state property are supported.
          optional: true
        - id: options.orderby
          type:
            - string
          description: >-
            Sort results by an expression which looks

            like `$orderby=id asc` (this example is actually the default
            behavior). The

            syntax is orderby={property} {direction} or just orderby={property}.
            The

            available sorting properties are id, name, state, activatedDate, and

            finishedDate. The available directions are asc (for ascending order)
            and

            desc (for descending order). When not specified the asc direction is
            used.

            Only one property at a time can be used for sorting.
          optional: true
        - id: options.search
          type:
            - string
          description: >-
            Restrict results to campaigns matching the

            optional `search` expression. This currently performs the search
            based on

            the name on the campaign only, case insensitive. If the campaign
            contains

            the value of the `search` parameter anywhere in the name, it
            matches.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listWithHttpOperationResponse(resourceGroupName, appCollection,
        appName, kind, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#list'
    id: 'azure-arm-mobileengagement.Campaigns#list'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      list(resourceGroupName, appCollection, appName, kind, options,
      optionalCallback)
    summary: Get the list of campaigns.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.list(resourceGroupName,
      appCollection, appName, kind, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignsListResult} - The deserialized result object.'
        value: '{CampaignsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignsListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignsListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skip
          type:
            - number
          description: |-
            Control paging of campaigns, start results at
            the given offset, defaults to 0 (1st page of data).
          optional: true
        - id: options.top
          type:
            - number
          description: >-
            Control paging of campaigns, number of

            campaigns to return with each call. It returns all campaigns by
            default.

            When specifying $top parameter, the response contains a `nextLink`
            property

            describing the path to get the next page if there are more results.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Filter can be used to restrict the results

            to campaigns matching a specific state. The syntax is `$filter=state
            eq

            'draft'`. Valid state values are: draft, scheduled, in-progress, and

            finished. Only the eq operator and the state property are supported.
          optional: true
        - id: options.orderby
          type:
            - string
          description: >-
            Sort results by an expression which looks

            like `$orderby=id asc` (this example is actually the default
            behavior). The

            syntax is orderby={property} {direction} or just orderby={property}.
            The

            available sorting properties are id, name, state, activatedDate, and

            finishedDate. The available directions are asc (for ascending order)
            and

            desc (for descending order). When not specified the asc direction is
            used.

            Only one property at a time can be used for sorting.
          optional: true
        - id: options.search
          type:
            - string
          description: >-
            Restrict results to campaigns matching the

            optional `search` expression. This currently performs the search
            based on

            the name on the campaign only, case insensitive. If the campaign
            contains

            the value of the `search` parameter anywhere in the name, it
            matches.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function list(resourceGroupName, appCollection, appName, kind, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#createWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#createWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      createWithHttpOperationResponse(resourceGroupName, appCollection, appName,
      kind, parameters, options)
    summary: 'Create a push campaign (announcement, poll, data push or native push).'
    fullName: >-
      azure-arm-mobileengagement.Campaigns.createWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Update Campaign
            operation.
        - id: parameters.name
          type:
            - string
          description: Unique name of the campaign.
          optional: true
        - id: parameters.audience
          type:
            - object
          description: >-
            Specify which users will be targeted

            by this campaign. By default, all users will be targeted. If you set

            `pushMode` property to `manual`, the only thing you can specify in
            the

            audience is the push quota filter. An audience is a boolean
            expression made

            of criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Additionally, a set of filters can be added to an audience. 65535
            bytes max

            as per JSON encoding.
          optional: true
        - id: parameters.audience.expression
          type:
            - string
          description: >-
            Boolean expression made of

            criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Criterion names in the audience expression must start with a capital
            letter

            and can only contain alphanumeric (A-Z,a-z,0-9) and underscore (_)

            characters.
          optional: true
        - id: parameters.audience.criteria
          type:
            - object
          description: Criteria by name.
          optional: true
        - id: parameters.audience.filters
          type:
            - array
          description: |-
            Global filters applied to all
            devices.
          optional: true
        - id: parameters.category
          type:
            - string
          description: |-
            Category of the campaign. Categories
            can be used on the application side to customize campaigns.
          optional: true
        - id: parameters.pushMode
          type:
            - string
          description: >-
            Announcements/polls only. Defines how

            the campaign is pushed. Valid values are: * `real-time`: Never
            ending

            campaign, the campaign will be delivered  to your existing users and
            also to

            your new users. * `one-shot`: In this mode, the campaign will be
            delivered

            only to your existing users (campaign will stop after that). *
            `manual`: In

            this mode, the campaign will not be pushed automatically to devices.
            You

            will have to use the Push campaign command to push the campaign to
            your

            end-users. Campaigns can be pushed multiple times to the same
            device.

            . Possible values include: 'real-time', 'one-shot', 'manual'
          optional: true
        - id: parameters.type
          type:
            - string
          description: >-
            Applicable only to announcements and data

            pushes. Type of announcement. Valid values are: * `text/plain`:
            Text-only

            announcement: `body` property should only contain plain text. *
            `text/html`:

            HTML announcement: `body` attribute can contain HTML code. *
            `only_notif`:

            Notification-only announcement. With this kind of announcements, the
            `body`,

            `title`, `actionButtonText` and `exitButtonText` are ignored. Type
            of data

            push. Valid values are: * `text/plain`: Text only data push: `body`
            property

            must be plain text. * `text/base64`: Base 64 data push: `body`
            property must

            be encoded in base 64.

            . Possible values include: 'text/plain', 'text/html', 'only_notif',

            'text/base64'
          optional: true
        - id: parameters.deliveryTime
          type:
            - string
          description: >-
            Announcements/polls only. Defines

            when the campaign should be delivered. Valid values are: * `any`:
            Campaign

            will be delivered as soon as possible. * `background`: iOS only.
            Campaign

            will be only delivered when the application is in background (out of
            app). *

            `session`: Campaign will be delivered when the application is
            running.

            . Possible values include: 'any', 'background', 'session'
          optional: true
        - id: parameters.deliveryActivities
          type:
            - array
          description: >-
            Announcements/polls only.

            Array containing the list of activities in which the campaign can be

            delivered. deliveryTime must be set to session. If the platform is
            iOS, this

            option can also be set if deliveryTime is set to any. In that case,
            if the

            campaign is received when the application is launched, it will be
            delivered

            only in the specified list of activities.
          optional: true
        - id: parameters.startTime
          type:
            - string
          description: >-
            The date at which the campaign should

            be started. The date shall conform to the following format:

            `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual,
            this

            attribute will be ignored. * If you set pushMode property to
            one-shot, then

            the timezone attribute must be specified. Example: `2011-11-21
            15:23Z`
          optional: true
        - id: parameters.endTime
          type:
            - string
          description: |-
            The date at which the campaign should
            be finished. The date shall conform to the following format:
            `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
          optional: true
        - id: parameters.timezone
          type:
            - string
          description: >-
            The id of the time zone to use for the

            startTime and endTime dates. If not provided, the two date
            attributes will

            be expressed using the device timezone. Example: America/Los_Angeles
          optional: true
        - id: parameters.notificationType
          type:
            - string
          description: >-
            Android only. Defines how the

            notification should be displayed. Valid values are: * `system`:
            Display the

            notification using a standard system notification. * `popup`:
            Display the

            notification using a in-app banner notification.

            . Possible values include: 'system', 'popup'
          optional: true
        - id: parameters.notificationIcon
          type:
            - boolean
          description: |-
            A flag indicating whether or
            not you want to display the resource icon in notification content.
          optional: true
        - id: parameters.notificationCloseable
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want the notification to be closeable.
          optional: true
        - id: parameters.notificationVibrate
          type:
            - boolean
          description: |-
            Android only. A flag
            indicating whether or not you want the system notification to make a
            vibration. The notificationType property must be set to system.
          optional: true
        - id: parameters.notificationSound
          type:
            - boolean
          description: >-
            * `Android`: A flag

            indicating whether or not you want the system notification to make a
            sound.

            The `notificationType` property must be set to `system`. * `iOS`: A
            flag

            indicating whether or not you want the native Apple Push
            notification to

            make a sound. The `deliveryTime` property must be set to `any` or

            `background`. This will play the 'default' sound. If you want to
            play a

            custom sound, see the `notificationOptions` property. * `Windows`: A
            flag

            indicating whether or not you want the native Windows Notification
            Service

            to make a sound. The `deliveryTime` property must be set to `any`.
          optional: true
        - id: parameters.notificationBadge
          type:
            - boolean
          description: >-
            A flag indicating whether or

            not you want the native Apple Push notification to update the badge
            icon to

            the number of unread messages. The `deliveryTime` property must be
            set to

            `any` or `background`.
          optional: true
        - id: parameters.localization
          type:
            - object
          description: >-
            Push campaigns can be localized

            using an optional JSON object. The JSON key is a two-character
            language code

            as specified by the ISO 639-1 standard. The corresponding value is
            an object

            containing the localizable properties.
          optional: true
        - id: parameters.questions
          type:
            - array
          description: Poll questions.
          optional: true
        - id: parameters.notificationTitle
          type:
            - string
          description: |-
            Title of the notification.
            This field supports appInfo markers.
          optional: true
        - id: parameters.notificationMessage
          type:
            - string
          description: |-
            Message of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.notificationImage
          type:
            - azure-arm-mobileengagement.buffer
          description: >-
            Optional image encoded in

            base 64. Usually included in the right part of in app notifications
            (or as a

            banner if there is neither text nor content icon). For Android
            system

            notifications, the image is used as the large icon (displayed only
            on

            Android 3+).
          optional: true
        - id: parameters.notificationOptions
          type:
            - object
          description: |-
            Additional platform
            specific options.
          optional: true
        - id: parameters.notificationOptions.bigText
          type:
            - string
          description: >-
            Android 4.1+ only.

            Multi line message shown in expanded notifications on Android 4.1+
            devices.

            The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.notificationOptions.bigPicture
          type:
            - string
          description: |-
            URL of a remote
            image displayed in expanded notifications on
            Android 4.1+ devices with the following constraints:
            * The URL length is limited to 2000 characters.
            * The image size must be less than 4 MiB.
            * The following MIME types are supported:
            ** image/png
            ** image/jpeg
            ** image/gif
            ** image/webp
            ** image/bmp
            ** image/x-bmp
            ** image/x-ms-bmp
            * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
            * Incompatible with `bigText`, only one of the fields can be set.
            * The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.notificationOptions.sound
          type:
            - string
          description: >-
            iOS only. The name of

            a sound file in the application bundle. The sound in this file is
            played as

            an alert. If the sound file doesn’t exist or default is specified as
            the

            value, the default alert sound is played. The audio must be in one
            of the

            audio data formats that are compatible with system sounds. The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.notificationOptions.actionText
          type:
            - string
          description: >-
            The action text

            is the title of the right button of the alert or the value of the
            unlock

            slider, where the value replaces 'unlock' in 'slide to unlock'.
            'View'

            (localized to the preferred language) is used as the default value.
            The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.title
          type:
            - string
          description: |-
            Title of the announcement or poll. This
            field supports appInfo markers.
          optional: true
        - id: parameters.body
          type:
            - string
          description: |-
            Body of the text/web announcement, poll or
            data push. This field supports appInfo markers.
          optional: true
        - id: parameters.actionButtonText
          type:
            - string
          description: |-
            Text of the action button for
            text/web announcements and polls (answer button).
          optional: true
        - id: parameters.exitButtonText
          type:
            - string
          description: |-
            Text of the exit button for
            text/web announcements and polls.
          optional: true
        - id: parameters.actionUrl
          type:
            - string
          description: |-
            URL to launch when the announcement
            is actioned.
          optional: true
        - id: parameters.payload
          type:
            - object
          description: Native push payload.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName,
        appCollection, appName, kind, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#create'
    id: 'azure-arm-mobileengagement.Campaigns#create'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      create(resourceGroupName, appCollection, appName, kind, parameters,
      options, optionalCallback)
    summary: 'Create a push campaign (announcement, poll, data push or native push).'
    fullName: >-
      azure-arm-mobileengagement.Campaigns.create(resourceGroupName,
      appCollection, appName, kind, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignStateResult} - The deserialized result object.'
        value: '{CampaignStateResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Update Campaign
            operation.
        - id: parameters.name
          type:
            - string
          description: Unique name of the campaign.
          optional: true
        - id: parameters.audience
          type:
            - object
          description: >-
            Specify which users will be targeted

            by this campaign. By default, all users will be targeted. If you set

            `pushMode` property to `manual`, the only thing you can specify in
            the

            audience is the push quota filter. An audience is a boolean
            expression made

            of criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Additionally, a set of filters can be added to an audience. 65535
            bytes max

            as per JSON encoding.
          optional: true
        - id: parameters.audience.expression
          type:
            - string
          description: >-
            Boolean expression made of

            criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Criterion names in the audience expression must start with a capital
            letter

            and can only contain alphanumeric (A-Z,a-z,0-9) and underscore (_)

            characters.
          optional: true
        - id: parameters.audience.criteria
          type:
            - object
          description: Criteria by name.
          optional: true
        - id: parameters.audience.filters
          type:
            - array
          description: |-
            Global filters applied to all
            devices.
          optional: true
        - id: parameters.category
          type:
            - string
          description: |-
            Category of the campaign. Categories
            can be used on the application side to customize campaigns.
          optional: true
        - id: parameters.pushMode
          type:
            - string
          description: >-
            Announcements/polls only. Defines how

            the campaign is pushed. Valid values are: * `real-time`: Never
            ending

            campaign, the campaign will be delivered  to your existing users and
            also to

            your new users. * `one-shot`: In this mode, the campaign will be
            delivered

            only to your existing users (campaign will stop after that). *
            `manual`: In

            this mode, the campaign will not be pushed automatically to devices.
            You

            will have to use the Push campaign command to push the campaign to
            your

            end-users. Campaigns can be pushed multiple times to the same
            device.

            . Possible values include: 'real-time', 'one-shot', 'manual'
          optional: true
        - id: parameters.type
          type:
            - string
          description: >-
            Applicable only to announcements and data

            pushes. Type of announcement. Valid values are: * `text/plain`:
            Text-only

            announcement: `body` property should only contain plain text. *
            `text/html`:

            HTML announcement: `body` attribute can contain HTML code. *
            `only_notif`:

            Notification-only announcement. With this kind of announcements, the
            `body`,

            `title`, `actionButtonText` and `exitButtonText` are ignored. Type
            of data

            push. Valid values are: * `text/plain`: Text only data push: `body`
            property

            must be plain text. * `text/base64`: Base 64 data push: `body`
            property must

            be encoded in base 64.

            . Possible values include: 'text/plain', 'text/html', 'only_notif',

            'text/base64'
          optional: true
        - id: parameters.deliveryTime
          type:
            - string
          description: >-
            Announcements/polls only. Defines

            when the campaign should be delivered. Valid values are: * `any`:
            Campaign

            will be delivered as soon as possible. * `background`: iOS only.
            Campaign

            will be only delivered when the application is in background (out of
            app). *

            `session`: Campaign will be delivered when the application is
            running.

            . Possible values include: 'any', 'background', 'session'
          optional: true
        - id: parameters.deliveryActivities
          type:
            - array
          description: >-
            Announcements/polls only.

            Array containing the list of activities in which the campaign can be

            delivered. deliveryTime must be set to session. If the platform is
            iOS, this

            option can also be set if deliveryTime is set to any. In that case,
            if the

            campaign is received when the application is launched, it will be
            delivered

            only in the specified list of activities.
          optional: true
        - id: parameters.startTime
          type:
            - string
          description: >-
            The date at which the campaign should

            be started. The date shall conform to the following format:

            `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual,
            this

            attribute will be ignored. * If you set pushMode property to
            one-shot, then

            the timezone attribute must be specified. Example: `2011-11-21
            15:23Z`
          optional: true
        - id: parameters.endTime
          type:
            - string
          description: |-
            The date at which the campaign should
            be finished. The date shall conform to the following format:
            `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
          optional: true
        - id: parameters.timezone
          type:
            - string
          description: >-
            The id of the time zone to use for the

            startTime and endTime dates. If not provided, the two date
            attributes will

            be expressed using the device timezone. Example: America/Los_Angeles
          optional: true
        - id: parameters.notificationType
          type:
            - string
          description: >-
            Android only. Defines how the

            notification should be displayed. Valid values are: * `system`:
            Display the

            notification using a standard system notification. * `popup`:
            Display the

            notification using a in-app banner notification.

            . Possible values include: 'system', 'popup'
          optional: true
        - id: parameters.notificationIcon
          type:
            - boolean
          description: |-
            A flag indicating whether or
            not you want to display the resource icon in notification content.
          optional: true
        - id: parameters.notificationCloseable
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want the notification to be closeable.
          optional: true
        - id: parameters.notificationVibrate
          type:
            - boolean
          description: |-
            Android only. A flag
            indicating whether or not you want the system notification to make a
            vibration. The notificationType property must be set to system.
          optional: true
        - id: parameters.notificationSound
          type:
            - boolean
          description: >-
            * `Android`: A flag

            indicating whether or not you want the system notification to make a
            sound.

            The `notificationType` property must be set to `system`. * `iOS`: A
            flag

            indicating whether or not you want the native Apple Push
            notification to

            make a sound. The `deliveryTime` property must be set to `any` or

            `background`. This will play the 'default' sound. If you want to
            play a

            custom sound, see the `notificationOptions` property. * `Windows`: A
            flag

            indicating whether or not you want the native Windows Notification
            Service

            to make a sound. The `deliveryTime` property must be set to `any`.
          optional: true
        - id: parameters.notificationBadge
          type:
            - boolean
          description: >-
            A flag indicating whether or

            not you want the native Apple Push notification to update the badge
            icon to

            the number of unread messages. The `deliveryTime` property must be
            set to

            `any` or `background`.
          optional: true
        - id: parameters.localization
          type:
            - object
          description: >-
            Push campaigns can be localized

            using an optional JSON object. The JSON key is a two-character
            language code

            as specified by the ISO 639-1 standard. The corresponding value is
            an object

            containing the localizable properties.
          optional: true
        - id: parameters.questions
          type:
            - array
          description: Poll questions.
          optional: true
        - id: parameters.notificationTitle
          type:
            - string
          description: |-
            Title of the notification.
            This field supports appInfo markers.
          optional: true
        - id: parameters.notificationMessage
          type:
            - string
          description: |-
            Message of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.notificationImage
          type:
            - azure-arm-mobileengagement.buffer
          description: >-
            Optional image encoded in

            base 64. Usually included in the right part of in app notifications
            (or as a

            banner if there is neither text nor content icon). For Android
            system

            notifications, the image is used as the large icon (displayed only
            on

            Android 3+).
          optional: true
        - id: parameters.notificationOptions
          type:
            - object
          description: |-
            Additional platform
            specific options.
          optional: true
        - id: parameters.notificationOptions.bigText
          type:
            - string
          description: >-
            Android 4.1+ only.

            Multi line message shown in expanded notifications on Android 4.1+
            devices.

            The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.notificationOptions.bigPicture
          type:
            - string
          description: |-
            URL of a remote
            image displayed in expanded notifications on
            Android 4.1+ devices with the following constraints:
            * The URL length is limited to 2000 characters.
            * The image size must be less than 4 MiB.
            * The following MIME types are supported:
            ** image/png
            ** image/jpeg
            ** image/gif
            ** image/webp
            ** image/bmp
            ** image/x-bmp
            ** image/x-ms-bmp
            * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
            * Incompatible with `bigText`, only one of the fields can be set.
            * The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.notificationOptions.sound
          type:
            - string
          description: >-
            iOS only. The name of

            a sound file in the application bundle. The sound in this file is
            played as

            an alert. If the sound file doesn’t exist or default is specified as
            the

            value, the default alert sound is played. The audio must be in one
            of the

            audio data formats that are compatible with system sounds. The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.notificationOptions.actionText
          type:
            - string
          description: >-
            The action text

            is the title of the right button of the alert or the value of the
            unlock

            slider, where the value replaces 'unlock' in 'slide to unlock'.
            'View'

            (localized to the preferred language) is used as the default value.
            The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.title
          type:
            - string
          description: |-
            Title of the announcement or poll. This
            field supports appInfo markers.
          optional: true
        - id: parameters.body
          type:
            - string
          description: |-
            Body of the text/web announcement, poll or
            data push. This field supports appInfo markers.
          optional: true
        - id: parameters.actionButtonText
          type:
            - string
          description: |-
            Text of the action button for
            text/web announcements and polls (answer button).
          optional: true
        - id: parameters.exitButtonText
          type:
            - string
          description: |-
            Text of the exit button for
            text/web announcements and polls.
          optional: true
        - id: parameters.actionUrl
          type:
            - string
          description: |-
            URL to launch when the announcement
            is actioned.
          optional: true
        - id: parameters.payload
          type:
            - object
          description: Native push payload.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function create(resourceGroupName, appCollection, appName, kind,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#getWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#getWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      getWithHttpOperationResponse(kind, id, resourceGroupName, appCollection,
      appName, options)
    summary: >-
      The Get campaign operation retrieves information about a previously
      created

      campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.getWithHttpOperationResponse(kind,
      id, resourceGroupName, appCollection, appName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(kind, id, resourceGroupName,
        appCollection, appName, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#get'
    id: 'azure-arm-mobileengagement.Campaigns#get'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      get(kind, id, resourceGroupName, appCollection, appName, options,
      optionalCallback)
    summary: >-
      The Get campaign operation retrieves information about a previously
      created

      campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.get(kind, id, resourceGroupName,
      appCollection, appName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignResult} - The deserialized result object.'
        value: '{CampaignResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(kind, id, resourceGroupName, appCollection, appName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#updateWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#updateWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      updateWithHttpOperationResponse(kind, id, parameters, resourceGroupName,
      appCollection, appName, options)
    summary: |-
      Update an existing push campaign (announcement, poll, data push or native
      push).
    fullName: >-
      azure-arm-mobileengagement.Campaigns.updateWithHttpOperationResponse(kind,
      id, parameters, resourceGroupName, appCollection, appName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Update Campaign
            operation.
        - id: parameters.name
          type:
            - string
          description: Unique name of the campaign.
          optional: true
        - id: parameters.audience
          type:
            - object
          description: >-
            Specify which users will be targeted

            by this campaign. By default, all users will be targeted. If you set

            `pushMode` property to `manual`, the only thing you can specify in
            the

            audience is the push quota filter. An audience is a boolean
            expression made

            of criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Additionally, a set of filters can be added to an audience. 65535
            bytes max

            as per JSON encoding.
          optional: true
        - id: parameters.audience.expression
          type:
            - string
          description: >-
            Boolean expression made of

            criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Criterion names in the audience expression must start with a capital
            letter

            and can only contain alphanumeric (A-Z,a-z,0-9) and underscore (_)

            characters.
          optional: true
        - id: parameters.audience.criteria
          type:
            - object
          description: Criteria by name.
          optional: true
        - id: parameters.audience.filters
          type:
            - array
          description: |-
            Global filters applied to all
            devices.
          optional: true
        - id: parameters.category
          type:
            - string
          description: |-
            Category of the campaign. Categories
            can be used on the application side to customize campaigns.
          optional: true
        - id: parameters.pushMode
          type:
            - string
          description: >-
            Announcements/polls only. Defines how

            the campaign is pushed. Valid values are: * `real-time`: Never
            ending

            campaign, the campaign will be delivered  to your existing users and
            also to

            your new users. * `one-shot`: In this mode, the campaign will be
            delivered

            only to your existing users (campaign will stop after that). *
            `manual`: In

            this mode, the campaign will not be pushed automatically to devices.
            You

            will have to use the Push campaign command to push the campaign to
            your

            end-users. Campaigns can be pushed multiple times to the same
            device.

            . Possible values include: 'real-time', 'one-shot', 'manual'
          optional: true
        - id: parameters.type
          type:
            - string
          description: >-
            Applicable only to announcements and data

            pushes. Type of announcement. Valid values are: * `text/plain`:
            Text-only

            announcement: `body` property should only contain plain text. *
            `text/html`:

            HTML announcement: `body` attribute can contain HTML code. *
            `only_notif`:

            Notification-only announcement. With this kind of announcements, the
            `body`,

            `title`, `actionButtonText` and `exitButtonText` are ignored. Type
            of data

            push. Valid values are: * `text/plain`: Text only data push: `body`
            property

            must be plain text. * `text/base64`: Base 64 data push: `body`
            property must

            be encoded in base 64.

            . Possible values include: 'text/plain', 'text/html', 'only_notif',

            'text/base64'
          optional: true
        - id: parameters.deliveryTime
          type:
            - string
          description: >-
            Announcements/polls only. Defines

            when the campaign should be delivered. Valid values are: * `any`:
            Campaign

            will be delivered as soon as possible. * `background`: iOS only.
            Campaign

            will be only delivered when the application is in background (out of
            app). *

            `session`: Campaign will be delivered when the application is
            running.

            . Possible values include: 'any', 'background', 'session'
          optional: true
        - id: parameters.deliveryActivities
          type:
            - array
          description: >-
            Announcements/polls only.

            Array containing the list of activities in which the campaign can be

            delivered. deliveryTime must be set to session. If the platform is
            iOS, this

            option can also be set if deliveryTime is set to any. In that case,
            if the

            campaign is received when the application is launched, it will be
            delivered

            only in the specified list of activities.
          optional: true
        - id: parameters.startTime
          type:
            - string
          description: >-
            The date at which the campaign should

            be started. The date shall conform to the following format:

            `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual,
            this

            attribute will be ignored. * If you set pushMode property to
            one-shot, then

            the timezone attribute must be specified. Example: `2011-11-21
            15:23Z`
          optional: true
        - id: parameters.endTime
          type:
            - string
          description: |-
            The date at which the campaign should
            be finished. The date shall conform to the following format:
            `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
          optional: true
        - id: parameters.timezone
          type:
            - string
          description: >-
            The id of the time zone to use for the

            startTime and endTime dates. If not provided, the two date
            attributes will

            be expressed using the device timezone. Example: America/Los_Angeles
          optional: true
        - id: parameters.notificationType
          type:
            - string
          description: >-
            Android only. Defines how the

            notification should be displayed. Valid values are: * `system`:
            Display the

            notification using a standard system notification. * `popup`:
            Display the

            notification using a in-app banner notification.

            . Possible values include: 'system', 'popup'
          optional: true
        - id: parameters.notificationIcon
          type:
            - boolean
          description: |-
            A flag indicating whether or
            not you want to display the resource icon in notification content.
          optional: true
        - id: parameters.notificationCloseable
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want the notification to be closeable.
          optional: true
        - id: parameters.notificationVibrate
          type:
            - boolean
          description: |-
            Android only. A flag
            indicating whether or not you want the system notification to make a
            vibration. The notificationType property must be set to system.
          optional: true
        - id: parameters.notificationSound
          type:
            - boolean
          description: >-
            * `Android`: A flag

            indicating whether or not you want the system notification to make a
            sound.

            The `notificationType` property must be set to `system`. * `iOS`: A
            flag

            indicating whether or not you want the native Apple Push
            notification to

            make a sound. The `deliveryTime` property must be set to `any` or

            `background`. This will play the 'default' sound. If you want to
            play a

            custom sound, see the `notificationOptions` property. * `Windows`: A
            flag

            indicating whether or not you want the native Windows Notification
            Service

            to make a sound. The `deliveryTime` property must be set to `any`.
          optional: true
        - id: parameters.notificationBadge
          type:
            - boolean
          description: >-
            A flag indicating whether or

            not you want the native Apple Push notification to update the badge
            icon to

            the number of unread messages. The `deliveryTime` property must be
            set to

            `any` or `background`.
          optional: true
        - id: parameters.localization
          type:
            - object
          description: >-
            Push campaigns can be localized

            using an optional JSON object. The JSON key is a two-character
            language code

            as specified by the ISO 639-1 standard. The corresponding value is
            an object

            containing the localizable properties.
          optional: true
        - id: parameters.questions
          type:
            - array
          description: Poll questions.
          optional: true
        - id: parameters.notificationTitle
          type:
            - string
          description: |-
            Title of the notification.
            This field supports appInfo markers.
          optional: true
        - id: parameters.notificationMessage
          type:
            - string
          description: |-
            Message of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.notificationImage
          type:
            - azure-arm-mobileengagement.buffer
          description: >-
            Optional image encoded in

            base 64. Usually included in the right part of in app notifications
            (or as a

            banner if there is neither text nor content icon). For Android
            system

            notifications, the image is used as the large icon (displayed only
            on

            Android 3+).
          optional: true
        - id: parameters.notificationOptions
          type:
            - object
          description: |-
            Additional platform
            specific options.
          optional: true
        - id: parameters.notificationOptions.bigText
          type:
            - string
          description: >-
            Android 4.1+ only.

            Multi line message shown in expanded notifications on Android 4.1+
            devices.

            The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.notificationOptions.bigPicture
          type:
            - string
          description: |-
            URL of a remote
            image displayed in expanded notifications on
            Android 4.1+ devices with the following constraints:
            * The URL length is limited to 2000 characters.
            * The image size must be less than 4 MiB.
            * The following MIME types are supported:
            ** image/png
            ** image/jpeg
            ** image/gif
            ** image/webp
            ** image/bmp
            ** image/x-bmp
            ** image/x-ms-bmp
            * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
            * Incompatible with `bigText`, only one of the fields can be set.
            * The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.notificationOptions.sound
          type:
            - string
          description: >-
            iOS only. The name of

            a sound file in the application bundle. The sound in this file is
            played as

            an alert. If the sound file doesn’t exist or default is specified as
            the

            value, the default alert sound is played. The audio must be in one
            of the

            audio data formats that are compatible with system sounds. The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.notificationOptions.actionText
          type:
            - string
          description: >-
            The action text

            is the title of the right button of the alert or the value of the
            unlock

            slider, where the value replaces 'unlock' in 'slide to unlock'.
            'View'

            (localized to the preferred language) is used as the default value.
            The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.title
          type:
            - string
          description: |-
            Title of the announcement or poll. This
            field supports appInfo markers.
          optional: true
        - id: parameters.body
          type:
            - string
          description: |-
            Body of the text/web announcement, poll or
            data push. This field supports appInfo markers.
          optional: true
        - id: parameters.actionButtonText
          type:
            - string
          description: |-
            Text of the action button for
            text/web announcements and polls (answer button).
          optional: true
        - id: parameters.exitButtonText
          type:
            - string
          description: |-
            Text of the exit button for
            text/web announcements and polls.
          optional: true
        - id: parameters.actionUrl
          type:
            - string
          description: |-
            URL to launch when the announcement
            is actioned.
          optional: true
        - id: parameters.payload
          type:
            - object
          description: Native push payload.
          optional: true
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(kind, id, parameters,
        resourceGroupName, appCollection, appName, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#update'
    id: 'azure-arm-mobileengagement.Campaigns#update'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      update(kind, id, parameters, resourceGroupName, appCollection, appName,
      options, optionalCallback)
    summary: |-
      Update an existing push campaign (announcement, poll, data push or native
      push).
    fullName: >-
      azure-arm-mobileengagement.Campaigns.update(kind, id, parameters,
      resourceGroupName, appCollection, appName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignStateResult} - The deserialized result object.'
        value: '{CampaignStateResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Update Campaign
            operation.
        - id: parameters.name
          type:
            - string
          description: Unique name of the campaign.
          optional: true
        - id: parameters.audience
          type:
            - object
          description: >-
            Specify which users will be targeted

            by this campaign. By default, all users will be targeted. If you set

            `pushMode` property to `manual`, the only thing you can specify in
            the

            audience is the push quota filter. An audience is a boolean
            expression made

            of criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Additionally, a set of filters can be added to an audience. 65535
            bytes max

            as per JSON encoding.
          optional: true
        - id: parameters.audience.expression
          type:
            - string
          description: >-
            Boolean expression made of

            criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Criterion names in the audience expression must start with a capital
            letter

            and can only contain alphanumeric (A-Z,a-z,0-9) and underscore (_)

            characters.
          optional: true
        - id: parameters.audience.criteria
          type:
            - object
          description: Criteria by name.
          optional: true
        - id: parameters.audience.filters
          type:
            - array
          description: |-
            Global filters applied to all
            devices.
          optional: true
        - id: parameters.category
          type:
            - string
          description: |-
            Category of the campaign. Categories
            can be used on the application side to customize campaigns.
          optional: true
        - id: parameters.pushMode
          type:
            - string
          description: >-
            Announcements/polls only. Defines how

            the campaign is pushed. Valid values are: * `real-time`: Never
            ending

            campaign, the campaign will be delivered  to your existing users and
            also to

            your new users. * `one-shot`: In this mode, the campaign will be
            delivered

            only to your existing users (campaign will stop after that). *
            `manual`: In

            this mode, the campaign will not be pushed automatically to devices.
            You

            will have to use the Push campaign command to push the campaign to
            your

            end-users. Campaigns can be pushed multiple times to the same
            device.

            . Possible values include: 'real-time', 'one-shot', 'manual'
          optional: true
        - id: parameters.type
          type:
            - string
          description: >-
            Applicable only to announcements and data

            pushes. Type of announcement. Valid values are: * `text/plain`:
            Text-only

            announcement: `body` property should only contain plain text. *
            `text/html`:

            HTML announcement: `body` attribute can contain HTML code. *
            `only_notif`:

            Notification-only announcement. With this kind of announcements, the
            `body`,

            `title`, `actionButtonText` and `exitButtonText` are ignored. Type
            of data

            push. Valid values are: * `text/plain`: Text only data push: `body`
            property

            must be plain text. * `text/base64`: Base 64 data push: `body`
            property must

            be encoded in base 64.

            . Possible values include: 'text/plain', 'text/html', 'only_notif',

            'text/base64'
          optional: true
        - id: parameters.deliveryTime
          type:
            - string
          description: >-
            Announcements/polls only. Defines

            when the campaign should be delivered. Valid values are: * `any`:
            Campaign

            will be delivered as soon as possible. * `background`: iOS only.
            Campaign

            will be only delivered when the application is in background (out of
            app). *

            `session`: Campaign will be delivered when the application is
            running.

            . Possible values include: 'any', 'background', 'session'
          optional: true
        - id: parameters.deliveryActivities
          type:
            - array
          description: >-
            Announcements/polls only.

            Array containing the list of activities in which the campaign can be

            delivered. deliveryTime must be set to session. If the platform is
            iOS, this

            option can also be set if deliveryTime is set to any. In that case,
            if the

            campaign is received when the application is launched, it will be
            delivered

            only in the specified list of activities.
          optional: true
        - id: parameters.startTime
          type:
            - string
          description: >-
            The date at which the campaign should

            be started. The date shall conform to the following format:

            `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual,
            this

            attribute will be ignored. * If you set pushMode property to
            one-shot, then

            the timezone attribute must be specified. Example: `2011-11-21
            15:23Z`
          optional: true
        - id: parameters.endTime
          type:
            - string
          description: |-
            The date at which the campaign should
            be finished. The date shall conform to the following format:
            `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
          optional: true
        - id: parameters.timezone
          type:
            - string
          description: >-
            The id of the time zone to use for the

            startTime and endTime dates. If not provided, the two date
            attributes will

            be expressed using the device timezone. Example: America/Los_Angeles
          optional: true
        - id: parameters.notificationType
          type:
            - string
          description: >-
            Android only. Defines how the

            notification should be displayed. Valid values are: * `system`:
            Display the

            notification using a standard system notification. * `popup`:
            Display the

            notification using a in-app banner notification.

            . Possible values include: 'system', 'popup'
          optional: true
        - id: parameters.notificationIcon
          type:
            - boolean
          description: |-
            A flag indicating whether or
            not you want to display the resource icon in notification content.
          optional: true
        - id: parameters.notificationCloseable
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want the notification to be closeable.
          optional: true
        - id: parameters.notificationVibrate
          type:
            - boolean
          description: |-
            Android only. A flag
            indicating whether or not you want the system notification to make a
            vibration. The notificationType property must be set to system.
          optional: true
        - id: parameters.notificationSound
          type:
            - boolean
          description: >-
            * `Android`: A flag

            indicating whether or not you want the system notification to make a
            sound.

            The `notificationType` property must be set to `system`. * `iOS`: A
            flag

            indicating whether or not you want the native Apple Push
            notification to

            make a sound. The `deliveryTime` property must be set to `any` or

            `background`. This will play the 'default' sound. If you want to
            play a

            custom sound, see the `notificationOptions` property. * `Windows`: A
            flag

            indicating whether or not you want the native Windows Notification
            Service

            to make a sound. The `deliveryTime` property must be set to `any`.
          optional: true
        - id: parameters.notificationBadge
          type:
            - boolean
          description: >-
            A flag indicating whether or

            not you want the native Apple Push notification to update the badge
            icon to

            the number of unread messages. The `deliveryTime` property must be
            set to

            `any` or `background`.
          optional: true
        - id: parameters.localization
          type:
            - object
          description: >-
            Push campaigns can be localized

            using an optional JSON object. The JSON key is a two-character
            language code

            as specified by the ISO 639-1 standard. The corresponding value is
            an object

            containing the localizable properties.
          optional: true
        - id: parameters.questions
          type:
            - array
          description: Poll questions.
          optional: true
        - id: parameters.notificationTitle
          type:
            - string
          description: |-
            Title of the notification.
            This field supports appInfo markers.
          optional: true
        - id: parameters.notificationMessage
          type:
            - string
          description: |-
            Message of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.notificationImage
          type:
            - azure-arm-mobileengagement.buffer
          description: >-
            Optional image encoded in

            base 64. Usually included in the right part of in app notifications
            (or as a

            banner if there is neither text nor content icon). For Android
            system

            notifications, the image is used as the large icon (displayed only
            on

            Android 3+).
          optional: true
        - id: parameters.notificationOptions
          type:
            - object
          description: |-
            Additional platform
            specific options.
          optional: true
        - id: parameters.notificationOptions.bigText
          type:
            - string
          description: >-
            Android 4.1+ only.

            Multi line message shown in expanded notifications on Android 4.1+
            devices.

            The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.notificationOptions.bigPicture
          type:
            - string
          description: |-
            URL of a remote
            image displayed in expanded notifications on
            Android 4.1+ devices with the following constraints:
            * The URL length is limited to 2000 characters.
            * The image size must be less than 4 MiB.
            * The following MIME types are supported:
            ** image/png
            ** image/jpeg
            ** image/gif
            ** image/webp
            ** image/bmp
            ** image/x-bmp
            ** image/x-ms-bmp
            * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
            * Incompatible with `bigText`, only one of the fields can be set.
            * The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.notificationOptions.sound
          type:
            - string
          description: >-
            iOS only. The name of

            a sound file in the application bundle. The sound in this file is
            played as

            an alert. If the sound file doesn’t exist or default is specified as
            the

            value, the default alert sound is played. The audio must be in one
            of the

            audio data formats that are compatible with system sounds. The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.notificationOptions.actionText
          type:
            - string
          description: >-
            The action text

            is the title of the right button of the alert or the value of the
            unlock

            slider, where the value replaces 'unlock' in 'slide to unlock'.
            'View'

            (localized to the preferred language) is used as the default value.
            The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.title
          type:
            - string
          description: |-
            Title of the announcement or poll. This
            field supports appInfo markers.
          optional: true
        - id: parameters.body
          type:
            - string
          description: |-
            Body of the text/web announcement, poll or
            data push. This field supports appInfo markers.
          optional: true
        - id: parameters.actionButtonText
          type:
            - string
          description: |-
            Text of the action button for
            text/web announcements and polls (answer button).
          optional: true
        - id: parameters.exitButtonText
          type:
            - string
          description: |-
            Text of the exit button for
            text/web announcements and polls.
          optional: true
        - id: parameters.actionUrl
          type:
            - string
          description: |-
            URL to launch when the announcement
            is actioned.
          optional: true
        - id: parameters.payload
          type:
            - object
          description: Native push payload.
          optional: true
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(kind, id, parameters, resourceGroupName, appCollection,
        appName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      deleteMethodWithHttpOperationResponse(kind, id, resourceGroupName,
      appCollection, appName, options)
    summary: Delete a campaign previously created by a call to Create campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.deleteMethodWithHttpOperationResponse(kind,
      id, resourceGroupName, appCollection, appName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(kind, id,
        resourceGroupName, appCollection, appName, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#deleteMethod'
    id: 'azure-arm-mobileengagement.Campaigns#deleteMethod'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      deleteMethod(kind, id, resourceGroupName, appCollection, appName, options,
      optionalCallback)
    summary: Delete a campaign previously created by a call to Create campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.deleteMethod(kind, id,
      resourceGroupName, appCollection, appName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(kind, id, resourceGroupName, appCollection,
        appName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#getByNameWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#getByNameWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      getByNameWithHttpOperationResponse(resourceGroupName, appCollection,
      appName, kind, name, options)
    summary: >-
      The Get campaign operation retrieves information about a previously
      created

      campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.getByNameWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, name, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: name
          type:
            - string
          description: Campaign name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getByNameWithHttpOperationResponse(resourceGroupName,
        appCollection, appName, kind, name, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#getByName'
    id: 'azure-arm-mobileengagement.Campaigns#getByName'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      getByName(resourceGroupName, appCollection, appName, kind, name, options,
      optionalCallback)
    summary: >-
      The Get campaign operation retrieves information about a previously
      created

      campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.getByName(resourceGroupName,
      appCollection, appName, kind, name, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignResult} - The deserialized result object.'
        value: '{CampaignResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: name
          type:
            - string
          description: Campaign name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getByName(resourceGroupName, appCollection, appName, kind,
        name, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#testSavedWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#testSavedWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      testSavedWithHttpOperationResponse(resourceGroupName, appCollection,
      appName, kind, id, parameters, options)
    summary: |-
      Test an existing campaign (created with Create campaign) on a set of
      devices.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.testSavedWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, id, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Test Campaign
            operation.
        - id: parameters.deviceId
          type:
            - string
          description: |-
            Device identifier (as returned by the
            SDK).
        - id: parameters.lang
          type:
            - string
          description: |-
            The language to test expressed using ISO
            639-1 code. The default language of the campaign will be used if the
            parameter is not provided.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function testSavedWithHttpOperationResponse(resourceGroupName,
        appCollection, appName, kind, id, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#testSaved'
    id: 'azure-arm-mobileengagement.Campaigns#testSaved'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      testSaved(resourceGroupName, appCollection, appName, kind, id, parameters,
      options, optionalCallback)
    summary: |-
      Test an existing campaign (created with Create campaign) on a set of
      devices.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.testSaved(resourceGroupName,
      appCollection, appName, kind, id, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignStateResult} - The deserialized result object.'
        value: '{CampaignStateResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Test Campaign
            operation.
        - id: parameters.deviceId
          type:
            - string
          description: |-
            Device identifier (as returned by the
            SDK).
        - id: parameters.lang
          type:
            - string
          description: |-
            The language to test expressed using ISO
            639-1 code. The default language of the campaign will be used if the
            parameter is not provided.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function testSaved(resourceGroupName, appCollection, appName, kind, id,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#testNewWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#testNewWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      testNewWithHttpOperationResponse(resourceGroupName, appCollection,
      appName, kind, parameters, options)
    summary: Test a new campaign on a set of devices.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.testNewWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignState>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignState>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Test Campaign
            operation.
        - id: parameters.data
          type:
            - object
          description: ''
        - id: parameters.data.name
          type:
            - string
          description: Unique name of the campaign.
          optional: true
        - id: parameters.data.audience
          type:
            - object
          description: >-
            Specify which users will be

            targeted by this campaign. By default, all users will be targeted.
            If you

            set `pushMode` property to `manual`, the only thing you can specify
            in the

            audience is the push quota filter. An audience is a boolean
            expression made

            of criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Additionally, a set of filters can be added to an audience. 65535
            bytes max

            as per JSON encoding.
          optional: true
        - id: parameters.data.audience.expression
          type:
            - string
          description: >-
            Boolean expression

            made of criteria (variables) operators (`not`, `and` or `or`) and

            parenthesis. Criterion names in the audience expression must start
            with a

            capital letter and can only contain alphanumeric (A-Z,a-z,0-9) and

            underscore (_) characters.
          optional: true
        - id: parameters.data.audience.criteria
          type:
            - object
          description: Criteria by name.
          optional: true
        - id: parameters.data.audience.filters
          type:
            - array
          description: |-
            Global filters applied to
            all devices.
          optional: true
        - id: parameters.data.category
          type:
            - string
          description: >-
            Category of the campaign.

            Categories can be used on the application side to customize
            campaigns.
          optional: true
        - id: parameters.data.pushMode
          type:
            - string
          description: >-
            Announcements/polls only. Defines

            how the campaign is pushed. Valid values are: * `real-time`: Never
            ending

            campaign, the campaign will be delivered  to your existing users and
            also to

            your new users. * `one-shot`: In this mode, the campaign will be
            delivered

            only to your existing users (campaign will stop after that). *
            `manual`: In

            this mode, the campaign will not be pushed automatically to devices.
            You

            will have to use the Push campaign command to push the campaign to
            your

            end-users. Campaigns can be pushed multiple times to the same
            device.

            . Possible values include: 'real-time', 'one-shot', 'manual'
          optional: true
        - id: parameters.data.type
          type:
            - string
          description: >-
            Applicable only to announcements and

            data pushes. Type of announcement. Valid values are: * `text/plain`:

            Text-only announcement: `body` property should only contain plain
            text. *

            `text/html`: HTML announcement: `body` attribute can contain HTML
            code. *

            `only_notif`: Notification-only announcement. With this kind of

            announcements, the `body`, `title`, `actionButtonText` and
            `exitButtonText`

            are ignored. Type of data push. Valid values are: * `text/plain`:
            Text only

            data push: `body` property must be plain text. * `text/base64`: Base
            64 data

            push: `body` property must be encoded in base 64.

            . Possible values include: 'text/plain', 'text/html', 'only_notif',

            'text/base64'
          optional: true
        - id: parameters.data.deliveryTime
          type:
            - string
          description: >-
            Announcements/polls only.

            Defines when the campaign should be delivered. Valid values are: *
            `any`:

            Campaign will be delivered as soon as possible. * `background`: iOS
            only.

            Campaign will be only delivered when the application is in
            background (out

            of app). * `session`: Campaign will be delivered when the
            application is

            running.

            . Possible values include: 'any', 'background', 'session'
          optional: true
        - id: parameters.data.deliveryActivities
          type:
            - array
          description: >-
            Announcements/polls

            only. Array containing the list of activities in which the campaign
            can be

            delivered. deliveryTime must be set to session. If the platform is
            iOS, this

            option can also be set if deliveryTime is set to any. In that case,
            if the

            campaign is received when the application is launched, it will be
            delivered

            only in the specified list of activities.
          optional: true
        - id: parameters.data.startTime
          type:
            - string
          description: >-
            The date at which the campaign

            should be started. The date shall conform to the following format:

            `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual,
            this

            attribute will be ignored. * If you set pushMode property to
            one-shot, then

            the timezone attribute must be specified. Example: `2011-11-21
            15:23Z`
          optional: true
        - id: parameters.data.endTime
          type:
            - string
          description: |-
            The date at which the campaign
            should be finished. The date shall conform to the following format:
            `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
          optional: true
        - id: parameters.data.timezone
          type:
            - string
          description: |-
            The id of the time zone to use
            for the startTime and endTime dates. If not provided, the two date
            attributes will be expressed using the device timezone. Example:
            America/Los_Angeles
          optional: true
        - id: parameters.data.notificationType
          type:
            - string
          description: >-
            Android only. Defines how

            the notification should be displayed. Valid values are: * `system`:
            Display

            the notification using a standard system notification. * `popup`:
            Display

            the notification using a in-app banner notification.

            . Possible values include: 'system', 'popup'
          optional: true
        - id: parameters.data.notificationIcon
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want to display the resource icon in notification
            content.
          optional: true
        - id: parameters.data.notificationCloseable
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want the notification to be closeable.
          optional: true
        - id: parameters.data.notificationVibrate
          type:
            - boolean
          description: |-
            Android only. A flag
            indicating whether or not you want the system notification to make a
            vibration. The notificationType property must be set to system.
          optional: true
        - id: parameters.data.notificationSound
          type:
            - boolean
          description: >-
            * `Android`: A flag

            indicating whether or not you want the system notification to make a
            sound.

            The `notificationType` property must be set to `system`. * `iOS`: A
            flag

            indicating whether or not you want the native Apple Push
            notification to

            make a sound. The `deliveryTime` property must be set to `any` or

            `background`. This will play the 'default' sound. If you want to
            play a

            custom sound, see the `notificationOptions` property. * `Windows`: A
            flag

            indicating whether or not you want the native Windows Notification
            Service

            to make a sound. The `deliveryTime` property must be set to `any`.
          optional: true
        - id: parameters.data.notificationBadge
          type:
            - boolean
          description: >-
            A flag indicating

            whether or not you want the native Apple Push notification to update
            the

            badge icon to the number of unread messages. The `deliveryTime`
            property

            must be set to `any` or `background`.
          optional: true
        - id: parameters.data.localization
          type:
            - object
          description: >-
            Push campaigns can be

            localized using an optional JSON object. The JSON key is a
            two-character

            language code as specified by the ISO 639-1 standard. The
            corresponding

            value is an object containing the localizable properties.
          optional: true
        - id: parameters.data.questions
          type:
            - array
          description: Poll questions.
          optional: true
        - id: parameters.data.notificationTitle
          type:
            - string
          description: |-
            Title of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.data.notificationMessage
          type:
            - string
          description: |-
            Message of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.data.notificationImage
          type:
            - azure-arm-mobileengagement.buffer
          description: >-
            Optional image encoded

            in base 64. Usually included in the right part of in app
            notifications (or

            as a banner if there is neither text nor content icon). For Android
            system

            notifications, the image is used as the large icon (displayed only
            on

            Android 3+).
          optional: true
        - id: parameters.data.notificationOptions
          type:
            - object
          description: |-
            Additional platform
            specific options.
          optional: true
        - id: parameters.data.notificationOptions.bigText
          type:
            - string
          description: >-
            Android 4.1+

            only. Multi line message shown in expanded notifications on Android
            4.1+

            devices. The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.data.notificationOptions.bigPicture
          type:
            - string
          description: |-
            URL of a
            remote image displayed in expanded notifications on
            Android 4.1+ devices with the following constraints:
            * The URL length is limited to 2000 characters.
            * The image size must be less than 4 MiB.
            * The following MIME types are supported:
            ** image/png
            ** image/jpeg
            ** image/gif
            ** image/webp
            ** image/bmp
            ** image/x-bmp
            ** image/x-ms-bmp
            * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
            * Incompatible with `bigText`, only one of the fields can be set.
            * The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.data.notificationOptions.sound
          type:
            - string
          description: >-
            iOS only. The

            name of a sound file in the application bundle. The sound in this
            file is

            played as an alert. If the sound file doesn’t exist or default is
            specified

            as the value, the default alert sound is played. The audio must be
            in one of

            the audio data formats that are compatible with system sounds. The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.data.notificationOptions.actionText
          type:
            - string
          description: >-
            The action

            text is the title of the right button of the alert or the value of
            the

            unlock slider, where the value replaces 'unlock' in 'slide to
            unlock'.

            'View' (localized to the preferred language) is used as the default
            value.

            The `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.data.title
          type:
            - string
          description: |-
            Title of the announcement or poll.
            This field supports appInfo markers.
          optional: true
        - id: parameters.data.body
          type:
            - string
          description: |-
            Body of the text/web announcement,
            poll or data push. This field supports appInfo markers.
          optional: true
        - id: parameters.data.actionButtonText
          type:
            - string
          description: |-
            Text of the action button
            for text/web announcements and polls (answer button).
          optional: true
        - id: parameters.data.exitButtonText
          type:
            - string
          description: |-
            Text of the exit button for
            text/web announcements and polls.
          optional: true
        - id: parameters.data.actionUrl
          type:
            - string
          description: |-
            URL to launch when the
            announcement is actioned.
          optional: true
        - id: parameters.data.payload
          type:
            - object
          description: Native push payload.
          optional: true
        - id: parameters.deviceId
          type:
            - string
          description: |-
            Device identifier (as returned by the
            SDK).
        - id: parameters.lang
          type:
            - string
          description: |-
            The language to test expressed using ISO
            639-1 code. The default language of the campaign will be used if the
            parameter is not provided.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function testNewWithHttpOperationResponse(resourceGroupName,
        appCollection, appName, kind, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#testNew'
    id: 'azure-arm-mobileengagement.Campaigns#testNew'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      testNew(resourceGroupName, appCollection, appName, kind, parameters,
      options, optionalCallback)
    summary: Test a new campaign on a set of devices.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.testNew(resourceGroupName,
      appCollection, appName, kind, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignState} - The deserialized result object.'
        value: '{CampaignState} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignState} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignState} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Test Campaign
            operation.
        - id: parameters.data
          type:
            - object
          description: ''
        - id: parameters.data.name
          type:
            - string
          description: Unique name of the campaign.
          optional: true
        - id: parameters.data.audience
          type:
            - object
          description: >-
            Specify which users will be

            targeted by this campaign. By default, all users will be targeted.
            If you

            set `pushMode` property to `manual`, the only thing you can specify
            in the

            audience is the push quota filter. An audience is a boolean
            expression made

            of criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Additionally, a set of filters can be added to an audience. 65535
            bytes max

            as per JSON encoding.
          optional: true
        - id: parameters.data.audience.expression
          type:
            - string
          description: >-
            Boolean expression

            made of criteria (variables) operators (`not`, `and` or `or`) and

            parenthesis. Criterion names in the audience expression must start
            with a

            capital letter and can only contain alphanumeric (A-Z,a-z,0-9) and

            underscore (_) characters.
          optional: true
        - id: parameters.data.audience.criteria
          type:
            - object
          description: Criteria by name.
          optional: true
        - id: parameters.data.audience.filters
          type:
            - array
          description: |-
            Global filters applied to
            all devices.
          optional: true
        - id: parameters.data.category
          type:
            - string
          description: >-
            Category of the campaign.

            Categories can be used on the application side to customize
            campaigns.
          optional: true
        - id: parameters.data.pushMode
          type:
            - string
          description: >-
            Announcements/polls only. Defines

            how the campaign is pushed. Valid values are: * `real-time`: Never
            ending

            campaign, the campaign will be delivered  to your existing users and
            also to

            your new users. * `one-shot`: In this mode, the campaign will be
            delivered

            only to your existing users (campaign will stop after that). *
            `manual`: In

            this mode, the campaign will not be pushed automatically to devices.
            You

            will have to use the Push campaign command to push the campaign to
            your

            end-users. Campaigns can be pushed multiple times to the same
            device.

            . Possible values include: 'real-time', 'one-shot', 'manual'
          optional: true
        - id: parameters.data.type
          type:
            - string
          description: >-
            Applicable only to announcements and

            data pushes. Type of announcement. Valid values are: * `text/plain`:

            Text-only announcement: `body` property should only contain plain
            text. *

            `text/html`: HTML announcement: `body` attribute can contain HTML
            code. *

            `only_notif`: Notification-only announcement. With this kind of

            announcements, the `body`, `title`, `actionButtonText` and
            `exitButtonText`

            are ignored. Type of data push. Valid values are: * `text/plain`:
            Text only

            data push: `body` property must be plain text. * `text/base64`: Base
            64 data

            push: `body` property must be encoded in base 64.

            . Possible values include: 'text/plain', 'text/html', 'only_notif',

            'text/base64'
          optional: true
        - id: parameters.data.deliveryTime
          type:
            - string
          description: >-
            Announcements/polls only.

            Defines when the campaign should be delivered. Valid values are: *
            `any`:

            Campaign will be delivered as soon as possible. * `background`: iOS
            only.

            Campaign will be only delivered when the application is in
            background (out

            of app). * `session`: Campaign will be delivered when the
            application is

            running.

            . Possible values include: 'any', 'background', 'session'
          optional: true
        - id: parameters.data.deliveryActivities
          type:
            - array
          description: >-
            Announcements/polls

            only. Array containing the list of activities in which the campaign
            can be

            delivered. deliveryTime must be set to session. If the platform is
            iOS, this

            option can also be set if deliveryTime is set to any. In that case,
            if the

            campaign is received when the application is launched, it will be
            delivered

            only in the specified list of activities.
          optional: true
        - id: parameters.data.startTime
          type:
            - string
          description: >-
            The date at which the campaign

            should be started. The date shall conform to the following format:

            `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual,
            this

            attribute will be ignored. * If you set pushMode property to
            one-shot, then

            the timezone attribute must be specified. Example: `2011-11-21
            15:23Z`
          optional: true
        - id: parameters.data.endTime
          type:
            - string
          description: |-
            The date at which the campaign
            should be finished. The date shall conform to the following format:
            `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
          optional: true
        - id: parameters.data.timezone
          type:
            - string
          description: |-
            The id of the time zone to use
            for the startTime and endTime dates. If not provided, the two date
            attributes will be expressed using the device timezone. Example:
            America/Los_Angeles
          optional: true
        - id: parameters.data.notificationType
          type:
            - string
          description: >-
            Android only. Defines how

            the notification should be displayed. Valid values are: * `system`:
            Display

            the notification using a standard system notification. * `popup`:
            Display

            the notification using a in-app banner notification.

            . Possible values include: 'system', 'popup'
          optional: true
        - id: parameters.data.notificationIcon
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want to display the resource icon in notification
            content.
          optional: true
        - id: parameters.data.notificationCloseable
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want the notification to be closeable.
          optional: true
        - id: parameters.data.notificationVibrate
          type:
            - boolean
          description: |-
            Android only. A flag
            indicating whether or not you want the system notification to make a
            vibration. The notificationType property must be set to system.
          optional: true
        - id: parameters.data.notificationSound
          type:
            - boolean
          description: >-
            * `Android`: A flag

            indicating whether or not you want the system notification to make a
            sound.

            The `notificationType` property must be set to `system`. * `iOS`: A
            flag

            indicating whether or not you want the native Apple Push
            notification to

            make a sound. The `deliveryTime` property must be set to `any` or

            `background`. This will play the 'default' sound. If you want to
            play a

            custom sound, see the `notificationOptions` property. * `Windows`: A
            flag

            indicating whether or not you want the native Windows Notification
            Service

            to make a sound. The `deliveryTime` property must be set to `any`.
          optional: true
        - id: parameters.data.notificationBadge
          type:
            - boolean
          description: >-
            A flag indicating

            whether or not you want the native Apple Push notification to update
            the

            badge icon to the number of unread messages. The `deliveryTime`
            property

            must be set to `any` or `background`.
          optional: true
        - id: parameters.data.localization
          type:
            - object
          description: >-
            Push campaigns can be

            localized using an optional JSON object. The JSON key is a
            two-character

            language code as specified by the ISO 639-1 standard. The
            corresponding

            value is an object containing the localizable properties.
          optional: true
        - id: parameters.data.questions
          type:
            - array
          description: Poll questions.
          optional: true
        - id: parameters.data.notificationTitle
          type:
            - string
          description: |-
            Title of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.data.notificationMessage
          type:
            - string
          description: |-
            Message of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.data.notificationImage
          type:
            - azure-arm-mobileengagement.buffer
          description: >-
            Optional image encoded

            in base 64. Usually included in the right part of in app
            notifications (or

            as a banner if there is neither text nor content icon). For Android
            system

            notifications, the image is used as the large icon (displayed only
            on

            Android 3+).
          optional: true
        - id: parameters.data.notificationOptions
          type:
            - object
          description: |-
            Additional platform
            specific options.
          optional: true
        - id: parameters.data.notificationOptions.bigText
          type:
            - string
          description: >-
            Android 4.1+

            only. Multi line message shown in expanded notifications on Android
            4.1+

            devices. The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.data.notificationOptions.bigPicture
          type:
            - string
          description: |-
            URL of a
            remote image displayed in expanded notifications on
            Android 4.1+ devices with the following constraints:
            * The URL length is limited to 2000 characters.
            * The image size must be less than 4 MiB.
            * The following MIME types are supported:
            ** image/png
            ** image/jpeg
            ** image/gif
            ** image/webp
            ** image/bmp
            ** image/x-bmp
            ** image/x-ms-bmp
            * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
            * Incompatible with `bigText`, only one of the fields can be set.
            * The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.data.notificationOptions.sound
          type:
            - string
          description: >-
            iOS only. The

            name of a sound file in the application bundle. The sound in this
            file is

            played as an alert. If the sound file doesn’t exist or default is
            specified

            as the value, the default alert sound is played. The audio must be
            in one of

            the audio data formats that are compatible with system sounds. The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.data.notificationOptions.actionText
          type:
            - string
          description: >-
            The action

            text is the title of the right button of the alert or the value of
            the

            unlock slider, where the value replaces 'unlock' in 'slide to
            unlock'.

            'View' (localized to the preferred language) is used as the default
            value.

            The `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.data.title
          type:
            - string
          description: |-
            Title of the announcement or poll.
            This field supports appInfo markers.
          optional: true
        - id: parameters.data.body
          type:
            - string
          description: |-
            Body of the text/web announcement,
            poll or data push. This field supports appInfo markers.
          optional: true
        - id: parameters.data.actionButtonText
          type:
            - string
          description: |-
            Text of the action button
            for text/web announcements and polls (answer button).
          optional: true
        - id: parameters.data.exitButtonText
          type:
            - string
          description: |-
            Text of the exit button for
            text/web announcements and polls.
          optional: true
        - id: parameters.data.actionUrl
          type:
            - string
          description: |-
            URL to launch when the
            announcement is actioned.
          optional: true
        - id: parameters.data.payload
          type:
            - object
          description: Native push payload.
          optional: true
        - id: parameters.deviceId
          type:
            - string
          description: |-
            Device identifier (as returned by the
            SDK).
        - id: parameters.lang
          type:
            - string
          description: |-
            The language to test expressed using ISO
            639-1 code. The default language of the campaign will be used if the
            parameter is not provided.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function testNew(resourceGroupName, appCollection, appName, kind,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#activateWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#activateWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      activateWithHttpOperationResponse(resourceGroupName, appCollection,
      appName, kind, id, options)
    summary: Activate a campaign previously created by a call to Create campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.activateWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, id, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function activateWithHttpOperationResponse(resourceGroupName,
        appCollection, appName, kind, id, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#activate'
    id: 'azure-arm-mobileengagement.Campaigns#activate'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      activate(resourceGroupName, appCollection, appName, kind, id, options,
      optionalCallback)
    summary: Activate a campaign previously created by a call to Create campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.activate(resourceGroupName,
      appCollection, appName, kind, id, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignStateResult} - The deserialized result object.'
        value: '{CampaignStateResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function activate(resourceGroupName, appCollection, appName, kind, id,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#suspendWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#suspendWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      suspendWithHttpOperationResponse(resourceGroupName, appCollection,
      appName, kind, id, options)
    summary: >-
      Suspend a push campaign previously activated by a call to Activate
      campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.suspendWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, id, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function suspendWithHttpOperationResponse(resourceGroupName,
        appCollection, appName, kind, id, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#suspend'
    id: 'azure-arm-mobileengagement.Campaigns#suspend'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      suspend(resourceGroupName, appCollection, appName, kind, id, options,
      optionalCallback)
    summary: >-
      Suspend a push campaign previously activated by a call to Activate
      campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.suspend(resourceGroupName,
      appCollection, appName, kind, id, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignStateResult} - The deserialized result object.'
        value: '{CampaignStateResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function suspend(resourceGroupName, appCollection, appName, kind, id,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#pushWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#pushWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      pushWithHttpOperationResponse(resourceGroupName, appCollection, appName,
      kind, id, parameters, options)
    summary: >-
      Push a previously saved campaign (created with Create campaign) to a set
      of

      devices.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.pushWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, id, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignPushResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignPushResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Push Campaign
            operation.
        - id: parameters.deviceIds
          type:
            - array
          description: >-
            Device identifiers to push as a JSON

            array of strings. Note that if you want to push the same campaign
            several

            times to the same device, you need to make several API calls.
        - id: parameters.data
          type:
            - object
          description: >-
            Alternative campaign's content to use

            instead of the referenced campaign. All campaign's properties can be

            overridden except for the following: `name`, `manualPush`,
            `audience`,

            `startTime` and `timezone`. `endTime` can be overridden while
            keeping

            original `timezone` parameter. The effect is to change the client
            side

            expiration of the received campaign for the specific devices. If
            your

            campaign is a *poll*, the provided data should contain the same
            number of

            questions and choices that the one you created with the create
            command.

            Please note that all the push messages created using this parameter
            will

            expire after 4 weeks at maximum (`endTime` property of the campaign
            will be

            used if lower than 4 weeks in the future).
          optional: true
        - id: parameters.data.name
          type:
            - string
          description: Unique name of the campaign.
          optional: true
        - id: parameters.data.audience
          type:
            - object
          description: >-
            Specify which users will be

            targeted by this campaign. By default, all users will be targeted.
            If you

            set `pushMode` property to `manual`, the only thing you can specify
            in the

            audience is the push quota filter. An audience is a boolean
            expression made

            of criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Additionally, a set of filters can be added to an audience. 65535
            bytes max

            as per JSON encoding.
          optional: true
        - id: parameters.data.audience.expression
          type:
            - string
          description: >-
            Boolean expression

            made of criteria (variables) operators (`not`, `and` or `or`) and

            parenthesis. Criterion names in the audience expression must start
            with a

            capital letter and can only contain alphanumeric (A-Z,a-z,0-9) and

            underscore (_) characters.
          optional: true
        - id: parameters.data.audience.criteria
          type:
            - object
          description: Criteria by name.
          optional: true
        - id: parameters.data.audience.filters
          type:
            - array
          description: |-
            Global filters applied to
            all devices.
          optional: true
        - id: parameters.data.category
          type:
            - string
          description: >-
            Category of the campaign.

            Categories can be used on the application side to customize
            campaigns.
          optional: true
        - id: parameters.data.pushMode
          type:
            - string
          description: >-
            Announcements/polls only. Defines

            how the campaign is pushed. Valid values are: * `real-time`: Never
            ending

            campaign, the campaign will be delivered  to your existing users and
            also to

            your new users. * `one-shot`: In this mode, the campaign will be
            delivered

            only to your existing users (campaign will stop after that). *
            `manual`: In

            this mode, the campaign will not be pushed automatically to devices.
            You

            will have to use the Push campaign command to push the campaign to
            your

            end-users. Campaigns can be pushed multiple times to the same
            device.

            . Possible values include: 'real-time', 'one-shot', 'manual'
          optional: true
        - id: parameters.data.type
          type:
            - string
          description: >-
            Applicable only to announcements and

            data pushes. Type of announcement. Valid values are: * `text/plain`:

            Text-only announcement: `body` property should only contain plain
            text. *

            `text/html`: HTML announcement: `body` attribute can contain HTML
            code. *

            `only_notif`: Notification-only announcement. With this kind of

            announcements, the `body`, `title`, `actionButtonText` and
            `exitButtonText`

            are ignored. Type of data push. Valid values are: * `text/plain`:
            Text only

            data push: `body` property must be plain text. * `text/base64`: Base
            64 data

            push: `body` property must be encoded in base 64.

            . Possible values include: 'text/plain', 'text/html', 'only_notif',

            'text/base64'
          optional: true
        - id: parameters.data.deliveryTime
          type:
            - string
          description: >-
            Announcements/polls only.

            Defines when the campaign should be delivered. Valid values are: *
            `any`:

            Campaign will be delivered as soon as possible. * `background`: iOS
            only.

            Campaign will be only delivered when the application is in
            background (out

            of app). * `session`: Campaign will be delivered when the
            application is

            running.

            . Possible values include: 'any', 'background', 'session'
          optional: true
        - id: parameters.data.deliveryActivities
          type:
            - array
          description: >-
            Announcements/polls

            only. Array containing the list of activities in which the campaign
            can be

            delivered. deliveryTime must be set to session. If the platform is
            iOS, this

            option can also be set if deliveryTime is set to any. In that case,
            if the

            campaign is received when the application is launched, it will be
            delivered

            only in the specified list of activities.
          optional: true
        - id: parameters.data.startTime
          type:
            - string
          description: >-
            The date at which the campaign

            should be started. The date shall conform to the following format:

            `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual,
            this

            attribute will be ignored. * If you set pushMode property to
            one-shot, then

            the timezone attribute must be specified. Example: `2011-11-21
            15:23Z`
          optional: true
        - id: parameters.data.endTime
          type:
            - string
          description: |-
            The date at which the campaign
            should be finished. The date shall conform to the following format:
            `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
          optional: true
        - id: parameters.data.timezone
          type:
            - string
          description: |-
            The id of the time zone to use
            for the startTime and endTime dates. If not provided, the two date
            attributes will be expressed using the device timezone. Example:
            America/Los_Angeles
          optional: true
        - id: parameters.data.notificationType
          type:
            - string
          description: >-
            Android only. Defines how

            the notification should be displayed. Valid values are: * `system`:
            Display

            the notification using a standard system notification. * `popup`:
            Display

            the notification using a in-app banner notification.

            . Possible values include: 'system', 'popup'
          optional: true
        - id: parameters.data.notificationIcon
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want to display the resource icon in notification
            content.
          optional: true
        - id: parameters.data.notificationCloseable
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want the notification to be closeable.
          optional: true
        - id: parameters.data.notificationVibrate
          type:
            - boolean
          description: |-
            Android only. A flag
            indicating whether or not you want the system notification to make a
            vibration. The notificationType property must be set to system.
          optional: true
        - id: parameters.data.notificationSound
          type:
            - boolean
          description: >-
            * `Android`: A flag

            indicating whether or not you want the system notification to make a
            sound.

            The `notificationType` property must be set to `system`. * `iOS`: A
            flag

            indicating whether or not you want the native Apple Push
            notification to

            make a sound. The `deliveryTime` property must be set to `any` or

            `background`. This will play the 'default' sound. If you want to
            play a

            custom sound, see the `notificationOptions` property. * `Windows`: A
            flag

            indicating whether or not you want the native Windows Notification
            Service

            to make a sound. The `deliveryTime` property must be set to `any`.
          optional: true
        - id: parameters.data.notificationBadge
          type:
            - boolean
          description: >-
            A flag indicating

            whether or not you want the native Apple Push notification to update
            the

            badge icon to the number of unread messages. The `deliveryTime`
            property

            must be set to `any` or `background`.
          optional: true
        - id: parameters.data.localization
          type:
            - object
          description: >-
            Push campaigns can be

            localized using an optional JSON object. The JSON key is a
            two-character

            language code as specified by the ISO 639-1 standard. The
            corresponding

            value is an object containing the localizable properties.
          optional: true
        - id: parameters.data.questions
          type:
            - array
          description: Poll questions.
          optional: true
        - id: parameters.data.notificationTitle
          type:
            - string
          description: |-
            Title of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.data.notificationMessage
          type:
            - string
          description: |-
            Message of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.data.notificationImage
          type:
            - azure-arm-mobileengagement.buffer
          description: >-
            Optional image encoded

            in base 64. Usually included in the right part of in app
            notifications (or

            as a banner if there is neither text nor content icon). For Android
            system

            notifications, the image is used as the large icon (displayed only
            on

            Android 3+).
          optional: true
        - id: parameters.data.notificationOptions
          type:
            - object
          description: |-
            Additional platform
            specific options.
          optional: true
        - id: parameters.data.notificationOptions.bigText
          type:
            - string
          description: >-
            Android 4.1+

            only. Multi line message shown in expanded notifications on Android
            4.1+

            devices. The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.data.notificationOptions.bigPicture
          type:
            - string
          description: |-
            URL of a
            remote image displayed in expanded notifications on
            Android 4.1+ devices with the following constraints:
            * The URL length is limited to 2000 characters.
            * The image size must be less than 4 MiB.
            * The following MIME types are supported:
            ** image/png
            ** image/jpeg
            ** image/gif
            ** image/webp
            ** image/bmp
            ** image/x-bmp
            ** image/x-ms-bmp
            * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
            * Incompatible with `bigText`, only one of the fields can be set.
            * The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.data.notificationOptions.sound
          type:
            - string
          description: >-
            iOS only. The

            name of a sound file in the application bundle. The sound in this
            file is

            played as an alert. If the sound file doesn’t exist or default is
            specified

            as the value, the default alert sound is played. The audio must be
            in one of

            the audio data formats that are compatible with system sounds. The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.data.notificationOptions.actionText
          type:
            - string
          description: >-
            The action

            text is the title of the right button of the alert or the value of
            the

            unlock slider, where the value replaces 'unlock' in 'slide to
            unlock'.

            'View' (localized to the preferred language) is used as the default
            value.

            The `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.data.title
          type:
            - string
          description: |-
            Title of the announcement or poll.
            This field supports appInfo markers.
          optional: true
        - id: parameters.data.body
          type:
            - string
          description: |-
            Body of the text/web announcement,
            poll or data push. This field supports appInfo markers.
          optional: true
        - id: parameters.data.actionButtonText
          type:
            - string
          description: |-
            Text of the action button
            for text/web announcements and polls (answer button).
          optional: true
        - id: parameters.data.exitButtonText
          type:
            - string
          description: |-
            Text of the exit button for
            text/web announcements and polls.
          optional: true
        - id: parameters.data.actionUrl
          type:
            - string
          description: |-
            URL to launch when the
            announcement is actioned.
          optional: true
        - id: parameters.data.payload
          type:
            - object
          description: Native push payload.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function pushWithHttpOperationResponse(resourceGroupName, appCollection,
        appName, kind, id, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#push'
    id: 'azure-arm-mobileengagement.Campaigns#push'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      push(resourceGroupName, appCollection, appName, kind, id, parameters,
      options, optionalCallback)
    summary: >-
      Push a previously saved campaign (created with Create campaign) to a set
      of

      devices.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.push(resourceGroupName,
      appCollection, appName, kind, id, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignPushResult} - The deserialized result object.'
        value: '{CampaignPushResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignPushResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignPushResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Push Campaign
            operation.
        - id: parameters.deviceIds
          type:
            - array
          description: >-
            Device identifiers to push as a JSON

            array of strings. Note that if you want to push the same campaign
            several

            times to the same device, you need to make several API calls.
        - id: parameters.data
          type:
            - object
          description: >-
            Alternative campaign's content to use

            instead of the referenced campaign. All campaign's properties can be

            overridden except for the following: `name`, `manualPush`,
            `audience`,

            `startTime` and `timezone`. `endTime` can be overridden while
            keeping

            original `timezone` parameter. The effect is to change the client
            side

            expiration of the received campaign for the specific devices. If
            your

            campaign is a *poll*, the provided data should contain the same
            number of

            questions and choices that the one you created with the create
            command.

            Please note that all the push messages created using this parameter
            will

            expire after 4 weeks at maximum (`endTime` property of the campaign
            will be

            used if lower than 4 weeks in the future).
          optional: true
        - id: parameters.data.name
          type:
            - string
          description: Unique name of the campaign.
          optional: true
        - id: parameters.data.audience
          type:
            - object
          description: >-
            Specify which users will be

            targeted by this campaign. By default, all users will be targeted.
            If you

            set `pushMode` property to `manual`, the only thing you can specify
            in the

            audience is the push quota filter. An audience is a boolean
            expression made

            of criteria (variables) operators (`not`, `and` or `or`) and
            parenthesis.

            Additionally, a set of filters can be added to an audience. 65535
            bytes max

            as per JSON encoding.
          optional: true
        - id: parameters.data.audience.expression
          type:
            - string
          description: >-
            Boolean expression

            made of criteria (variables) operators (`not`, `and` or `or`) and

            parenthesis. Criterion names in the audience expression must start
            with a

            capital letter and can only contain alphanumeric (A-Z,a-z,0-9) and

            underscore (_) characters.
          optional: true
        - id: parameters.data.audience.criteria
          type:
            - object
          description: Criteria by name.
          optional: true
        - id: parameters.data.audience.filters
          type:
            - array
          description: |-
            Global filters applied to
            all devices.
          optional: true
        - id: parameters.data.category
          type:
            - string
          description: >-
            Category of the campaign.

            Categories can be used on the application side to customize
            campaigns.
          optional: true
        - id: parameters.data.pushMode
          type:
            - string
          description: >-
            Announcements/polls only. Defines

            how the campaign is pushed. Valid values are: * `real-time`: Never
            ending

            campaign, the campaign will be delivered  to your existing users and
            also to

            your new users. * `one-shot`: In this mode, the campaign will be
            delivered

            only to your existing users (campaign will stop after that). *
            `manual`: In

            this mode, the campaign will not be pushed automatically to devices.
            You

            will have to use the Push campaign command to push the campaign to
            your

            end-users. Campaigns can be pushed multiple times to the same
            device.

            . Possible values include: 'real-time', 'one-shot', 'manual'
          optional: true
        - id: parameters.data.type
          type:
            - string
          description: >-
            Applicable only to announcements and

            data pushes. Type of announcement. Valid values are: * `text/plain`:

            Text-only announcement: `body` property should only contain plain
            text. *

            `text/html`: HTML announcement: `body` attribute can contain HTML
            code. *

            `only_notif`: Notification-only announcement. With this kind of

            announcements, the `body`, `title`, `actionButtonText` and
            `exitButtonText`

            are ignored. Type of data push. Valid values are: * `text/plain`:
            Text only

            data push: `body` property must be plain text. * `text/base64`: Base
            64 data

            push: `body` property must be encoded in base 64.

            . Possible values include: 'text/plain', 'text/html', 'only_notif',

            'text/base64'
          optional: true
        - id: parameters.data.deliveryTime
          type:
            - string
          description: >-
            Announcements/polls only.

            Defines when the campaign should be delivered. Valid values are: *
            `any`:

            Campaign will be delivered as soon as possible. * `background`: iOS
            only.

            Campaign will be only delivered when the application is in
            background (out

            of app). * `session`: Campaign will be delivered when the
            application is

            running.

            . Possible values include: 'any', 'background', 'session'
          optional: true
        - id: parameters.data.deliveryActivities
          type:
            - array
          description: >-
            Announcements/polls

            only. Array containing the list of activities in which the campaign
            can be

            delivered. deliveryTime must be set to session. If the platform is
            iOS, this

            option can also be set if deliveryTime is set to any. In that case,
            if the

            campaign is received when the application is launched, it will be
            delivered

            only in the specified list of activities.
          optional: true
        - id: parameters.data.startTime
          type:
            - string
          description: >-
            The date at which the campaign

            should be started. The date shall conform to the following format:

            `yyyy-MM-ddTHH:mm:ssZ`. * If you set pushMode property to manual,
            this

            attribute will be ignored. * If you set pushMode property to
            one-shot, then

            the timezone attribute must be specified. Example: `2011-11-21
            15:23Z`
          optional: true
        - id: parameters.data.endTime
          type:
            - string
          description: |-
            The date at which the campaign
            should be finished. The date shall conform to the following format:
            `yyyy-MM-ddTHH:mm:ssZ`. Example: `2011-11-21 15:23Z`
          optional: true
        - id: parameters.data.timezone
          type:
            - string
          description: |-
            The id of the time zone to use
            for the startTime and endTime dates. If not provided, the two date
            attributes will be expressed using the device timezone. Example:
            America/Los_Angeles
          optional: true
        - id: parameters.data.notificationType
          type:
            - string
          description: >-
            Android only. Defines how

            the notification should be displayed. Valid values are: * `system`:
            Display

            the notification using a standard system notification. * `popup`:
            Display

            the notification using a in-app banner notification.

            . Possible values include: 'system', 'popup'
          optional: true
        - id: parameters.data.notificationIcon
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want to display the resource icon in notification
            content.
          optional: true
        - id: parameters.data.notificationCloseable
          type:
            - boolean
          description: |-
            A flag indicating
            whether or not you want the notification to be closeable.
          optional: true
        - id: parameters.data.notificationVibrate
          type:
            - boolean
          description: |-
            Android only. A flag
            indicating whether or not you want the system notification to make a
            vibration. The notificationType property must be set to system.
          optional: true
        - id: parameters.data.notificationSound
          type:
            - boolean
          description: >-
            * `Android`: A flag

            indicating whether or not you want the system notification to make a
            sound.

            The `notificationType` property must be set to `system`. * `iOS`: A
            flag

            indicating whether or not you want the native Apple Push
            notification to

            make a sound. The `deliveryTime` property must be set to `any` or

            `background`. This will play the 'default' sound. If you want to
            play a

            custom sound, see the `notificationOptions` property. * `Windows`: A
            flag

            indicating whether or not you want the native Windows Notification
            Service

            to make a sound. The `deliveryTime` property must be set to `any`.
          optional: true
        - id: parameters.data.notificationBadge
          type:
            - boolean
          description: >-
            A flag indicating

            whether or not you want the native Apple Push notification to update
            the

            badge icon to the number of unread messages. The `deliveryTime`
            property

            must be set to `any` or `background`.
          optional: true
        - id: parameters.data.localization
          type:
            - object
          description: >-
            Push campaigns can be

            localized using an optional JSON object. The JSON key is a
            two-character

            language code as specified by the ISO 639-1 standard. The
            corresponding

            value is an object containing the localizable properties.
          optional: true
        - id: parameters.data.questions
          type:
            - array
          description: Poll questions.
          optional: true
        - id: parameters.data.notificationTitle
          type:
            - string
          description: |-
            Title of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.data.notificationMessage
          type:
            - string
          description: |-
            Message of the
            notification. This field supports appInfo markers.
          optional: true
        - id: parameters.data.notificationImage
          type:
            - azure-arm-mobileengagement.buffer
          description: >-
            Optional image encoded

            in base 64. Usually included in the right part of in app
            notifications (or

            as a banner if there is neither text nor content icon). For Android
            system

            notifications, the image is used as the large icon (displayed only
            on

            Android 3+).
          optional: true
        - id: parameters.data.notificationOptions
          type:
            - object
          description: |-
            Additional platform
            specific options.
          optional: true
        - id: parameters.data.notificationOptions.bigText
          type:
            - string
          description: >-
            Android 4.1+

            only. Multi line message shown in expanded notifications on Android
            4.1+

            devices. The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.data.notificationOptions.bigPicture
          type:
            - string
          description: |-
            URL of a
            remote image displayed in expanded notifications on
            Android 4.1+ devices with the following constraints:
            * The URL length is limited to 2000 characters.
            * The image size must be less than 4 MiB.
            * The following MIME types are supported:
            ** image/png
            ** image/jpeg
            ** image/gif
            ** image/webp
            ** image/bmp
            ** image/x-bmp
            ** image/x-ms-bmp
            * URL scheme must be HTTP or HTTPS (with valid SSL certificate).
            * Incompatible with `bigText`, only one of the fields can be set.
            * The `notificationType` property must be set to `system`.
          optional: true
        - id: parameters.data.notificationOptions.sound
          type:
            - string
          description: >-
            iOS only. The

            name of a sound file in the application bundle. The sound in this
            file is

            played as an alert. If the sound file doesn’t exist or default is
            specified

            as the value, the default alert sound is played. The audio must be
            in one of

            the audio data formats that are compatible with system sounds. The

            `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.data.notificationOptions.actionText
          type:
            - string
          description: >-
            The action

            text is the title of the right button of the alert or the value of
            the

            unlock slider, where the value replaces 'unlock' in 'slide to
            unlock'.

            'View' (localized to the preferred language) is used as the default
            value.

            The `deliveryTime` property must be set to `any` or `background`.
          optional: true
        - id: parameters.data.title
          type:
            - string
          description: |-
            Title of the announcement or poll.
            This field supports appInfo markers.
          optional: true
        - id: parameters.data.body
          type:
            - string
          description: |-
            Body of the text/web announcement,
            poll or data push. This field supports appInfo markers.
          optional: true
        - id: parameters.data.actionButtonText
          type:
            - string
          description: |-
            Text of the action button
            for text/web announcements and polls (answer button).
          optional: true
        - id: parameters.data.exitButtonText
          type:
            - string
          description: |-
            Text of the exit button for
            text/web announcements and polls.
          optional: true
        - id: parameters.data.actionUrl
          type:
            - string
          description: |-
            URL to launch when the
            announcement is actioned.
          optional: true
        - id: parameters.data.payload
          type:
            - object
          description: Native push payload.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function push(resourceGroupName, appCollection, appName, kind, id,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-mobileengagement.Campaigns#getStatisticsWithHttpOperationResponse
    id: >-
      azure-arm-mobileengagement.Campaigns#getStatisticsWithHttpOperationResponse
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      getStatisticsWithHttpOperationResponse(kind, id, resourceGroupName,
      appCollection, appName, options)
    summary: Get all the campaign statistics.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.getStatisticsWithHttpOperationResponse(kind,
      id, resourceGroupName, appCollection, appName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignStatisticsResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CampaignStatisticsResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getStatisticsWithHttpOperationResponse(kind, id,
        resourceGroupName, appCollection, appName, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#getStatistics'
    id: 'azure-arm-mobileengagement.Campaigns#getStatistics'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      getStatistics(kind, id, resourceGroupName, appCollection, appName,
      options, optionalCallback)
    summary: Get all the campaign statistics.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.getStatistics(kind, id,
      resourceGroupName, appCollection, appName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignStatisticsResult} - The deserialized result object.'
        value: '{CampaignStatisticsResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStatisticsResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStatisticsResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getStatistics(kind, id, resourceGroupName, appCollection,
        appName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#finishWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#finishWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      finishWithHttpOperationResponse(resourceGroupName, appCollection, appName,
      kind, id, options)
    summary: >-
      Finish a push campaign previously activated by a call to Activate
      campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.finishWithHttpOperationResponse(resourceGroupName,
      appCollection, appName, kind, id, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignStateResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function finishWithHttpOperationResponse(resourceGroupName,
        appCollection, appName, kind, id, options)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#finish'
    id: 'azure-arm-mobileengagement.Campaigns#finish'
    parent: azure-arm-mobileengagement.Campaigns
    name: >-
      finish(resourceGroupName, appCollection, appName, kind, id, options,
      optionalCallback)
    summary: >-
      Finish a push campaign previously activated by a call to Activate
      campaign.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.finish(resourceGroupName,
      appCollection, appName, kind, id, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignStateResult} - The deserialized result object.'
        value: '{CampaignStateResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignStateResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: appCollection
          type:
            - string
          description: Application collection.
        - id: appName
          type:
            - string
          description: Application resource name.
        - id: kind
          type:
            - string
          description: |-
            Campaign kind. Possible values include:
            'announcements', 'polls', 'dataPushes', 'nativePushes'
        - id: id
          type:
            - number
          description: Campaign identifier.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function finish(resourceGroupName, appCollection, appName, kind, id,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#listNextWithHttpOperationResponse'
    id: 'azure-arm-mobileengagement.Campaigns#listNextWithHttpOperationResponse'
    parent: azure-arm-mobileengagement.Campaigns
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Get the list of campaigns.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CampaignsListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CampaignsListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-mobileengagement.Campaigns#listNext'
    id: 'azure-arm-mobileengagement.Campaigns#listNext'
    parent: azure-arm-mobileengagement.Campaigns
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Get the list of campaigns.
    fullName: >-
      azure-arm-mobileengagement.Campaigns.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CampaignsListResult} - The deserialized result object.'
        value: '{CampaignsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignsListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link CampaignsListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-arm-mobileengagement.MobileEngagementClient
    name: MobileEngagementClient
    fullName: azure-arm-mobileengagement.MobileEngagementClient
    isExternal: false

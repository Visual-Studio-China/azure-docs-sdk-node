### YamlMime:UniversalReference
items:
  - uid: azure-arm-keyvault.Vaults
    id: azure-arm-keyvault.Vaults
    name: Vaults
    summary: Class representing a Vaults.
    fullName: azure-arm-keyvault.Vaults
    type: Class
    children:
      - 'azure-arm-keyvault.Vaults.#ctor'
    langs:
      - js
  - id: 'azure-arm-keyvault.Vaults.#ctor'
    uid: 'azure-arm-keyvault.Vaults.#ctor'
    parent: azure-arm-keyvault.Vaults
    name: Vaults(client)
    fullName: azure-arm-keyvault.Vaults.Vaults(client)
    summary: Create a Vaults.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-keyvault.KeyVaultManagementClient
          description: Reference to the service client.
      content: new Vaults(client)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, vaultName,
      parameters, options)
    summary: Create or update a key vault in the specified subscription.
    fullName: >-
      azure-arm-keyvault.Vaults.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      vaultName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Vault>} - The deserialized result object.'
        value: '{HttpOperationResponse<Vault>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: parameters
          type:
            - object
          description: Parameters to create or update the vault
        - id: parameters.location
          type:
            - string
          description: |-
            The supported Azure location where the
            key vault should be created.
        - id: parameters.tags
          type:
            - object
          description: |-
            The tags that will be assigned to the key
            vault.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: Properties of the vault
        - id: parameters.properties.tenantId
          type:
            - azure-arm-keyvault.uuid
          description: >-
            The Azure Active Directory

            tenant ID that should be used for authenticating requests to the key
            vault.
        - id: parameters.properties.sku
          type:
            - object
          description: SKU details
        - id: parameters.properties.sku.name
          type:
            - string
          description: >-
            SKU name to specify whether

            the key vault is a standard vault or a premium vault. Possible
            values

            include: 'standard', 'premium'
        - id: parameters.properties.accessPolicies
          type:
            - array
          description: >-
            An array of 0 to 16

            identities that have access to the key vault. All identities in the
            array

            must use the same tenant ID as the key vault's tenant ID.
          optional: true
        - id: parameters.properties.vaultUri
          type:
            - string
          description: |-
            The URI of the vault for
            performing operations on keys and secrets.
          optional: true
        - id: parameters.properties.enabledForDeployment
          type:
            - boolean
          description: |-
            Property to
            specify whether Azure Virtual Machines are permitted to retrieve
            certificates stored as secrets from the key vault.
          optional: true
        - id: parameters.properties.enabledForDiskEncryption
          type:
            - boolean
          description: >-
            Property

            to specify whether Azure Disk Encryption is permitted to retrieve
            secrets

            from the vault and unwrap keys.
          optional: true
        - id: parameters.properties.enabledForTemplateDeployment
          type:
            - boolean
          description: >-
            Property to specify whether Azure Resource Manager is permitted to
            retrieve

            secrets from the key vault.
          optional: true
        - id: parameters.properties.enableSoftDelete
          type:
            - boolean
          description: >-
            Property to

            specify whether the 'soft delete' functionality is enabled for this
            key

            vault. It does not accept false value.
          optional: true
        - id: parameters.properties.createMode
          type:
            - string
          description: >-
            The vault's create mode

            to indicate whether the vault need to be recovered or not. Possible
            values

            include: 'recover', 'default'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        vaultName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#createOrUpdate'
    id: 'azure-arm-keyvault.Vaults#createOrUpdate'
    parent: azure-arm-keyvault.Vaults
    name: >-
      createOrUpdate(resourceGroupName, vaultName, parameters, options,
      optionalCallback)
    summary: Create or update a key vault in the specified subscription.
    fullName: >-
      azure-arm-keyvault.Vaults.createOrUpdate(resourceGroupName, vaultName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Vault} - The deserialized result object.'
        value: '{Vault} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Vault} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Vault} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the Resource Group to which
            the server belongs.
        - id: vaultName
          type:
            - string
          description: Name of the vault
        - id: parameters
          type:
            - object
          description: Parameters to create or update the vault
        - id: parameters.location
          type:
            - string
          description: |-
            The supported Azure location where the
            key vault should be created.
        - id: parameters.tags
          type:
            - object
          description: |-
            The tags that will be assigned to the key
            vault.
          optional: true
        - id: parameters.properties
          type:
            - object
          description: Properties of the vault
        - id: parameters.properties.tenantId
          type:
            - azure-arm-keyvault.uuid
          description: >-
            The Azure Active Directory

            tenant ID that should be used for authenticating requests to the key
            vault.
        - id: parameters.properties.sku
          type:
            - object
          description: SKU details
        - id: parameters.properties.sku.name
          type:
            - string
          description: >-
            SKU name to specify whether

            the key vault is a standard vault or a premium vault. Possible
            values

            include: 'standard', 'premium'
        - id: parameters.properties.accessPolicies
          type:
            - array
          description: >-
            An array of 0 to 16

            identities that have access to the key vault. All identities in the
            array

            must use the same tenant ID as the key vault's tenant ID.
          optional: true
        - id: parameters.properties.vaultUri
          type:
            - string
          description: |-
            The URI of the vault for
            performing operations on keys and secrets.
          optional: true
        - id: parameters.properties.enabledForDeployment
          type:
            - boolean
          description: |-
            Property to
            specify whether Azure Virtual Machines are permitted to retrieve
            certificates stored as secrets from the key vault.
          optional: true
        - id: parameters.properties.enabledForDiskEncryption
          type:
            - boolean
          description: >-
            Property

            to specify whether Azure Disk Encryption is permitted to retrieve
            secrets

            from the vault and unwrap keys.
          optional: true
        - id: parameters.properties.enabledForTemplateDeployment
          type:
            - boolean
          description: >-
            Property to specify whether Azure Resource Manager is permitted to
            retrieve

            secrets from the key vault.
          optional: true
        - id: parameters.properties.enableSoftDelete
          type:
            - boolean
          description: >-
            Property to

            specify whether the 'soft delete' functionality is enabled for this
            key

            vault. It does not accept false value.
          optional: true
        - id: parameters.properties.createMode
          type:
            - string
          description: >-
            The vault's create mode

            to indicate whether the vault need to be recovered or not. Possible
            values

            include: 'recover', 'default'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, vaultName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, vaultName,
      options)
    summary: Deletes the specified Azure key vault.
    fullName: >-
      azure-arm-keyvault.Vaults.deleteMethodWithHttpOperationResponse(resourceGroupName,
      vaultName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault to delete
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        vaultName, options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#deleteMethod'
    id: 'azure-arm-keyvault.Vaults#deleteMethod'
    parent: azure-arm-keyvault.Vaults
    name: 'deleteMethod(resourceGroupName, vaultName, options, optionalCallback)'
    summary: Deletes the specified Azure key vault.
    fullName: >-
      azure-arm-keyvault.Vaults.deleteMethod(resourceGroupName, vaultName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault to delete
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, vaultName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#getWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#getWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: 'getWithHttpOperationResponse(resourceGroupName, vaultName, options)'
    summary: Gets the specified Azure key vault.
    fullName: >-
      azure-arm-keyvault.Vaults.getWithHttpOperationResponse(resourceGroupName,
      vaultName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Vault>} - The deserialized result object.'
        value: '{HttpOperationResponse<Vault>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, vaultName,
        options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#get'
    id: 'azure-arm-keyvault.Vaults#get'
    parent: azure-arm-keyvault.Vaults
    name: 'get(resourceGroupName, vaultName, options, optionalCallback)'
    summary: Gets the specified Azure key vault.
    fullName: >-
      azure-arm-keyvault.Vaults.get(resourceGroupName, vaultName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Vault} - The deserialized result object.'
        value: '{Vault} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Vault} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link Vault} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the Resource Group to which
            the vault belongs.
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function get(resourceGroupName, vaultName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listByResourceGroupWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#listByResourceGroupWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    fullName: >-
      azure-arm-keyvault.Vaults.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VaultListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<VaultListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the Resource Group to which
            the vault belongs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.top
          type:
            - number
          description: Maximum number of results to return.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listByResourceGroup'
    id: 'azure-arm-keyvault.Vaults#listByResourceGroup'
    parent: azure-arm-keyvault.Vaults
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    fullName: >-
      azure-arm-keyvault.Vaults.listByResourceGroup(resourceGroupName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VaultListResult} - The deserialized result object.'
        value: '{VaultListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the Resource Group to which
            the vault belongs.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.top
          type:
            - number
          description: Maximum number of results to return.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listDeletedWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#listDeletedWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: listDeletedWithHttpOperationResponse(options)
    summary: Gets information about the deleted vaults in a subscription.
    fullName: azure-arm-keyvault.Vaults.listDeletedWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedVaultListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeletedVaultListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listDeletedWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listDeleted'
    id: 'azure-arm-keyvault.Vaults#listDeleted'
    parent: azure-arm-keyvault.Vaults
    name: 'listDeleted(options, optionalCallback)'
    summary: Gets information about the deleted vaults in a subscription.
    fullName: 'azure-arm-keyvault.Vaults.listDeleted(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedVaultListResult} - The deserialized result object.'
        value: '{DeletedVaultListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVaultListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVaultListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listDeleted(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#getDeletedWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#getDeletedWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: 'getDeletedWithHttpOperationResponse(vaultName, location, options)'
    summary: Gets the deleted Azure key vault.
    fullName: >-
      azure-arm-keyvault.Vaults.getDeletedWithHttpOperationResponse(vaultName,
      location, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedVault>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DeletedVault>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: location
          type:
            - string
          description: The location of the deleted vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeletedWithHttpOperationResponse(vaultName, location,
        options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#getDeleted'
    id: 'azure-arm-keyvault.Vaults#getDeleted'
    parent: azure-arm-keyvault.Vaults
    name: 'getDeleted(vaultName, location, options, optionalCallback)'
    summary: Gets the deleted Azure key vault.
    fullName: >-
      azure-arm-keyvault.Vaults.getDeleted(vaultName, location, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedVault} - The deserialized result object.'
        value: '{DeletedVault} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVault} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVault} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the vault.
        - id: location
          type:
            - string
          description: The location of the deleted vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getDeleted(vaultName, location, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#purgeDeletedWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#purgeDeletedWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: 'purgeDeletedWithHttpOperationResponse(vaultName, location, options)'
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    fullName: >-
      azure-arm-keyvault.Vaults.purgeDeletedWithHttpOperationResponse(vaultName,
      location, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the soft-deleted vault.
        - id: location
          type:
            - string
          description: The location of the soft-deleted vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function purgeDeletedWithHttpOperationResponse(vaultName, location,
        options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#purgeDeleted'
    id: 'azure-arm-keyvault.Vaults#purgeDeleted'
    parent: azure-arm-keyvault.Vaults
    name: 'purgeDeleted(vaultName, location, options, optionalCallback)'
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    fullName: >-
      azure-arm-keyvault.Vaults.purgeDeleted(vaultName, location, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the soft-deleted vault.
        - id: location
          type:
            - string
          description: The location of the soft-deleted vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function purgeDeleted(vaultName, location, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#listWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: listWithHttpOperationResponse(options)
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    fullName: azure-arm-keyvault.Vaults.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.top
          type:
            - number
          description: Maximum number of results to return.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#list'
    id: 'azure-arm-keyvault.Vaults#list'
    parent: azure-arm-keyvault.Vaults
    name: 'list(options, optionalCallback)'
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    fullName: 'azure-arm-keyvault.Vaults.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceListResult} - The deserialized result object.'
        value: '{ResourceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.top
          type:
            - number
          description: Maximum number of results to return.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#beginPurgeDeletedWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#beginPurgeDeletedWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: 'beginPurgeDeletedWithHttpOperationResponse(vaultName, location, options)'
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    fullName: >-
      azure-arm-keyvault.Vaults.beginPurgeDeletedWithHttpOperationResponse(vaultName,
      location, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the soft-deleted vault.
        - id: location
          type:
            - string
          description: The location of the soft-deleted vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginPurgeDeletedWithHttpOperationResponse(vaultName, location,
        options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#beginPurgeDeleted'
    id: 'azure-arm-keyvault.Vaults#beginPurgeDeleted'
    parent: azure-arm-keyvault.Vaults
    name: 'beginPurgeDeleted(vaultName, location, options, optionalCallback)'
    summary: |-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    fullName: >-
      azure-arm-keyvault.Vaults.beginPurgeDeleted(vaultName, location, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object if an error did not occur.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: vaultName
          type:
            - string
          description: The name of the soft-deleted vault.
        - id: location
          type:
            - string
          description: The location of the soft-deleted vault.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginPurgeDeleted(vaultName, location, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listByResourceGroupNextWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#listByResourceGroupNextWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    fullName: >-
      azure-arm-keyvault.Vaults.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VaultListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<VaultListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listByResourceGroupNext'
    id: 'azure-arm-keyvault.Vaults#listByResourceGroupNext'
    parent: azure-arm-keyvault.Vaults
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription and within the specified resource group.
    fullName: >-
      azure-arm-keyvault.Vaults.listByResourceGroupNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VaultListResult} - The deserialized result object.'
        value: '{VaultListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VaultListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listDeletedNextWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#listDeletedNextWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: 'listDeletedNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets information about the deleted vaults in a subscription.
    fullName: >-
      azure-arm-keyvault.Vaults.listDeletedNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedVaultListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeletedVaultListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listDeletedNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listDeletedNext'
    id: 'azure-arm-keyvault.Vaults#listDeletedNext'
    parent: azure-arm-keyvault.Vaults
    name: 'listDeletedNext(nextPageLink, options, optionalCallback)'
    summary: Gets information about the deleted vaults in a subscription.
    fullName: >-
      azure-arm-keyvault.Vaults.listDeletedNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedVaultListResult} - The deserialized result object.'
        value: '{DeletedVaultListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVaultListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link DeletedVaultListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listDeletedNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listNextWithHttpOperationResponse'
    id: 'azure-arm-keyvault.Vaults#listNextWithHttpOperationResponse'
    parent: azure-arm-keyvault.Vaults
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    fullName: >-
      azure-arm-keyvault.Vaults.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ResourceListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-keyvault.Vaults#listNext'
    id: 'azure-arm-keyvault.Vaults#listNext'
    parent: azure-arm-keyvault.Vaults
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: |-
      The List operation gets information about the vaults associated with the
      subscription.
    fullName: >-
      azure-arm-keyvault.Vaults.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResourceListResult} - The deserialized result object.'
        value: '{ResourceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link ResourceListResult} for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-arm-keyvault.KeyVaultManagementClient
    name: KeyVaultManagementClient
    fullName: azure-arm-keyvault.KeyVaultManagementClient
    isExternal: false

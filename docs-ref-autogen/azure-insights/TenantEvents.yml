### YamlMime:UniversalReference
items:
  - uid: azure-insights.TenantEvents
    id: azure-insights.TenantEvents
    name: TenantEvents
    summary: |-
      TenantEvents
      __NOTE__: An instance of this class is automatically created for an
      instance of the InsightsClient.
      Initializes a new instance of the TenantEvents class.
    fullName: azure-insights.TenantEvents
    source:
      id: azure-insights.TenantEvents
      path: lib\services\insights\lib\operations\tenantEvents.js
      startLine: 345
      remote:
        branch: master
        path: lib\services\insights\lib\operations\tenantEvents.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    langs:
      - js
    type: Class
    children:
      - 'azure-insights.TenantEvents.#ctor'
      - 'azure-insights.TenantEvents#listWithHttpOperationResponse'
      - 'azure-insights.TenantEvents#list'
      - 'azure-insights.TenantEvents#listNextWithHttpOperationResponse'
      - 'azure-insights.TenantEvents#listNext'
  - id: 'azure-insights.TenantEvents.#ctor'
    uid: 'azure-insights.TenantEvents.#ctor'
    parent: azure-insights.TenantEvents
    name: TenantEvents(client)
    fullName: azure-insights.TenantEvents.TenantEvents(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-insights.InsightsClient
          description: Reference to the service client.
      content: new TenantEvents(client)
    langs:
      - js
  - uid: 'azure-insights.TenantEvents#listWithHttpOperationResponse'
    id: 'azure-insights.TenantEvents#listWithHttpOperationResponse'
    parent: azure-insights.TenantEvents
    name: listWithHttpOperationResponse(options)
    summary: >-
      get the Activity Logs for the Tenant. Everything that is applicable to the

      API to get the Activity Log for the subscription is applicable to this API

      (the parameters, $filter, etc.). One thing to point out here is that this

      API does *not* retrieve the logs at the individual subscription of the

      tenant but only surfaces the logs that were generated at the tenant level.

      The **$filter** is very restricted and allows only the following patterns.
      -

      List events for a resource group: $filter=eventTimestamp ge '<Start Time>'

      and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation'

      and resourceGroupName eq '<ResourceGroupName>'. - List events for
      resource:

      $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End
      Time>'

      and eventChannels eq 'Admin, Operation' and resourceUri eq
      '<ResourceURI>'.

      - List events for a subscription: $filter=eventTimestamp ge '<Start Time>'

      and eventTimestamp le '<End Time>' and eventChannels eq 'Admin,
      Operation'.

      - List evetns for a resource provider: $filter=eventTimestamp ge '<Start

      Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin,

      Operation' and resourceProvider eq '<ResourceProviderName>'. - List events

      for a correlation Id: api-version=2014-04-01&$filter=eventTimestamp ge

      '2014-07-16T04:36:37.6407898Z' and eventTimestamp le

      '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and

      correlationId eq '<CorrelationID>'. No other syntax is allowed.
    fullName: azure-insights.TenantEvents.listWithHttpOperationResponse(options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Reduces the set of data collected. The

            syntax allowed depends on the operation. See the operation's
            description for

            details.
          optional: true
        - id: options.select
          type:
            - string
          description: >-
            Used to fetch events with only the given

            properties. The filter is a comma separated list of property names
            to be

            returned. Possible values are: authorization, channels, claims,

            correlationId, description, eventDataId, eventName, eventTimestamp,

            httpRequest, level, operationId, operationName, properties,

            resourceGroupName, resourceProviderName, resourceId, status,

            submissionTimestamp, subStatus, subscriptionId
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
  - uid: 'azure-insights.TenantEvents#list'
    id: 'azure-insights.TenantEvents#list'
    parent: azure-insights.TenantEvents
    name: 'list(options, optionalCallback)'
    summary: >-
      get the Activity Logs for the Tenant. Everything that is applicable to the

      API to get the Activity Log for the subscription is applicable to this API

      (the parameters, $filter, etc.). One thing to point out here is that this

      API does *not* retrieve the logs at the individual subscription of the

      tenant but only surfaces the logs that were generated at the tenant level.

      The **$filter** is very restricted and allows only the following patterns.
      -

      List events for a resource group: $filter=eventTimestamp ge '<Start Time>'

      and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation'

      and resourceGroupName eq '<ResourceGroupName>'. - List events for
      resource:

      $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End
      Time>'

      and eventChannels eq 'Admin, Operation' and resourceUri eq
      '<ResourceURI>'.

      - List events for a subscription: $filter=eventTimestamp ge '<Start Time>'

      and eventTimestamp le '<End Time>' and eventChannels eq 'Admin,
      Operation'.

      - List evetns for a resource provider: $filter=eventTimestamp ge '<Start

      Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin,

      Operation' and resourceProvider eq '<ResourceProviderName>'. - List events

      for a correlation Id: api-version=2014-04-01&$filter=eventTimestamp ge

      '2014-07-16T04:36:37.6407898Z' and eventTimestamp le

      '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and

      correlationId eq '<CorrelationID>'. No other syntax is allowed.
    fullName: 'azure-insights.TenantEvents.list(options, optionalCallback)'
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Reduces the set of data collected. The

            syntax allowed depends on the operation. See the operation's
            description for

            details.
          optional: true
        - id: options.select
          type:
            - string
          description: >-
            Used to fetch events with only the given

            properties. The filter is a comma separated list of property names
            to be

            returned. Possible values are: authorization, channels, claims,

            correlationId, description, eventDataId, eventName, eventTimestamp,

            httpRequest, level, operationId, operationName, properties,

            resourceGroupName, resourceProviderName, resourceId, status,

            submissionTimestamp, subStatus, subscriptionId
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(options, optionalCallback)'
  - uid: 'azure-insights.TenantEvents#listNextWithHttpOperationResponse'
    id: 'azure-insights.TenantEvents#listNextWithHttpOperationResponse'
    parent: azure-insights.TenantEvents
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      get the Activity Logs for the Tenant. Everything that is applicable to the

      API to get the Activity Log for the subscription is applicable to this API

      (the parameters, $filter, etc.). One thing to point out here is that this

      API does *not* retrieve the logs at the individual subscription of the

      tenant but only surfaces the logs that were generated at the tenant level.

      The **$filter** is very restricted and allows only the following patterns.
      -

      List events for a resource group: $filter=eventTimestamp ge '<Start Time>'

      and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation'

      and resourceGroupName eq '<ResourceGroupName>'. - List events for
      resource:

      $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End
      Time>'

      and eventChannels eq 'Admin, Operation' and resourceUri eq
      '<ResourceURI>'.

      - List events for a subscription: $filter=eventTimestamp ge '<Start Time>'

      and eventTimestamp le '<End Time>' and eventChannels eq 'Admin,
      Operation'.

      - List evetns for a resource provider: $filter=eventTimestamp ge '<Start

      Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin,

      Operation' and resourceProvider eq '<ResourceProviderName>'. - List events

      for a correlation Id: api-version=2014-04-01&$filter=eventTimestamp ge

      '2014-07-16T04:36:37.6407898Z' and eventTimestamp le

      '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and

      correlationId eq '<CorrelationID>'. No other syntax is allowed.
    fullName: >-
      azure-insights.TenantEvents.listNextWithHttpOperationResponse(nextPageLink,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
  - uid: 'azure-insights.TenantEvents#listNext'
    id: 'azure-insights.TenantEvents#listNext'
    parent: azure-insights.TenantEvents
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: >-
      get the Activity Logs for the Tenant. Everything that is applicable to the

      API to get the Activity Log for the subscription is applicable to this API

      (the parameters, $filter, etc.). One thing to point out here is that this

      API does *not* retrieve the logs at the individual subscription of the

      tenant but only surfaces the logs that were generated at the tenant level.

      The **$filter** is very restricted and allows only the following patterns.
      -

      List events for a resource group: $filter=eventTimestamp ge '<Start Time>'

      and eventTimestamp le '<End Time>' and eventChannels eq 'Admin, Operation'

      and resourceGroupName eq '<ResourceGroupName>'. - List events for
      resource:

      $filter=eventTimestamp ge '<Start Time>' and eventTimestamp le '<End
      Time>'

      and eventChannels eq 'Admin, Operation' and resourceUri eq
      '<ResourceURI>'.

      - List events for a subscription: $filter=eventTimestamp ge '<Start Time>'

      and eventTimestamp le '<End Time>' and eventChannels eq 'Admin,
      Operation'.

      - List evetns for a resource provider: $filter=eventTimestamp ge '<Start

      Time>' and eventTimestamp le '<End Time>' and eventChannels eq 'Admin,

      Operation' and resourceProvider eq '<ResourceProviderName>'. - List events

      for a correlation Id: api-version=2014-04-01&$filter=eventTimestamp ge

      '2014-07-16T04:36:37.6407898Z' and eventTimestamp le

      '2014-07-20T04:36:37.6407898Z' and eventChannels eq 'Admin, Operation' and

      correlationId eq '<CorrelationID>'. No other syntax is allowed.
    fullName: >-
      azure-insights.TenantEvents.listNext(nextPageLink, options,
      optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
references:
  - uid: azure-insights.InsightsClient
    name: InsightsClient
    fullName: azure-insights.InsightsClient
    isExternal: false

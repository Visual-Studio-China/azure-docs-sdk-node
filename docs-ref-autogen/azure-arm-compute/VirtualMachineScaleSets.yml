### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute.VirtualMachineScaleSets
    id: azure-arm-compute.VirtualMachineScaleSets
    name: VirtualMachineScaleSets
    summary: Class representing a VirtualMachineScaleSets.
    fullName: azure-arm-compute.VirtualMachineScaleSets
    type: Class
    children:
      - 'azure-arm-compute.VirtualMachineScaleSets.#ctor'
    langs:
      - js
  - id: 'azure-arm-compute.VirtualMachineScaleSets.#ctor'
    uid: 'azure-arm-compute.VirtualMachineScaleSets.#ctor'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: VirtualMachineScaleSets(client)
    fullName: azure-arm-compute.VirtualMachineScaleSets.VirtualMachineScaleSets(client)
    summary: Create a VirtualMachineScaleSets.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-compute.ComputeManagementClient
          description: Reference to the service client.
      content: new VirtualMachineScaleSets(client)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#createOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#createOrUpdateWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      parameters, options)
    summary: Create or update a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - object
          description: The scale set object.
        - id: parameters.sku
          type:
            - object
          description: The virtual machine scale set sku.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The sku name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: >-
            Specifies the tier of virtual machines

            in a scale set.<br /><br /> Possible Values:<br /><br />
            **Standard**<br

            /><br /> **Basic**
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: |-
            Specifies the number of virtual
            machines in the scale set.
          optional: true
        - id: parameters.plan
          type:
            - object
          description: >-
            Specifies information about the

            marketplace image used to create the virtual machine. This element
            is only

            used for marketplace images. Before you can use a marketplace image
            from an

            API, you must enable the image for programmatic use.  In the Azure
            portal,

            find the marketplace image that you want to use and then click
            **Want to

            deploy programmatically, Get Started ->**. Enter any required
            information

            and then click **Save**.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: |-
            Specifies the product of the image
            from the marketplace. This is the same value as Offer under the
            imageReference element.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.upgradePolicy
          type:
            - object
          description: The upgrade policy.
          optional: true
        - id: parameters.upgradePolicy.mode
          type:
            - string
          description: >-
            Specifies the mode of an

            upgrade to virtual machines in the scale set.<br /><br /> Possible
            values

            are:<br /><br /> **Manual** - You  control the application of
            updates to

            virtual machines in the scale set. You do this by using the
            manualUpgrade

            action.<br /><br /> **Automatic** - All virtual machines in the
            scale set

            are  automatically updated at the same time. Possible values
            include:

            'Automatic', 'Manual', 'Rolling'
          optional: true
        - id: parameters.upgradePolicy.rollingUpgradePolicy
          type:
            - object
          description: |-
            The
            configuration parameters used while performing a rolling upgrade.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent
          type:
            - number
          description: >-
            The

            maximum percent of total virtual machine instances that will be
            upgraded

            simultaneously by the rolling upgrade in one batch. As this is a
            maximum,

            unhealthy instances in previous or future batches can cause the
            percentage

            of instances in a batch to decrease to ensure higher reliability.
            The

            default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of the total virtual machine instances in the
            scale

            set that can be simultaneously unhealthy, either as a result of
            being

            upgraded, or by being found in an unhealthy state by the virtual
            machine

            health checks before the rolling upgrade aborts. This constraint
            will be

            checked prior to starting any batch. The default value for this
            parameter is

            20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of upgraded virtual machine instances that
            can be

            found to be in an unhealthy state. This check will happen after each
            batch

            is upgraded. If this percentage is ever exceeded, the rolling update
            aborts.

            The default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches
          type:
            - string
          description: >-
            The

            wait time between completing the update for all virtual machines in
            one

            batch and starting the next batch. The time duration should be
            specified in

            ISO 8601 format. The default value is 0 seconds (PT0S).
          optional: true
        - id: parameters.upgradePolicy.automaticOSUpgrade
          type:
            - boolean
          description: >-
            Whether OS

            upgrades should automatically be applied to scale set instances in a
            rolling

            fashion when a newer version of the image becomes available.
          optional: true
        - id: parameters.virtualMachineProfile
          type:
            - object
          description: |-
            The virtual machine
            profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile
          type:
            - object
          description: |-
            Specifies the
            operating system settings for the virtual machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.computerNamePrefix
          type:
            - string
          description: >-
            Specifies

            the computer name prefix for all of the virtual machines in the
            scale set.

            Computer name prefixes must be 1 to 15 characters long.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.adminUsername
          type:
            - string
          description: >-
            Specifies the name of the administrator account. <br><br>
            **Windows-only

            restriction:** Cannot end in "." <br><br> **Disallowed values:**

            "administrator", "admin", "user", "user1", "test", "user2", "test1",

            "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2",
            "aspnet",

            "backup", "console", "david", "guest", "john", "owner", "root",
            "server",

            "sql", "support", "support_388945a0", "sys", "test2", "test3",
            "user4",

            "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br>

            **Max-length (Linux):** 64 characters <br><br> **Max-length
            (Windows):** 20

            characters  <br><br><li> For root access to the Linux VM, see [Using
            root

            privileges on Linux virtual machines in

            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>

            For a list of built-in system users on Linux that should not be used
            in this

            field, see [Selecting User Names for Linux on

            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.adminPassword
          type:
            - string
          description: >-
            Specifies the password of the administrator account. <br><br>

            **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length

            (Linux):** 6 characters <br><br> **Max-length (Windows):** 123
            characters

            <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity

            requirements:** 3 out of 4 conditions below need to be fulfilled
            <br> Has

            lower characters <br>Has upper characters <br> Has a digit <br> Has
            a

            special character (Regex match [\W_]) <br><br> **Disallowed
            values:**

            "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
            "pass@word1",

            "Password!", "Password1", "Password22", "iloveyou!" <br><br> For
            resetting

            the password, see [How to reset the Remote Desktop service or its
            login

            password in a Windows

            VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)

            <br><br> For resetting root password, see [Manage users, SSH, and
            check or

            repair disks on Azure Linux VMs using the VMAccess

            Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.customData
          type:
            - string
          description: >-
            Specifies a base-64 encoded string of custom data. The base-64
            encoded

            string is decoded to a binary array that is saved as a file on the
            Virtual

            Machine. The maximum length of the binary array is 65535 bytes.
            <br><br> For

            using cloud-init for your VM, see [Using cloud-init to customize a
            Linux VM

            during

            creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.windowsConfiguration
          type:
            - object
          description: |-
            Specifies
            Windows operating system settings on the virtual machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent
          type:
            - boolean
          description: >-
            Indicates whether virtual machine agent should be provisioned on the
            virtual

            machine. <br><br> When this property is not specified in the request
            body,

            default behavior is to set it to true.  This will ensure that VM
            Agent is

            installed on the VM so that extensions can be added to the VM later.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: Indicates whether virtual machine is enabled for automatic updates.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.timeZone
          type:
            - string
          description: >-
            Specifies the time zone of the virtual machine. e.g. "Pacific
            Standard Time"
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent
          type:
            - array
          description: >-
            Specifies additional base-64 encoded XML formatted information that
            can be

            included in the Unattend.xml file, which is used by Windows Setup.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM
          type:
            - object
          description: >-
            Specifies the Windows Remote Management listeners. This enables
            remote

            Windows PowerShell.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners
          type:
            - array
          description: The list of Windows Remote Management listeners
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration
          type:
            - object
          description: >-
            Specifies

            the Linux operating system settings on the virtual machine.
            <br><br>For a

            list of supported Linux distributions, see [Linux on Azure-Endorsed

            Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)

            <br><br> For running non-endorsed distributions, see [Information
            for

            Non-Endorsed

            Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication
          type:
            - boolean
          description: Specifies whether password authentication should be disabled.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh
          type:
            - object
          description: Specifies the ssh key configuration for a Linux OS.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys
          type:
            - array
          description: >-
            The list of SSH public keys used to authenticate with linux based
            VMs.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.secrets
          type:
            - array
          description: >-
            Specifies set of certificates that should be installed onto the
            virtual

            machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile
          type:
            - object
          description: |-
            Specifies
            the storage settings for the virtual machine disks.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference
          type:
            - object
          description: >-
            Specifies

            information about the image to use. You can specify information
            about

            platform images, marketplace images, or virtual machine images. This
            element

            is required when you want to use a platform image, marketplace
            image, or

            virtual machine image, but is not used in other creation operations.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.publisher
          type:
            - string
          description: The image publisher.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.offer
          type:
            - string
          description: >-
            Specifies the offer of the platform image or marketplace image used
            to

            create the virtual machine.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.sku
          type:
            - string
          description: |-
            The
            image SKU.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.version
          type:
            - string
          description: >-
            Specifies the version of the platform image or marketplace image
            used to

            create the virtual machine. The allowed formats are
            Major.Minor.Build or

            'latest'. Major, Minor, and Build are decimal numbers. Specify
            'latest' to

            use the latest version of an image available at deploy time. Even if
            you use

            'latest', the VM image will not automatically update after deploy
            time even

            if a new version becomes available.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.id
          type:
            - string
          description: |-
            Resource
            Id
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk
          type:
            - object
          description: >-
            Specifies information about the operating system disk used by the
            virtual

            machines in the scale set. <br><br> For more information about
            disks, see

            [About disks and VHDs for Azure virtual

            machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.name
          type:
            - string
          description: The disk name.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.caching
          type:
            - string
          description: >-
            Specifies

            the caching requirements. <br><br> Possible values are: <br><br>
            **None**

            <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default:
            **None for

            Standard storage. ReadOnly for Premium storage**. Possible values
            include:

            'None', 'ReadOnly', 'ReadWrite'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.createOption
          type:
            - string
          description: >-
            Specifies how the virtual machines in the scale set should be

            created.<br><br> The only allowed value is: **FromImage** \u2013
            This value

            is used when you are using an image to create the virtual machine.
            If you

            are using a platform image, you also use the imageReference element

            described above. If you are using a marketplace image, you  also use
            the

            plan element previously described. Possible values include:
            'FromImage',

            'Empty', 'Attach'
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.osType
          type:
            - string
          description: >-
            This

            property allows you to specify the type of the OS that is included
            in the

            disk if creating a VM from user-image or a specialized VHD. <br><br>

            Possible values are: <br><br> **Windows** <br><br> **Linux**.
            Possible

            values include: 'Windows', 'Linux'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image
          type:
            - object
          description: |-
            Specifies
            information about the unmanaged user image to base the scale set on.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image.uri
          type:
            - string
          description: |-
            Specifies
            the virtual hard disk's uri.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.vhdContainers
          type:
            - array
          description: >-
            Specifies the container urls that are used to store operating system
            disks

            for the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk
          type:
            - object
          description: |-
            The
            managed disk parameters.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType
          type:
            - string
          description: >-
            Specifies the storage account type for the managed disk. Possible
            values

            are: Standard_LRS or Premium_LRS. Possible values include:
            'Standard_LRS',

            'Premium_LRS'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.dataDisks
          type:
            - array
          description: >-
            Specifies the parameters that are used to add data disks to the
            virtual

            machines in the scale set. <br><br> For more information about
            disks, see

            [About disks and VHDs for Azure virtual

            machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile
          type:
            - object
          description: >-
            Specifies

            properties of the network interfaces of the virtual machines in the
            scale

            set.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile.healthProbe
          type:
            - object
          description: >-
            A reference to

            a load balancer probe used to determine the health of an instance in
            the

            virtual machine scale set. The reference will be in the form:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile.healthProbe.id
          type:
            - string
          description: >-
            The ARM

            resource id in the form of

            /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
          optional: true
        - id: >-
            parameters.virtualMachineProfile.networkProfile.networkInterfaceConfigurations
          type:
            - array
          description: The list of network configurations.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile
          type:
            - object
          description: >-
            Specifies the boot diagnostic settings state. <br><br>Minimum
            api-version:

            2015-06-15.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics
          type:
            - object
          description: >-
            Boot

            Diagnostics is a debugging feature which allows you to view Console
            Output

            and Screenshot to diagnose VM status. <br><br> For Linux Virtual
            Machines,

            you can easily view the output of your console log. <br><br> For
            both

            Windows and Linux virtual machines, Azure also enables you to see a

            screenshot of the VM from the hypervisor.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled
          type:
            - boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri
          type:
            - string
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile
          type:
            - object
          description: >-
            Specifies a collection of settings for extensions installed on
            virtual

            machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile.extensions
          type:
            - array
          description: |-
            The virtual
            machine scale set child extension resources.
          optional: true
        - id: parameters.virtualMachineProfile.licenseType
          type:
            - string
          description: >-
            Specifies

            that the image or disk that is being used was licensed on-premises.
            This

            element is only used for images that contain the Windows Server
            operating

            system. <br><br> Possible values are: <br><br> Windows_Client
            <br><br>

            Windows_Server <br><br> If this element is included in a request for
            an

            update, the value must match the initial value. This value cannot be

            updated. <br><br> For more information, see [Azure Hybrid Use
            Benefit for

            Windows

            Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)

            <br><br> Minimum api-version: 2015-06-15
          optional: true
        - id: parameters.overprovision
          type:
            - boolean
          description: |-
            Specifies whether the Virtual
            Machine Scale Set should be overprovisioned.
          optional: true
        - id: parameters.singlePlacementGroup
          type:
            - boolean
          description: >-
            When true this limits the

            scale set to a single placement group, of max size 100 virtual
            machines.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: |-
            The identity of the virtual machine
            scale set, if configured.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: >-
            The type of identity used for the

            virtual machine scale set. Currently, the only supported type is

            'SystemAssigned', which implicitly creates an identity. Possible
            values

            include: 'SystemAssigned'
          optional: true
        - id: parameters.zones
          type:
            - array
          description: The virtual machine scale set zones.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#createOrUpdate'
    id: 'azure-arm-compute.VirtualMachineScaleSets#createOrUpdate'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      createOrUpdate(resourceGroupName, vmScaleSetName, parameters, options,
      optionalCallback)
    summary: Create or update a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.createOrUpdate(resourceGroupName,
      vmScaleSetName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VirtualMachineScaleSet} - The deserialized result object.'
        value: '{VirtualMachineScaleSet} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - object
          description: The scale set object.
        - id: parameters.sku
          type:
            - object
          description: The virtual machine scale set sku.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The sku name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: >-
            Specifies the tier of virtual machines

            in a scale set.<br /><br /> Possible Values:<br /><br />
            **Standard**<br

            /><br /> **Basic**
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: |-
            Specifies the number of virtual
            machines in the scale set.
          optional: true
        - id: parameters.plan
          type:
            - object
          description: >-
            Specifies information about the

            marketplace image used to create the virtual machine. This element
            is only

            used for marketplace images. Before you can use a marketplace image
            from an

            API, you must enable the image for programmatic use.  In the Azure
            portal,

            find the marketplace image that you want to use and then click
            **Want to

            deploy programmatically, Get Started ->**. Enter any required
            information

            and then click **Save**.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: |-
            Specifies the product of the image
            from the marketplace. This is the same value as Offer under the
            imageReference element.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.upgradePolicy
          type:
            - object
          description: The upgrade policy.
          optional: true
        - id: parameters.upgradePolicy.mode
          type:
            - string
          description: >-
            Specifies the mode of an

            upgrade to virtual machines in the scale set.<br /><br /> Possible
            values

            are:<br /><br /> **Manual** - You  control the application of
            updates to

            virtual machines in the scale set. You do this by using the
            manualUpgrade

            action.<br /><br /> **Automatic** - All virtual machines in the
            scale set

            are  automatically updated at the same time. Possible values
            include:

            'Automatic', 'Manual', 'Rolling'
          optional: true
        - id: parameters.upgradePolicy.rollingUpgradePolicy
          type:
            - object
          description: |-
            The
            configuration parameters used while performing a rolling upgrade.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent
          type:
            - number
          description: >-
            The

            maximum percent of total virtual machine instances that will be
            upgraded

            simultaneously by the rolling upgrade in one batch. As this is a
            maximum,

            unhealthy instances in previous or future batches can cause the
            percentage

            of instances in a batch to decrease to ensure higher reliability.
            The

            default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of the total virtual machine instances in the
            scale

            set that can be simultaneously unhealthy, either as a result of
            being

            upgraded, or by being found in an unhealthy state by the virtual
            machine

            health checks before the rolling upgrade aborts. This constraint
            will be

            checked prior to starting any batch. The default value for this
            parameter is

            20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of upgraded virtual machine instances that
            can be

            found to be in an unhealthy state. This check will happen after each
            batch

            is upgraded. If this percentage is ever exceeded, the rolling update
            aborts.

            The default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches
          type:
            - string
          description: >-
            The

            wait time between completing the update for all virtual machines in
            one

            batch and starting the next batch. The time duration should be
            specified in

            ISO 8601 format. The default value is 0 seconds (PT0S).
          optional: true
        - id: parameters.upgradePolicy.automaticOSUpgrade
          type:
            - boolean
          description: >-
            Whether OS

            upgrades should automatically be applied to scale set instances in a
            rolling

            fashion when a newer version of the image becomes available.
          optional: true
        - id: parameters.virtualMachineProfile
          type:
            - object
          description: |-
            The virtual machine
            profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile
          type:
            - object
          description: |-
            Specifies the
            operating system settings for the virtual machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.computerNamePrefix
          type:
            - string
          description: >-
            Specifies

            the computer name prefix for all of the virtual machines in the
            scale set.

            Computer name prefixes must be 1 to 15 characters long.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.adminUsername
          type:
            - string
          description: >-
            Specifies the name of the administrator account. <br><br>
            **Windows-only

            restriction:** Cannot end in "." <br><br> **Disallowed values:**

            "administrator", "admin", "user", "user1", "test", "user2", "test1",

            "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2",
            "aspnet",

            "backup", "console", "david", "guest", "john", "owner", "root",
            "server",

            "sql", "support", "support_388945a0", "sys", "test2", "test3",
            "user4",

            "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br>

            **Max-length (Linux):** 64 characters <br><br> **Max-length
            (Windows):** 20

            characters  <br><br><li> For root access to the Linux VM, see [Using
            root

            privileges on Linux virtual machines in

            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>

            For a list of built-in system users on Linux that should not be used
            in this

            field, see [Selecting User Names for Linux on

            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.adminPassword
          type:
            - string
          description: >-
            Specifies the password of the administrator account. <br><br>

            **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length

            (Linux):** 6 characters <br><br> **Max-length (Windows):** 123
            characters

            <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity

            requirements:** 3 out of 4 conditions below need to be fulfilled
            <br> Has

            lower characters <br>Has upper characters <br> Has a digit <br> Has
            a

            special character (Regex match [\W_]) <br><br> **Disallowed
            values:**

            "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
            "pass@word1",

            "Password!", "Password1", "Password22", "iloveyou!" <br><br> For
            resetting

            the password, see [How to reset the Remote Desktop service or its
            login

            password in a Windows

            VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)

            <br><br> For resetting root password, see [Manage users, SSH, and
            check or

            repair disks on Azure Linux VMs using the VMAccess

            Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.customData
          type:
            - string
          description: >-
            Specifies a base-64 encoded string of custom data. The base-64
            encoded

            string is decoded to a binary array that is saved as a file on the
            Virtual

            Machine. The maximum length of the binary array is 65535 bytes.
            <br><br> For

            using cloud-init for your VM, see [Using cloud-init to customize a
            Linux VM

            during

            creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.windowsConfiguration
          type:
            - object
          description: |-
            Specifies
            Windows operating system settings on the virtual machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent
          type:
            - boolean
          description: >-
            Indicates whether virtual machine agent should be provisioned on the
            virtual

            machine. <br><br> When this property is not specified in the request
            body,

            default behavior is to set it to true.  This will ensure that VM
            Agent is

            installed on the VM so that extensions can be added to the VM later.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: Indicates whether virtual machine is enabled for automatic updates.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.timeZone
          type:
            - string
          description: >-
            Specifies the time zone of the virtual machine. e.g. "Pacific
            Standard Time"
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent
          type:
            - array
          description: >-
            Specifies additional base-64 encoded XML formatted information that
            can be

            included in the Unattend.xml file, which is used by Windows Setup.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM
          type:
            - object
          description: >-
            Specifies the Windows Remote Management listeners. This enables
            remote

            Windows PowerShell.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners
          type:
            - array
          description: The list of Windows Remote Management listeners
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration
          type:
            - object
          description: >-
            Specifies

            the Linux operating system settings on the virtual machine.
            <br><br>For a

            list of supported Linux distributions, see [Linux on Azure-Endorsed

            Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)

            <br><br> For running non-endorsed distributions, see [Information
            for

            Non-Endorsed

            Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication
          type:
            - boolean
          description: Specifies whether password authentication should be disabled.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh
          type:
            - object
          description: Specifies the ssh key configuration for a Linux OS.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys
          type:
            - array
          description: >-
            The list of SSH public keys used to authenticate with linux based
            VMs.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.secrets
          type:
            - array
          description: >-
            Specifies set of certificates that should be installed onto the
            virtual

            machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile
          type:
            - object
          description: |-
            Specifies
            the storage settings for the virtual machine disks.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference
          type:
            - object
          description: >-
            Specifies

            information about the image to use. You can specify information
            about

            platform images, marketplace images, or virtual machine images. This
            element

            is required when you want to use a platform image, marketplace
            image, or

            virtual machine image, but is not used in other creation operations.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.publisher
          type:
            - string
          description: The image publisher.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.offer
          type:
            - string
          description: >-
            Specifies the offer of the platform image or marketplace image used
            to

            create the virtual machine.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.sku
          type:
            - string
          description: |-
            The
            image SKU.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.version
          type:
            - string
          description: >-
            Specifies the version of the platform image or marketplace image
            used to

            create the virtual machine. The allowed formats are
            Major.Minor.Build or

            'latest'. Major, Minor, and Build are decimal numbers. Specify
            'latest' to

            use the latest version of an image available at deploy time. Even if
            you use

            'latest', the VM image will not automatically update after deploy
            time even

            if a new version becomes available.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.id
          type:
            - string
          description: |-
            Resource
            Id
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk
          type:
            - object
          description: >-
            Specifies information about the operating system disk used by the
            virtual

            machines in the scale set. <br><br> For more information about
            disks, see

            [About disks and VHDs for Azure virtual

            machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.name
          type:
            - string
          description: The disk name.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.caching
          type:
            - string
          description: >-
            Specifies

            the caching requirements. <br><br> Possible values are: <br><br>
            **None**

            <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default:
            **None for

            Standard storage. ReadOnly for Premium storage**. Possible values
            include:

            'None', 'ReadOnly', 'ReadWrite'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.createOption
          type:
            - string
          description: >-
            Specifies how the virtual machines in the scale set should be

            created.<br><br> The only allowed value is: **FromImage** \u2013
            This value

            is used when you are using an image to create the virtual machine.
            If you

            are using a platform image, you also use the imageReference element

            described above. If you are using a marketplace image, you  also use
            the

            plan element previously described. Possible values include:
            'FromImage',

            'Empty', 'Attach'
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.osType
          type:
            - string
          description: >-
            This

            property allows you to specify the type of the OS that is included
            in the

            disk if creating a VM from user-image or a specialized VHD. <br><br>

            Possible values are: <br><br> **Windows** <br><br> **Linux**.
            Possible

            values include: 'Windows', 'Linux'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image
          type:
            - object
          description: |-
            Specifies
            information about the unmanaged user image to base the scale set on.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image.uri
          type:
            - string
          description: |-
            Specifies
            the virtual hard disk's uri.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.vhdContainers
          type:
            - array
          description: >-
            Specifies the container urls that are used to store operating system
            disks

            for the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk
          type:
            - object
          description: |-
            The
            managed disk parameters.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType
          type:
            - string
          description: >-
            Specifies the storage account type for the managed disk. Possible
            values

            are: Standard_LRS or Premium_LRS. Possible values include:
            'Standard_LRS',

            'Premium_LRS'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.dataDisks
          type:
            - array
          description: >-
            Specifies the parameters that are used to add data disks to the
            virtual

            machines in the scale set. <br><br> For more information about
            disks, see

            [About disks and VHDs for Azure virtual

            machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile
          type:
            - object
          description: >-
            Specifies

            properties of the network interfaces of the virtual machines in the
            scale

            set.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile.healthProbe
          type:
            - object
          description: >-
            A reference to

            a load balancer probe used to determine the health of an instance in
            the

            virtual machine scale set. The reference will be in the form:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile.healthProbe.id
          type:
            - string
          description: >-
            The ARM

            resource id in the form of

            /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
          optional: true
        - id: >-
            parameters.virtualMachineProfile.networkProfile.networkInterfaceConfigurations
          type:
            - array
          description: The list of network configurations.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile
          type:
            - object
          description: >-
            Specifies the boot diagnostic settings state. <br><br>Minimum
            api-version:

            2015-06-15.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics
          type:
            - object
          description: >-
            Boot

            Diagnostics is a debugging feature which allows you to view Console
            Output

            and Screenshot to diagnose VM status. <br><br> For Linux Virtual
            Machines,

            you can easily view the output of your console log. <br><br> For
            both

            Windows and Linux virtual machines, Azure also enables you to see a

            screenshot of the VM from the hypervisor.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled
          type:
            - boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri
          type:
            - string
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile
          type:
            - object
          description: >-
            Specifies a collection of settings for extensions installed on
            virtual

            machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile.extensions
          type:
            - array
          description: |-
            The virtual
            machine scale set child extension resources.
          optional: true
        - id: parameters.virtualMachineProfile.licenseType
          type:
            - string
          description: >-
            Specifies

            that the image or disk that is being used was licensed on-premises.
            This

            element is only used for images that contain the Windows Server
            operating

            system. <br><br> Possible values are: <br><br> Windows_Client
            <br><br>

            Windows_Server <br><br> If this element is included in a request for
            an

            update, the value must match the initial value. This value cannot be

            updated. <br><br> For more information, see [Azure Hybrid Use
            Benefit for

            Windows

            Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)

            <br><br> Minimum api-version: 2015-06-15
          optional: true
        - id: parameters.overprovision
          type:
            - boolean
          description: |-
            Specifies whether the Virtual
            Machine Scale Set should be overprovisioned.
          optional: true
        - id: parameters.singlePlacementGroup
          type:
            - boolean
          description: >-
            When true this limits the

            scale set to a single placement group, of max size 100 virtual
            machines.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: |-
            The identity of the virtual machine
            scale set, if configured.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: >-
            The type of identity used for the

            virtual machine scale set. Currently, the only supported type is

            'SystemAssigned', which implicitly creates an identity. Possible
            values

            include: 'SystemAssigned'
          optional: true
        - id: parameters.zones
          type:
            - array
          description: The virtual machine scale set zones.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdate(resourceGroupName, vmScaleSetName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#updateWithHttpOperationResponse'
    id: 'azure-arm-compute.VirtualMachineScaleSets#updateWithHttpOperationResponse'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      parameters, options)
    summary: Update a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.updateWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - object
          description: The scale set object.
        - id: parameters.sku
          type:
            - object
          description: The virtual machine scale set sku.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The sku name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: >-
            Specifies the tier of virtual machines

            in a scale set.<br /><br /> Possible Values:<br /><br />
            **Standard**<br

            /><br /> **Basic**
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: |-
            Specifies the number of virtual
            machines in the scale set.
          optional: true
        - id: parameters.plan
          type:
            - object
          description: |-
            The purchase plan when deploying a virtual
            machine scale set from VM Marketplace images.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: |-
            Specifies the product of the image
            from the marketplace. This is the same value as Offer under the
            imageReference element.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.upgradePolicy
          type:
            - object
          description: The upgrade policy.
          optional: true
        - id: parameters.upgradePolicy.mode
          type:
            - string
          description: >-
            Specifies the mode of an

            upgrade to virtual machines in the scale set.<br /><br /> Possible
            values

            are:<br /><br /> **Manual** - You  control the application of
            updates to

            virtual machines in the scale set. You do this by using the
            manualUpgrade

            action.<br /><br /> **Automatic** - All virtual machines in the
            scale set

            are  automatically updated at the same time. Possible values
            include:

            'Automatic', 'Manual', 'Rolling'
          optional: true
        - id: parameters.upgradePolicy.rollingUpgradePolicy
          type:
            - object
          description: |-
            The
            configuration parameters used while performing a rolling upgrade.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent
          type:
            - number
          description: >-
            The

            maximum percent of total virtual machine instances that will be
            upgraded

            simultaneously by the rolling upgrade in one batch. As this is a
            maximum,

            unhealthy instances in previous or future batches can cause the
            percentage

            of instances in a batch to decrease to ensure higher reliability.
            The

            default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of the total virtual machine instances in the
            scale

            set that can be simultaneously unhealthy, either as a result of
            being

            upgraded, or by being found in an unhealthy state by the virtual
            machine

            health checks before the rolling upgrade aborts. This constraint
            will be

            checked prior to starting any batch. The default value for this
            parameter is

            20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of upgraded virtual machine instances that
            can be

            found to be in an unhealthy state. This check will happen after each
            batch

            is upgraded. If this percentage is ever exceeded, the rolling update
            aborts.

            The default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches
          type:
            - string
          description: >-
            The

            wait time between completing the update for all virtual machines in
            one

            batch and starting the next batch. The time duration should be
            specified in

            ISO 8601 format. The default value is 0 seconds (PT0S).
          optional: true
        - id: parameters.upgradePolicy.automaticOSUpgrade
          type:
            - boolean
          description: >-
            Whether OS

            upgrades should automatically be applied to scale set instances in a
            rolling

            fashion when a newer version of the image becomes available.
          optional: true
        - id: parameters.virtualMachineProfile
          type:
            - object
          description: |-
            The virtual machine
            profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile
          type:
            - object
          description: |-
            The virtual
            machine scale set OS profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.customData
          type:
            - string
          description: |-
            A
            base-64 encoded string of custom data.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.windowsConfiguration
          type:
            - object
          description: |-
            The
            Windows Configuration of the OS profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent
          type:
            - boolean
          description: >-
            Indicates whether virtual machine agent should be provisioned on the
            virtual

            machine. <br><br> When this property is not specified in the request
            body,

            default behavior is to set it to true.  This will ensure that VM
            Agent is

            installed on the VM so that extensions can be added to the VM later.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: Indicates whether virtual machine is enabled for automatic updates.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.timeZone
          type:
            - string
          description: >-
            Specifies the time zone of the virtual machine. e.g. "Pacific
            Standard Time"
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent
          type:
            - array
          description: >-
            Specifies additional base-64 encoded XML formatted information that
            can be

            included in the Unattend.xml file, which is used by Windows Setup.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM
          type:
            - object
          description: >-
            Specifies the Windows Remote Management listeners. This enables
            remote

            Windows PowerShell.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners
          type:
            - array
          description: The list of Windows Remote Management listeners
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration
          type:
            - object
          description: |-
            The Linux
            Configuration of the OS profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication
          type:
            - boolean
          description: Specifies whether password authentication should be disabled.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh
          type:
            - object
          description: Specifies the ssh key configuration for a Linux OS.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys
          type:
            - array
          description: >-
            The list of SSH public keys used to authenticate with linux based
            VMs.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.secrets
          type:
            - array
          description: |-
            The List
            of certificates for addition to the VM.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set storage profile.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference
          type:
            - object
          description: |-
            The image
            reference.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.publisher
          type:
            - string
          description: The image publisher.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.offer
          type:
            - string
          description: >-
            Specifies the offer of the platform image or marketplace image used
            to

            create the virtual machine.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.sku
          type:
            - string
          description: |-
            The
            image SKU.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.version
          type:
            - string
          description: >-
            Specifies the version of the platform image or marketplace image
            used to

            create the virtual machine. The allowed formats are
            Major.Minor.Build or

            'latest'. Major, Minor, and Build are decimal numbers. Specify
            'latest' to

            use the latest version of an image available at deploy time. Even if
            you use

            'latest', the VM image will not automatically update after deploy
            time even

            if a new version becomes available.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.id
          type:
            - string
          description: |-
            Resource
            Id
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk
          type:
            - object
          description: |-
            The
            OS disk.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.caching
          type:
            - string
          description: |-
            The caching
            type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image
          type:
            - object
          description: >-
            The Source

            User Image VirtualHardDisk. This VirtualHardDisk will be copied
            before using

            it to attach to the Virtual Machine. If SourceImage is provided, the

            destination VirtualHardDisk should not exist.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image.uri
          type:
            - string
          description: |-
            Specifies
            the virtual hard disk's uri.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.vhdContainers
          type:
            - array
          description: |-
            The
            list of virtual hard disk container uris.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk
          type:
            - object
          description: |-
            The
            managed disk parameters.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType
          type:
            - string
          description: >-
            Specifies the storage account type for the managed disk. Possible
            values

            are: Standard_LRS or Premium_LRS. Possible values include:
            'Standard_LRS',

            'Premium_LRS'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.dataDisks
          type:
            - array
          description: The data disks.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set network profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.networkProfile.networkInterfaceConfigurations
          type:
            - array
          description: The list of network configurations.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set diagnostics profile.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics
          type:
            - object
          description: >-
            Boot

            Diagnostics is a debugging feature which allows you to view Console
            Output

            and Screenshot to diagnose VM status. <br><br> For Linux Virtual
            Machines,

            you can easily view the output of your console log. <br><br> For
            both

            Windows and Linux virtual machines, Azure also enables you to see a

            screenshot of the VM from the hypervisor.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled
          type:
            - boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri
          type:
            - string
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set extension profile.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile.extensions
          type:
            - array
          description: |-
            The virtual
            machine scale set child extension resources.
          optional: true
        - id: parameters.virtualMachineProfile.licenseType
          type:
            - string
          description: |-
            The license
            type, which is for bring your own license scenario.
          optional: true
        - id: parameters.overprovision
          type:
            - boolean
          description: |-
            Specifies whether the Virtual
            Machine Scale Set should be overprovisioned.
          optional: true
        - id: parameters.singlePlacementGroup
          type:
            - boolean
          description: >-
            When true this limits the

            scale set to a single placement group, of max size 100 virtual
            machines.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: |-
            The identity of the virtual machine
            scale set, if configured.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: >-
            The type of identity used for the

            virtual machine scale set. Currently, the only supported type is

            'SystemAssigned', which implicitly creates an identity. Possible
            values

            include: 'SystemAssigned'
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#update'
    id: 'azure-arm-compute.VirtualMachineScaleSets#update'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      update(resourceGroupName, vmScaleSetName, parameters, options,
      optionalCallback)
    summary: Update a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.update(resourceGroupName,
      vmScaleSetName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VirtualMachineScaleSet} - The deserialized result object.'
        value: '{VirtualMachineScaleSet} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - object
          description: The scale set object.
        - id: parameters.sku
          type:
            - object
          description: The virtual machine scale set sku.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The sku name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: >-
            Specifies the tier of virtual machines

            in a scale set.<br /><br /> Possible Values:<br /><br />
            **Standard**<br

            /><br /> **Basic**
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: |-
            Specifies the number of virtual
            machines in the scale set.
          optional: true
        - id: parameters.plan
          type:
            - object
          description: |-
            The purchase plan when deploying a virtual
            machine scale set from VM Marketplace images.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: |-
            Specifies the product of the image
            from the marketplace. This is the same value as Offer under the
            imageReference element.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.upgradePolicy
          type:
            - object
          description: The upgrade policy.
          optional: true
        - id: parameters.upgradePolicy.mode
          type:
            - string
          description: >-
            Specifies the mode of an

            upgrade to virtual machines in the scale set.<br /><br /> Possible
            values

            are:<br /><br /> **Manual** - You  control the application of
            updates to

            virtual machines in the scale set. You do this by using the
            manualUpgrade

            action.<br /><br /> **Automatic** - All virtual machines in the
            scale set

            are  automatically updated at the same time. Possible values
            include:

            'Automatic', 'Manual', 'Rolling'
          optional: true
        - id: parameters.upgradePolicy.rollingUpgradePolicy
          type:
            - object
          description: |-
            The
            configuration parameters used while performing a rolling upgrade.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent
          type:
            - number
          description: >-
            The

            maximum percent of total virtual machine instances that will be
            upgraded

            simultaneously by the rolling upgrade in one batch. As this is a
            maximum,

            unhealthy instances in previous or future batches can cause the
            percentage

            of instances in a batch to decrease to ensure higher reliability.
            The

            default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of the total virtual machine instances in the
            scale

            set that can be simultaneously unhealthy, either as a result of
            being

            upgraded, or by being found in an unhealthy state by the virtual
            machine

            health checks before the rolling upgrade aborts. This constraint
            will be

            checked prior to starting any batch. The default value for this
            parameter is

            20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of upgraded virtual machine instances that
            can be

            found to be in an unhealthy state. This check will happen after each
            batch

            is upgraded. If this percentage is ever exceeded, the rolling update
            aborts.

            The default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches
          type:
            - string
          description: >-
            The

            wait time between completing the update for all virtual machines in
            one

            batch and starting the next batch. The time duration should be
            specified in

            ISO 8601 format. The default value is 0 seconds (PT0S).
          optional: true
        - id: parameters.upgradePolicy.automaticOSUpgrade
          type:
            - boolean
          description: >-
            Whether OS

            upgrades should automatically be applied to scale set instances in a
            rolling

            fashion when a newer version of the image becomes available.
          optional: true
        - id: parameters.virtualMachineProfile
          type:
            - object
          description: |-
            The virtual machine
            profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile
          type:
            - object
          description: |-
            The virtual
            machine scale set OS profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.customData
          type:
            - string
          description: |-
            A
            base-64 encoded string of custom data.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.windowsConfiguration
          type:
            - object
          description: |-
            The
            Windows Configuration of the OS profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent
          type:
            - boolean
          description: >-
            Indicates whether virtual machine agent should be provisioned on the
            virtual

            machine. <br><br> When this property is not specified in the request
            body,

            default behavior is to set it to true.  This will ensure that VM
            Agent is

            installed on the VM so that extensions can be added to the VM later.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: Indicates whether virtual machine is enabled for automatic updates.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.timeZone
          type:
            - string
          description: >-
            Specifies the time zone of the virtual machine. e.g. "Pacific
            Standard Time"
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent
          type:
            - array
          description: >-
            Specifies additional base-64 encoded XML formatted information that
            can be

            included in the Unattend.xml file, which is used by Windows Setup.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM
          type:
            - object
          description: >-
            Specifies the Windows Remote Management listeners. This enables
            remote

            Windows PowerShell.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners
          type:
            - array
          description: The list of Windows Remote Management listeners
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration
          type:
            - object
          description: |-
            The Linux
            Configuration of the OS profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication
          type:
            - boolean
          description: Specifies whether password authentication should be disabled.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh
          type:
            - object
          description: Specifies the ssh key configuration for a Linux OS.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys
          type:
            - array
          description: >-
            The list of SSH public keys used to authenticate with linux based
            VMs.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.secrets
          type:
            - array
          description: |-
            The List
            of certificates for addition to the VM.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set storage profile.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference
          type:
            - object
          description: |-
            The image
            reference.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.publisher
          type:
            - string
          description: The image publisher.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.offer
          type:
            - string
          description: >-
            Specifies the offer of the platform image or marketplace image used
            to

            create the virtual machine.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.sku
          type:
            - string
          description: |-
            The
            image SKU.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.version
          type:
            - string
          description: >-
            Specifies the version of the platform image or marketplace image
            used to

            create the virtual machine. The allowed formats are
            Major.Minor.Build or

            'latest'. Major, Minor, and Build are decimal numbers. Specify
            'latest' to

            use the latest version of an image available at deploy time. Even if
            you use

            'latest', the VM image will not automatically update after deploy
            time even

            if a new version becomes available.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.id
          type:
            - string
          description: |-
            Resource
            Id
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk
          type:
            - object
          description: |-
            The
            OS disk.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.caching
          type:
            - string
          description: |-
            The caching
            type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image
          type:
            - object
          description: >-
            The Source

            User Image VirtualHardDisk. This VirtualHardDisk will be copied
            before using

            it to attach to the Virtual Machine. If SourceImage is provided, the

            destination VirtualHardDisk should not exist.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image.uri
          type:
            - string
          description: |-
            Specifies
            the virtual hard disk's uri.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.vhdContainers
          type:
            - array
          description: |-
            The
            list of virtual hard disk container uris.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk
          type:
            - object
          description: |-
            The
            managed disk parameters.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType
          type:
            - string
          description: >-
            Specifies the storage account type for the managed disk. Possible
            values

            are: Standard_LRS or Premium_LRS. Possible values include:
            'Standard_LRS',

            'Premium_LRS'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.dataDisks
          type:
            - array
          description: The data disks.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set network profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.networkProfile.networkInterfaceConfigurations
          type:
            - array
          description: The list of network configurations.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set diagnostics profile.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics
          type:
            - object
          description: >-
            Boot

            Diagnostics is a debugging feature which allows you to view Console
            Output

            and Screenshot to diagnose VM status. <br><br> For Linux Virtual
            Machines,

            you can easily view the output of your console log. <br><br> For
            both

            Windows and Linux virtual machines, Azure also enables you to see a

            screenshot of the VM from the hypervisor.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled
          type:
            - boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri
          type:
            - string
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set extension profile.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile.extensions
          type:
            - array
          description: |-
            The virtual
            machine scale set child extension resources.
          optional: true
        - id: parameters.virtualMachineProfile.licenseType
          type:
            - string
          description: |-
            The license
            type, which is for bring your own license scenario.
          optional: true
        - id: parameters.overprovision
          type:
            - boolean
          description: |-
            Specifies whether the Virtual
            Machine Scale Set should be overprovisioned.
          optional: true
        - id: parameters.singlePlacementGroup
          type:
            - boolean
          description: >-
            When true this limits the

            scale set to a single placement group, of max size 100 virtual
            machines.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: |-
            The identity of the virtual machine
            scale set, if configured.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: >-
            The type of identity used for the

            virtual machine scale set. Currently, the only supported type is

            'SystemAssigned', which implicitly creates an identity. Possible
            values

            include: 'SystemAssigned'
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function update(resourceGroupName, vmScaleSetName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#deleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#deleteMethodWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: Deletes a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.deleteMethodWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#deleteMethod'
    id: 'azure-arm-compute.VirtualMachineScaleSets#deleteMethod'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'deleteMethod(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: Deletes a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.deleteMethod(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteMethod(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#getWithHttpOperationResponse'
    id: 'azure-arm-compute.VirtualMachineScaleSets#getWithHttpOperationResponse'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'getWithHttpOperationResponse(resourceGroupName, vmScaleSetName, options)'
    summary: Display information about a virtual machine scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.getWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
        options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#get'
    id: 'azure-arm-compute.VirtualMachineScaleSets#get'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'get(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: Display information about a virtual machine scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.get(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VirtualMachineScaleSet} - The deserialized result object.'
        value: '{VirtualMachineScaleSet} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function get(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#deallocateWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#deallocateWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      deallocateWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.deallocateWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deallocateWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#deallocate'
    id: 'azure-arm-compute.VirtualMachineScaleSets#deallocate'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'deallocate(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.deallocate(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deallocate(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#deleteInstancesWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#deleteInstancesWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      deleteInstancesWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, instanceIds, options)
    summary: Deletes virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.deleteInstancesWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, instanceIds, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceIds
          type:
            - array
          description: The virtual machine scale set instance ids.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteInstancesWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, instanceIds, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#deleteInstances'
    id: 'azure-arm-compute.VirtualMachineScaleSets#deleteInstances'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      deleteInstances(resourceGroupName, vmScaleSetName, instanceIds, options,
      optionalCallback)
    summary: Deletes virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.deleteInstances(resourceGroupName,
      vmScaleSetName, instanceIds, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceIds
          type:
            - array
          description: The virtual machine scale set instance ids.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteInstances(resourceGroupName, vmScaleSetName, instanceIds,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#getInstanceViewWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#getInstanceViewWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      getInstanceViewWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    summary: Gets the status of a VM scale set instance.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.getInstanceViewWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSetInstanceView>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSetInstanceView>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getInstanceViewWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#getInstanceView'
    id: 'azure-arm-compute.VirtualMachineScaleSets#getInstanceView'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      getInstanceView(resourceGroupName, vmScaleSetName, options,
      optionalCallback)
    summary: Gets the status of a VM scale set instance.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.getInstanceView(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VirtualMachineScaleSetInstanceView} - The deserialized result object.'
        value: '{VirtualMachineScaleSetInstanceView} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetInstanceView} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetInstanceView} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getInstanceView(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#listWithHttpOperationResponse'
    id: 'azure-arm-compute.VirtualMachineScaleSets#listWithHttpOperationResponse'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listWithHttpOperationResponse(resourceGroupName, options)'
    summary: Gets a list of all VM scale sets under a resource group.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSetListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSetListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listWithHttpOperationResponse(resourceGroupName, options)'
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#list'
    id: 'azure-arm-compute.VirtualMachineScaleSets#list'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'list(resourceGroupName, options, optionalCallback)'
    summary: Gets a list of all VM scale sets under a resource group.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.list(resourceGroupName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VirtualMachineScaleSetListResult} - The deserialized result object.'
        value: '{VirtualMachineScaleSetListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function list(resourceGroupName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#listAllWithHttpOperationResponse'
    id: 'azure-arm-compute.VirtualMachineScaleSets#listAllWithHttpOperationResponse'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: listAllWithHttpOperationResponse(options)
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listAllWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSetListWithLinkResult>} -
          The deserialized result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSetListWithLinkResult>} -
          The deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listAllWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#listAll'
    id: 'azure-arm-compute.VirtualMachineScaleSets#listAll'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listAll(options, optionalCallback)'
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listAll(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {VirtualMachineScaleSetListWithLinkResult} - The deserialized result
          object.
        value: >-
          {VirtualMachineScaleSetListWithLinkResult} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listAll(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#listSkusWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#listSkusWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      listSkusWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listSkusWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSetListSkusResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSetListSkusResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listSkusWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#listSkus'
    id: 'azure-arm-compute.VirtualMachineScaleSets#listSkus'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listSkus(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listSkus(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {VirtualMachineScaleSetListSkusResult} - The deserialized result
          object.
        value: >-
          {VirtualMachineScaleSetListSkusResult} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listSkus(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#powerOffWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#powerOffWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      powerOffWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.powerOffWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function powerOffWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#powerOff'
    id: 'azure-arm-compute.VirtualMachineScaleSets#powerOff'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'powerOff(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.powerOff(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function powerOff(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#restartWithHttpOperationResponse'
    id: 'azure-arm-compute.VirtualMachineScaleSets#restartWithHttpOperationResponse'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      restartWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: Restarts one or more virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.restartWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restartWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#restart'
    id: 'azure-arm-compute.VirtualMachineScaleSets#restart'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'restart(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: Restarts one or more virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.restart(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function restart(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#startWithHttpOperationResponse'
    id: 'azure-arm-compute.VirtualMachineScaleSets#startWithHttpOperationResponse'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'startWithHttpOperationResponse(resourceGroupName, vmScaleSetName, options)'
    summary: Starts one or more virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.startWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function startWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#start'
    id: 'azure-arm-compute.VirtualMachineScaleSets#start'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'start(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: Starts one or more virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.start(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function start(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#updateInstancesWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#updateInstancesWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      updateInstancesWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, instanceIds, options)
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.updateInstancesWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, instanceIds, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceIds
          type:
            - array
          description: The virtual machine scale set instance ids.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateInstancesWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, instanceIds, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#updateInstances'
    id: 'azure-arm-compute.VirtualMachineScaleSets#updateInstances'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      updateInstances(resourceGroupName, vmScaleSetName, instanceIds, options,
      optionalCallback)
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.updateInstances(resourceGroupName,
      vmScaleSetName, instanceIds, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceIds
          type:
            - array
          description: The virtual machine scale set instance ids.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function updateInstances(resourceGroupName, vmScaleSetName, instanceIds,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#reimageWithHttpOperationResponse'
    id: 'azure-arm-compute.VirtualMachineScaleSets#reimageWithHttpOperationResponse'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      reimageWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.reimageWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function reimageWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#reimage'
    id: 'azure-arm-compute.VirtualMachineScaleSets#reimage'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'reimage(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.reimage(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function reimage(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#reimageAllWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#reimageAllWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      reimageAllWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.reimageAllWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function reimageAllWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#reimageAll'
    id: 'azure-arm-compute.VirtualMachineScaleSets#reimageAll'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'reimageAll(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.reimageAll(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function reimageAll(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginCreateOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginCreateOrUpdateWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, parameters, options)
    summary: Create or update a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - object
          description: The scale set object.
        - id: parameters.sku
          type:
            - object
          description: The virtual machine scale set sku.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The sku name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: >-
            Specifies the tier of virtual machines

            in a scale set.<br /><br /> Possible Values:<br /><br />
            **Standard**<br

            /><br /> **Basic**
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: |-
            Specifies the number of virtual
            machines in the scale set.
          optional: true
        - id: parameters.plan
          type:
            - object
          description: >-
            Specifies information about the

            marketplace image used to create the virtual machine. This element
            is only

            used for marketplace images. Before you can use a marketplace image
            from an

            API, you must enable the image for programmatic use.  In the Azure
            portal,

            find the marketplace image that you want to use and then click
            **Want to

            deploy programmatically, Get Started ->**. Enter any required
            information

            and then click **Save**.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: |-
            Specifies the product of the image
            from the marketplace. This is the same value as Offer under the
            imageReference element.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.upgradePolicy
          type:
            - object
          description: The upgrade policy.
          optional: true
        - id: parameters.upgradePolicy.mode
          type:
            - string
          description: >-
            Specifies the mode of an

            upgrade to virtual machines in the scale set.<br /><br /> Possible
            values

            are:<br /><br /> **Manual** - You  control the application of
            updates to

            virtual machines in the scale set. You do this by using the
            manualUpgrade

            action.<br /><br /> **Automatic** - All virtual machines in the
            scale set

            are  automatically updated at the same time. Possible values
            include:

            'Automatic', 'Manual', 'Rolling'
          optional: true
        - id: parameters.upgradePolicy.rollingUpgradePolicy
          type:
            - object
          description: |-
            The
            configuration parameters used while performing a rolling upgrade.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent
          type:
            - number
          description: >-
            The

            maximum percent of total virtual machine instances that will be
            upgraded

            simultaneously by the rolling upgrade in one batch. As this is a
            maximum,

            unhealthy instances in previous or future batches can cause the
            percentage

            of instances in a batch to decrease to ensure higher reliability.
            The

            default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of the total virtual machine instances in the
            scale

            set that can be simultaneously unhealthy, either as a result of
            being

            upgraded, or by being found in an unhealthy state by the virtual
            machine

            health checks before the rolling upgrade aborts. This constraint
            will be

            checked prior to starting any batch. The default value for this
            parameter is

            20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of upgraded virtual machine instances that
            can be

            found to be in an unhealthy state. This check will happen after each
            batch

            is upgraded. If this percentage is ever exceeded, the rolling update
            aborts.

            The default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches
          type:
            - string
          description: >-
            The

            wait time between completing the update for all virtual machines in
            one

            batch and starting the next batch. The time duration should be
            specified in

            ISO 8601 format. The default value is 0 seconds (PT0S).
          optional: true
        - id: parameters.upgradePolicy.automaticOSUpgrade
          type:
            - boolean
          description: >-
            Whether OS

            upgrades should automatically be applied to scale set instances in a
            rolling

            fashion when a newer version of the image becomes available.
          optional: true
        - id: parameters.virtualMachineProfile
          type:
            - object
          description: |-
            The virtual machine
            profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile
          type:
            - object
          description: |-
            Specifies the
            operating system settings for the virtual machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.computerNamePrefix
          type:
            - string
          description: >-
            Specifies

            the computer name prefix for all of the virtual machines in the
            scale set.

            Computer name prefixes must be 1 to 15 characters long.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.adminUsername
          type:
            - string
          description: >-
            Specifies the name of the administrator account. <br><br>
            **Windows-only

            restriction:** Cannot end in "." <br><br> **Disallowed values:**

            "administrator", "admin", "user", "user1", "test", "user2", "test1",

            "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2",
            "aspnet",

            "backup", "console", "david", "guest", "john", "owner", "root",
            "server",

            "sql", "support", "support_388945a0", "sys", "test2", "test3",
            "user4",

            "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br>

            **Max-length (Linux):** 64 characters <br><br> **Max-length
            (Windows):** 20

            characters  <br><br><li> For root access to the Linux VM, see [Using
            root

            privileges on Linux virtual machines in

            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>

            For a list of built-in system users on Linux that should not be used
            in this

            field, see [Selecting User Names for Linux on

            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.adminPassword
          type:
            - string
          description: >-
            Specifies the password of the administrator account. <br><br>

            **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length

            (Linux):** 6 characters <br><br> **Max-length (Windows):** 123
            characters

            <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity

            requirements:** 3 out of 4 conditions below need to be fulfilled
            <br> Has

            lower characters <br>Has upper characters <br> Has a digit <br> Has
            a

            special character (Regex match [\W_]) <br><br> **Disallowed
            values:**

            "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
            "pass@word1",

            "Password!", "Password1", "Password22", "iloveyou!" <br><br> For
            resetting

            the password, see [How to reset the Remote Desktop service or its
            login

            password in a Windows

            VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)

            <br><br> For resetting root password, see [Manage users, SSH, and
            check or

            repair disks on Azure Linux VMs using the VMAccess

            Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.customData
          type:
            - string
          description: >-
            Specifies a base-64 encoded string of custom data. The base-64
            encoded

            string is decoded to a binary array that is saved as a file on the
            Virtual

            Machine. The maximum length of the binary array is 65535 bytes.
            <br><br> For

            using cloud-init for your VM, see [Using cloud-init to customize a
            Linux VM

            during

            creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.windowsConfiguration
          type:
            - object
          description: |-
            Specifies
            Windows operating system settings on the virtual machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent
          type:
            - boolean
          description: >-
            Indicates whether virtual machine agent should be provisioned on the
            virtual

            machine. <br><br> When this property is not specified in the request
            body,

            default behavior is to set it to true.  This will ensure that VM
            Agent is

            installed on the VM so that extensions can be added to the VM later.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: Indicates whether virtual machine is enabled for automatic updates.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.timeZone
          type:
            - string
          description: >-
            Specifies the time zone of the virtual machine. e.g. "Pacific
            Standard Time"
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent
          type:
            - array
          description: >-
            Specifies additional base-64 encoded XML formatted information that
            can be

            included in the Unattend.xml file, which is used by Windows Setup.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM
          type:
            - object
          description: >-
            Specifies the Windows Remote Management listeners. This enables
            remote

            Windows PowerShell.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners
          type:
            - array
          description: The list of Windows Remote Management listeners
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration
          type:
            - object
          description: >-
            Specifies

            the Linux operating system settings on the virtual machine.
            <br><br>For a

            list of supported Linux distributions, see [Linux on Azure-Endorsed

            Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)

            <br><br> For running non-endorsed distributions, see [Information
            for

            Non-Endorsed

            Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication
          type:
            - boolean
          description: Specifies whether password authentication should be disabled.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh
          type:
            - object
          description: Specifies the ssh key configuration for a Linux OS.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys
          type:
            - array
          description: >-
            The list of SSH public keys used to authenticate with linux based
            VMs.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.secrets
          type:
            - array
          description: >-
            Specifies set of certificates that should be installed onto the
            virtual

            machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile
          type:
            - object
          description: |-
            Specifies
            the storage settings for the virtual machine disks.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference
          type:
            - object
          description: >-
            Specifies

            information about the image to use. You can specify information
            about

            platform images, marketplace images, or virtual machine images. This
            element

            is required when you want to use a platform image, marketplace
            image, or

            virtual machine image, but is not used in other creation operations.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.publisher
          type:
            - string
          description: The image publisher.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.offer
          type:
            - string
          description: >-
            Specifies the offer of the platform image or marketplace image used
            to

            create the virtual machine.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.sku
          type:
            - string
          description: |-
            The
            image SKU.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.version
          type:
            - string
          description: >-
            Specifies the version of the platform image or marketplace image
            used to

            create the virtual machine. The allowed formats are
            Major.Minor.Build or

            'latest'. Major, Minor, and Build are decimal numbers. Specify
            'latest' to

            use the latest version of an image available at deploy time. Even if
            you use

            'latest', the VM image will not automatically update after deploy
            time even

            if a new version becomes available.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.id
          type:
            - string
          description: |-
            Resource
            Id
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk
          type:
            - object
          description: >-
            Specifies information about the operating system disk used by the
            virtual

            machines in the scale set. <br><br> For more information about
            disks, see

            [About disks and VHDs for Azure virtual

            machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.name
          type:
            - string
          description: The disk name.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.caching
          type:
            - string
          description: >-
            Specifies

            the caching requirements. <br><br> Possible values are: <br><br>
            **None**

            <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default:
            **None for

            Standard storage. ReadOnly for Premium storage**. Possible values
            include:

            'None', 'ReadOnly', 'ReadWrite'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.createOption
          type:
            - string
          description: >-
            Specifies how the virtual machines in the scale set should be

            created.<br><br> The only allowed value is: **FromImage** \u2013
            This value

            is used when you are using an image to create the virtual machine.
            If you

            are using a platform image, you also use the imageReference element

            described above. If you are using a marketplace image, you  also use
            the

            plan element previously described. Possible values include:
            'FromImage',

            'Empty', 'Attach'
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.osType
          type:
            - string
          description: >-
            This

            property allows you to specify the type of the OS that is included
            in the

            disk if creating a VM from user-image or a specialized VHD. <br><br>

            Possible values are: <br><br> **Windows** <br><br> **Linux**.
            Possible

            values include: 'Windows', 'Linux'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image
          type:
            - object
          description: |-
            Specifies
            information about the unmanaged user image to base the scale set on.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image.uri
          type:
            - string
          description: |-
            Specifies
            the virtual hard disk's uri.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.vhdContainers
          type:
            - array
          description: >-
            Specifies the container urls that are used to store operating system
            disks

            for the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk
          type:
            - object
          description: |-
            The
            managed disk parameters.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType
          type:
            - string
          description: >-
            Specifies the storage account type for the managed disk. Possible
            values

            are: Standard_LRS or Premium_LRS. Possible values include:
            'Standard_LRS',

            'Premium_LRS'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.dataDisks
          type:
            - array
          description: >-
            Specifies the parameters that are used to add data disks to the
            virtual

            machines in the scale set. <br><br> For more information about
            disks, see

            [About disks and VHDs for Azure virtual

            machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile
          type:
            - object
          description: >-
            Specifies

            properties of the network interfaces of the virtual machines in the
            scale

            set.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile.healthProbe
          type:
            - object
          description: >-
            A reference to

            a load balancer probe used to determine the health of an instance in
            the

            virtual machine scale set. The reference will be in the form:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile.healthProbe.id
          type:
            - string
          description: >-
            The ARM

            resource id in the form of

            /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
          optional: true
        - id: >-
            parameters.virtualMachineProfile.networkProfile.networkInterfaceConfigurations
          type:
            - array
          description: The list of network configurations.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile
          type:
            - object
          description: >-
            Specifies the boot diagnostic settings state. <br><br>Minimum
            api-version:

            2015-06-15.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics
          type:
            - object
          description: >-
            Boot

            Diagnostics is a debugging feature which allows you to view Console
            Output

            and Screenshot to diagnose VM status. <br><br> For Linux Virtual
            Machines,

            you can easily view the output of your console log. <br><br> For
            both

            Windows and Linux virtual machines, Azure also enables you to see a

            screenshot of the VM from the hypervisor.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled
          type:
            - boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri
          type:
            - string
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile
          type:
            - object
          description: >-
            Specifies a collection of settings for extensions installed on
            virtual

            machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile.extensions
          type:
            - array
          description: |-
            The virtual
            machine scale set child extension resources.
          optional: true
        - id: parameters.virtualMachineProfile.licenseType
          type:
            - string
          description: >-
            Specifies

            that the image or disk that is being used was licensed on-premises.
            This

            element is only used for images that contain the Windows Server
            operating

            system. <br><br> Possible values are: <br><br> Windows_Client
            <br><br>

            Windows_Server <br><br> If this element is included in a request for
            an

            update, the value must match the initial value. This value cannot be

            updated. <br><br> For more information, see [Azure Hybrid Use
            Benefit for

            Windows

            Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)

            <br><br> Minimum api-version: 2015-06-15
          optional: true
        - id: parameters.overprovision
          type:
            - boolean
          description: |-
            Specifies whether the Virtual
            Machine Scale Set should be overprovisioned.
          optional: true
        - id: parameters.singlePlacementGroup
          type:
            - boolean
          description: >-
            When true this limits the

            scale set to a single placement group, of max size 100 virtual
            machines.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: |-
            The identity of the virtual machine
            scale set, if configured.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: >-
            The type of identity used for the

            virtual machine scale set. Currently, the only supported type is

            'SystemAssigned', which implicitly creates an identity. Possible
            values

            include: 'SystemAssigned'
          optional: true
        - id: parameters.zones
          type:
            - array
          description: The virtual machine scale set zones.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginCreateOrUpdate'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginCreateOrUpdate'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginCreateOrUpdate(resourceGroupName, vmScaleSetName, parameters,
      options, optionalCallback)
    summary: Create or update a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginCreateOrUpdate(resourceGroupName,
      vmScaleSetName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VirtualMachineScaleSet} - The deserialized result object.'
        value: '{VirtualMachineScaleSet} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - object
          description: The scale set object.
        - id: parameters.sku
          type:
            - object
          description: The virtual machine scale set sku.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The sku name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: >-
            Specifies the tier of virtual machines

            in a scale set.<br /><br /> Possible Values:<br /><br />
            **Standard**<br

            /><br /> **Basic**
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: |-
            Specifies the number of virtual
            machines in the scale set.
          optional: true
        - id: parameters.plan
          type:
            - object
          description: >-
            Specifies information about the

            marketplace image used to create the virtual machine. This element
            is only

            used for marketplace images. Before you can use a marketplace image
            from an

            API, you must enable the image for programmatic use.  In the Azure
            portal,

            find the marketplace image that you want to use and then click
            **Want to

            deploy programmatically, Get Started ->**. Enter any required
            information

            and then click **Save**.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: |-
            Specifies the product of the image
            from the marketplace. This is the same value as Offer under the
            imageReference element.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.upgradePolicy
          type:
            - object
          description: The upgrade policy.
          optional: true
        - id: parameters.upgradePolicy.mode
          type:
            - string
          description: >-
            Specifies the mode of an

            upgrade to virtual machines in the scale set.<br /><br /> Possible
            values

            are:<br /><br /> **Manual** - You  control the application of
            updates to

            virtual machines in the scale set. You do this by using the
            manualUpgrade

            action.<br /><br /> **Automatic** - All virtual machines in the
            scale set

            are  automatically updated at the same time. Possible values
            include:

            'Automatic', 'Manual', 'Rolling'
          optional: true
        - id: parameters.upgradePolicy.rollingUpgradePolicy
          type:
            - object
          description: |-
            The
            configuration parameters used while performing a rolling upgrade.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent
          type:
            - number
          description: >-
            The

            maximum percent of total virtual machine instances that will be
            upgraded

            simultaneously by the rolling upgrade in one batch. As this is a
            maximum,

            unhealthy instances in previous or future batches can cause the
            percentage

            of instances in a batch to decrease to ensure higher reliability.
            The

            default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of the total virtual machine instances in the
            scale

            set that can be simultaneously unhealthy, either as a result of
            being

            upgraded, or by being found in an unhealthy state by the virtual
            machine

            health checks before the rolling upgrade aborts. This constraint
            will be

            checked prior to starting any batch. The default value for this
            parameter is

            20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of upgraded virtual machine instances that
            can be

            found to be in an unhealthy state. This check will happen after each
            batch

            is upgraded. If this percentage is ever exceeded, the rolling update
            aborts.

            The default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches
          type:
            - string
          description: >-
            The

            wait time between completing the update for all virtual machines in
            one

            batch and starting the next batch. The time duration should be
            specified in

            ISO 8601 format. The default value is 0 seconds (PT0S).
          optional: true
        - id: parameters.upgradePolicy.automaticOSUpgrade
          type:
            - boolean
          description: >-
            Whether OS

            upgrades should automatically be applied to scale set instances in a
            rolling

            fashion when a newer version of the image becomes available.
          optional: true
        - id: parameters.virtualMachineProfile
          type:
            - object
          description: |-
            The virtual machine
            profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile
          type:
            - object
          description: |-
            Specifies the
            operating system settings for the virtual machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.computerNamePrefix
          type:
            - string
          description: >-
            Specifies

            the computer name prefix for all of the virtual machines in the
            scale set.

            Computer name prefixes must be 1 to 15 characters long.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.adminUsername
          type:
            - string
          description: >-
            Specifies the name of the administrator account. <br><br>
            **Windows-only

            restriction:** Cannot end in "." <br><br> **Disallowed values:**

            "administrator", "admin", "user", "user1", "test", "user2", "test1",

            "user3", "admin1", "1", "123", "a", "actuser", "adm", "admin2",
            "aspnet",

            "backup", "console", "david", "guest", "john", "owner", "root",
            "server",

            "sql", "support", "support_388945a0", "sys", "test2", "test3",
            "user4",

            "user5". <br><br> **Minimum-length (Linux):** 1  character <br><br>

            **Max-length (Linux):** 64 characters <br><br> **Max-length
            (Windows):** 20

            characters  <br><br><li> For root access to the Linux VM, see [Using
            root

            privileges on Linux virtual machines in

            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)<br><li>

            For a list of built-in system users on Linux that should not be used
            in this

            field, see [Selecting User Names for Linux on

            Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.adminPassword
          type:
            - string
          description: >-
            Specifies the password of the administrator account. <br><br>

            **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length

            (Linux):** 6 characters <br><br> **Max-length (Windows):** 123
            characters

            <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity

            requirements:** 3 out of 4 conditions below need to be fulfilled
            <br> Has

            lower characters <br>Has upper characters <br> Has a digit <br> Has
            a

            special character (Regex match [\W_]) <br><br> **Disallowed
            values:**

            "abc@123", "P@$$w0rd", "P@ssw0rd", "P@ssword123", "Pa$$word",
            "pass@word1",

            "Password!", "Password1", "Password22", "iloveyou!" <br><br> For
            resetting

            the password, see [How to reset the Remote Desktop service or its
            login

            password in a Windows

            VM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)

            <br><br> For resetting root password, see [Manage users, SSH, and
            check or

            repair disks on Azure Linux VMs using the VMAccess

            Extension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.customData
          type:
            - string
          description: >-
            Specifies a base-64 encoded string of custom data. The base-64
            encoded

            string is decoded to a binary array that is saved as a file on the
            Virtual

            Machine. The maximum length of the binary array is 65535 bytes.
            <br><br> For

            using cloud-init for your VM, see [Using cloud-init to customize a
            Linux VM

            during

            creation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.windowsConfiguration
          type:
            - object
          description: |-
            Specifies
            Windows operating system settings on the virtual machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent
          type:
            - boolean
          description: >-
            Indicates whether virtual machine agent should be provisioned on the
            virtual

            machine. <br><br> When this property is not specified in the request
            body,

            default behavior is to set it to true.  This will ensure that VM
            Agent is

            installed on the VM so that extensions can be added to the VM later.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: Indicates whether virtual machine is enabled for automatic updates.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.timeZone
          type:
            - string
          description: >-
            Specifies the time zone of the virtual machine. e.g. "Pacific
            Standard Time"
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent
          type:
            - array
          description: >-
            Specifies additional base-64 encoded XML formatted information that
            can be

            included in the Unattend.xml file, which is used by Windows Setup.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM
          type:
            - object
          description: >-
            Specifies the Windows Remote Management listeners. This enables
            remote

            Windows PowerShell.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners
          type:
            - array
          description: The list of Windows Remote Management listeners
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration
          type:
            - object
          description: >-
            Specifies

            the Linux operating system settings on the virtual machine.
            <br><br>For a

            list of supported Linux distributions, see [Linux on Azure-Endorsed

            Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)

            <br><br> For running non-endorsed distributions, see [Information
            for

            Non-Endorsed

            Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication
          type:
            - boolean
          description: Specifies whether password authentication should be disabled.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh
          type:
            - object
          description: Specifies the ssh key configuration for a Linux OS.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys
          type:
            - array
          description: >-
            The list of SSH public keys used to authenticate with linux based
            VMs.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.secrets
          type:
            - array
          description: >-
            Specifies set of certificates that should be installed onto the
            virtual

            machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile
          type:
            - object
          description: |-
            Specifies
            the storage settings for the virtual machine disks.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference
          type:
            - object
          description: >-
            Specifies

            information about the image to use. You can specify information
            about

            platform images, marketplace images, or virtual machine images. This
            element

            is required when you want to use a platform image, marketplace
            image, or

            virtual machine image, but is not used in other creation operations.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.publisher
          type:
            - string
          description: The image publisher.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.offer
          type:
            - string
          description: >-
            Specifies the offer of the platform image or marketplace image used
            to

            create the virtual machine.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.sku
          type:
            - string
          description: |-
            The
            image SKU.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.version
          type:
            - string
          description: >-
            Specifies the version of the platform image or marketplace image
            used to

            create the virtual machine. The allowed formats are
            Major.Minor.Build or

            'latest'. Major, Minor, and Build are decimal numbers. Specify
            'latest' to

            use the latest version of an image available at deploy time. Even if
            you use

            'latest', the VM image will not automatically update after deploy
            time even

            if a new version becomes available.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.id
          type:
            - string
          description: |-
            Resource
            Id
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk
          type:
            - object
          description: >-
            Specifies information about the operating system disk used by the
            virtual

            machines in the scale set. <br><br> For more information about
            disks, see

            [About disks and VHDs for Azure virtual

            machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.name
          type:
            - string
          description: The disk name.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.caching
          type:
            - string
          description: >-
            Specifies

            the caching requirements. <br><br> Possible values are: <br><br>
            **None**

            <br><br> **ReadOnly** <br><br> **ReadWrite** <br><br> Default:
            **None for

            Standard storage. ReadOnly for Premium storage**. Possible values
            include:

            'None', 'ReadOnly', 'ReadWrite'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.createOption
          type:
            - string
          description: >-
            Specifies how the virtual machines in the scale set should be

            created.<br><br> The only allowed value is: **FromImage** \u2013
            This value

            is used when you are using an image to create the virtual machine.
            If you

            are using a platform image, you also use the imageReference element

            described above. If you are using a marketplace image, you  also use
            the

            plan element previously described. Possible values include:
            'FromImage',

            'Empty', 'Attach'
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.osType
          type:
            - string
          description: >-
            This

            property allows you to specify the type of the OS that is included
            in the

            disk if creating a VM from user-image or a specialized VHD. <br><br>

            Possible values are: <br><br> **Windows** <br><br> **Linux**.
            Possible

            values include: 'Windows', 'Linux'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image
          type:
            - object
          description: |-
            Specifies
            information about the unmanaged user image to base the scale set on.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image.uri
          type:
            - string
          description: |-
            Specifies
            the virtual hard disk's uri.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.vhdContainers
          type:
            - array
          description: >-
            Specifies the container urls that are used to store operating system
            disks

            for the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk
          type:
            - object
          description: |-
            The
            managed disk parameters.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType
          type:
            - string
          description: >-
            Specifies the storage account type for the managed disk. Possible
            values

            are: Standard_LRS or Premium_LRS. Possible values include:
            'Standard_LRS',

            'Premium_LRS'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.dataDisks
          type:
            - array
          description: >-
            Specifies the parameters that are used to add data disks to the
            virtual

            machines in the scale set. <br><br> For more information about
            disks, see

            [About disks and VHDs for Azure virtual

            machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile
          type:
            - object
          description: >-
            Specifies

            properties of the network interfaces of the virtual machines in the
            scale

            set.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile.healthProbe
          type:
            - object
          description: >-
            A reference to

            a load balancer probe used to determine the health of an instance in
            the

            virtual machine scale set. The reference will be in the form:

            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile.healthProbe.id
          type:
            - string
          description: >-
            The ARM

            resource id in the form of

            /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
          optional: true
        - id: >-
            parameters.virtualMachineProfile.networkProfile.networkInterfaceConfigurations
          type:
            - array
          description: The list of network configurations.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile
          type:
            - object
          description: >-
            Specifies the boot diagnostic settings state. <br><br>Minimum
            api-version:

            2015-06-15.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics
          type:
            - object
          description: >-
            Boot

            Diagnostics is a debugging feature which allows you to view Console
            Output

            and Screenshot to diagnose VM status. <br><br> For Linux Virtual
            Machines,

            you can easily view the output of your console log. <br><br> For
            both

            Windows and Linux virtual machines, Azure also enables you to see a

            screenshot of the VM from the hypervisor.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled
          type:
            - boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri
          type:
            - string
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile
          type:
            - object
          description: >-
            Specifies a collection of settings for extensions installed on
            virtual

            machines in the scale set.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile.extensions
          type:
            - array
          description: |-
            The virtual
            machine scale set child extension resources.
          optional: true
        - id: parameters.virtualMachineProfile.licenseType
          type:
            - string
          description: >-
            Specifies

            that the image or disk that is being used was licensed on-premises.
            This

            element is only used for images that contain the Windows Server
            operating

            system. <br><br> Possible values are: <br><br> Windows_Client
            <br><br>

            Windows_Server <br><br> If this element is included in a request for
            an

            update, the value must match the initial value. This value cannot be

            updated. <br><br> For more information, see [Azure Hybrid Use
            Benefit for

            Windows

            Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)

            <br><br> Minimum api-version: 2015-06-15
          optional: true
        - id: parameters.overprovision
          type:
            - boolean
          description: |-
            Specifies whether the Virtual
            Machine Scale Set should be overprovisioned.
          optional: true
        - id: parameters.singlePlacementGroup
          type:
            - boolean
          description: >-
            When true this limits the

            scale set to a single placement group, of max size 100 virtual
            machines.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: |-
            The identity of the virtual machine
            scale set, if configured.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: >-
            The type of identity used for the

            virtual machine scale set. Currently, the only supported type is

            'SystemAssigned', which implicitly creates an identity. Possible
            values

            include: 'SystemAssigned'
          optional: true
        - id: parameters.zones
          type:
            - array
          description: The virtual machine scale set zones.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginCreateOrUpdate(resourceGroupName, vmScaleSetName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginUpdateWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginUpdateWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginUpdateWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      parameters, options)
    summary: Update a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginUpdateWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSet>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - object
          description: The scale set object.
        - id: parameters.sku
          type:
            - object
          description: The virtual machine scale set sku.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The sku name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: >-
            Specifies the tier of virtual machines

            in a scale set.<br /><br /> Possible Values:<br /><br />
            **Standard**<br

            /><br /> **Basic**
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: |-
            Specifies the number of virtual
            machines in the scale set.
          optional: true
        - id: parameters.plan
          type:
            - object
          description: |-
            The purchase plan when deploying a virtual
            machine scale set from VM Marketplace images.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: |-
            Specifies the product of the image
            from the marketplace. This is the same value as Offer under the
            imageReference element.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.upgradePolicy
          type:
            - object
          description: The upgrade policy.
          optional: true
        - id: parameters.upgradePolicy.mode
          type:
            - string
          description: >-
            Specifies the mode of an

            upgrade to virtual machines in the scale set.<br /><br /> Possible
            values

            are:<br /><br /> **Manual** - You  control the application of
            updates to

            virtual machines in the scale set. You do this by using the
            manualUpgrade

            action.<br /><br /> **Automatic** - All virtual machines in the
            scale set

            are  automatically updated at the same time. Possible values
            include:

            'Automatic', 'Manual', 'Rolling'
          optional: true
        - id: parameters.upgradePolicy.rollingUpgradePolicy
          type:
            - object
          description: |-
            The
            configuration parameters used while performing a rolling upgrade.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent
          type:
            - number
          description: >-
            The

            maximum percent of total virtual machine instances that will be
            upgraded

            simultaneously by the rolling upgrade in one batch. As this is a
            maximum,

            unhealthy instances in previous or future batches can cause the
            percentage

            of instances in a batch to decrease to ensure higher reliability.
            The

            default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of the total virtual machine instances in the
            scale

            set that can be simultaneously unhealthy, either as a result of
            being

            upgraded, or by being found in an unhealthy state by the virtual
            machine

            health checks before the rolling upgrade aborts. This constraint
            will be

            checked prior to starting any batch. The default value for this
            parameter is

            20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of upgraded virtual machine instances that
            can be

            found to be in an unhealthy state. This check will happen after each
            batch

            is upgraded. If this percentage is ever exceeded, the rolling update
            aborts.

            The default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches
          type:
            - string
          description: >-
            The

            wait time between completing the update for all virtual machines in
            one

            batch and starting the next batch. The time duration should be
            specified in

            ISO 8601 format. The default value is 0 seconds (PT0S).
          optional: true
        - id: parameters.upgradePolicy.automaticOSUpgrade
          type:
            - boolean
          description: >-
            Whether OS

            upgrades should automatically be applied to scale set instances in a
            rolling

            fashion when a newer version of the image becomes available.
          optional: true
        - id: parameters.virtualMachineProfile
          type:
            - object
          description: |-
            The virtual machine
            profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile
          type:
            - object
          description: |-
            The virtual
            machine scale set OS profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.customData
          type:
            - string
          description: |-
            A
            base-64 encoded string of custom data.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.windowsConfiguration
          type:
            - object
          description: |-
            The
            Windows Configuration of the OS profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent
          type:
            - boolean
          description: >-
            Indicates whether virtual machine agent should be provisioned on the
            virtual

            machine. <br><br> When this property is not specified in the request
            body,

            default behavior is to set it to true.  This will ensure that VM
            Agent is

            installed on the VM so that extensions can be added to the VM later.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: Indicates whether virtual machine is enabled for automatic updates.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.timeZone
          type:
            - string
          description: >-
            Specifies the time zone of the virtual machine. e.g. "Pacific
            Standard Time"
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent
          type:
            - array
          description: >-
            Specifies additional base-64 encoded XML formatted information that
            can be

            included in the Unattend.xml file, which is used by Windows Setup.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM
          type:
            - object
          description: >-
            Specifies the Windows Remote Management listeners. This enables
            remote

            Windows PowerShell.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners
          type:
            - array
          description: The list of Windows Remote Management listeners
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration
          type:
            - object
          description: |-
            The Linux
            Configuration of the OS profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication
          type:
            - boolean
          description: Specifies whether password authentication should be disabled.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh
          type:
            - object
          description: Specifies the ssh key configuration for a Linux OS.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys
          type:
            - array
          description: >-
            The list of SSH public keys used to authenticate with linux based
            VMs.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.secrets
          type:
            - array
          description: |-
            The List
            of certificates for addition to the VM.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set storage profile.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference
          type:
            - object
          description: |-
            The image
            reference.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.publisher
          type:
            - string
          description: The image publisher.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.offer
          type:
            - string
          description: >-
            Specifies the offer of the platform image or marketplace image used
            to

            create the virtual machine.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.sku
          type:
            - string
          description: |-
            The
            image SKU.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.version
          type:
            - string
          description: >-
            Specifies the version of the platform image or marketplace image
            used to

            create the virtual machine. The allowed formats are
            Major.Minor.Build or

            'latest'. Major, Minor, and Build are decimal numbers. Specify
            'latest' to

            use the latest version of an image available at deploy time. Even if
            you use

            'latest', the VM image will not automatically update after deploy
            time even

            if a new version becomes available.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.id
          type:
            - string
          description: |-
            Resource
            Id
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk
          type:
            - object
          description: |-
            The
            OS disk.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.caching
          type:
            - string
          description: |-
            The caching
            type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image
          type:
            - object
          description: >-
            The Source

            User Image VirtualHardDisk. This VirtualHardDisk will be copied
            before using

            it to attach to the Virtual Machine. If SourceImage is provided, the

            destination VirtualHardDisk should not exist.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image.uri
          type:
            - string
          description: |-
            Specifies
            the virtual hard disk's uri.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.vhdContainers
          type:
            - array
          description: |-
            The
            list of virtual hard disk container uris.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk
          type:
            - object
          description: |-
            The
            managed disk parameters.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType
          type:
            - string
          description: >-
            Specifies the storage account type for the managed disk. Possible
            values

            are: Standard_LRS or Premium_LRS. Possible values include:
            'Standard_LRS',

            'Premium_LRS'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.dataDisks
          type:
            - array
          description: The data disks.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set network profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.networkProfile.networkInterfaceConfigurations
          type:
            - array
          description: The list of network configurations.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set diagnostics profile.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics
          type:
            - object
          description: >-
            Boot

            Diagnostics is a debugging feature which allows you to view Console
            Output

            and Screenshot to diagnose VM status. <br><br> For Linux Virtual
            Machines,

            you can easily view the output of your console log. <br><br> For
            both

            Windows and Linux virtual machines, Azure also enables you to see a

            screenshot of the VM from the hypervisor.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled
          type:
            - boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri
          type:
            - string
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set extension profile.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile.extensions
          type:
            - array
          description: |-
            The virtual
            machine scale set child extension resources.
          optional: true
        - id: parameters.virtualMachineProfile.licenseType
          type:
            - string
          description: |-
            The license
            type, which is for bring your own license scenario.
          optional: true
        - id: parameters.overprovision
          type:
            - boolean
          description: |-
            Specifies whether the Virtual
            Machine Scale Set should be overprovisioned.
          optional: true
        - id: parameters.singlePlacementGroup
          type:
            - boolean
          description: >-
            When true this limits the

            scale set to a single placement group, of max size 100 virtual
            machines.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: |-
            The identity of the virtual machine
            scale set, if configured.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: >-
            The type of identity used for the

            virtual machine scale set. Currently, the only supported type is

            'SystemAssigned', which implicitly creates an identity. Possible
            values

            include: 'SystemAssigned'
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginUpdate'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginUpdate'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginUpdate(resourceGroupName, vmScaleSetName, parameters, options,
      optionalCallback)
    summary: Update a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginUpdate(resourceGroupName,
      vmScaleSetName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VirtualMachineScaleSet} - The deserialized result object.'
        value: '{VirtualMachineScaleSet} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSet} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: |-
            The name of the VM scale set to create or
            update.
        - id: parameters
          type:
            - object
          description: The scale set object.
        - id: parameters.sku
          type:
            - object
          description: The virtual machine scale set sku.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: The sku name.
          optional: true
        - id: parameters.sku.tier
          type:
            - string
          description: >-
            Specifies the tier of virtual machines

            in a scale set.<br /><br /> Possible Values:<br /><br />
            **Standard**<br

            /><br /> **Basic**
          optional: true
        - id: parameters.sku.capacity
          type:
            - number
          description: |-
            Specifies the number of virtual
            machines in the scale set.
          optional: true
        - id: parameters.plan
          type:
            - object
          description: |-
            The purchase plan when deploying a virtual
            machine scale set from VM Marketplace images.
          optional: true
        - id: parameters.plan.name
          type:
            - string
          description: The plan ID.
          optional: true
        - id: parameters.plan.publisher
          type:
            - string
          description: The publisher ID.
          optional: true
        - id: parameters.plan.product
          type:
            - string
          description: |-
            Specifies the product of the image
            from the marketplace. This is the same value as Offer under the
            imageReference element.
          optional: true
        - id: parameters.plan.promotionCode
          type:
            - string
          description: The promotion code.
          optional: true
        - id: parameters.upgradePolicy
          type:
            - object
          description: The upgrade policy.
          optional: true
        - id: parameters.upgradePolicy.mode
          type:
            - string
          description: >-
            Specifies the mode of an

            upgrade to virtual machines in the scale set.<br /><br /> Possible
            values

            are:<br /><br /> **Manual** - You  control the application of
            updates to

            virtual machines in the scale set. You do this by using the
            manualUpgrade

            action.<br /><br /> **Automatic** - All virtual machines in the
            scale set

            are  automatically updated at the same time. Possible values
            include:

            'Automatic', 'Manual', 'Rolling'
          optional: true
        - id: parameters.upgradePolicy.rollingUpgradePolicy
          type:
            - object
          description: |-
            The
            configuration parameters used while performing a rolling upgrade.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxBatchInstancePercent
          type:
            - number
          description: >-
            The

            maximum percent of total virtual machine instances that will be
            upgraded

            simultaneously by the rolling upgrade in one batch. As this is a
            maximum,

            unhealthy instances in previous or future batches can cause the
            percentage

            of instances in a batch to decrease to ensure higher reliability.
            The

            default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of the total virtual machine instances in the
            scale

            set that can be simultaneously unhealthy, either as a result of
            being

            upgraded, or by being found in an unhealthy state by the virtual
            machine

            health checks before the rolling upgrade aborts. This constraint
            will be

            checked prior to starting any batch. The default value for this
            parameter is

            20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.maxUnhealthyUpgradedInstancePercent
          type:
            - number
          description: >-
            The maximum percentage of upgraded virtual machine instances that
            can be

            found to be in an unhealthy state. This check will happen after each
            batch

            is upgraded. If this percentage is ever exceeded, the rolling update
            aborts.

            The default value for this parameter is 20%.
          optional: true
        - id: >-
            parameters.upgradePolicy.rollingUpgradePolicy.pauseTimeBetweenBatches
          type:
            - string
          description: >-
            The

            wait time between completing the update for all virtual machines in
            one

            batch and starting the next batch. The time duration should be
            specified in

            ISO 8601 format. The default value is 0 seconds (PT0S).
          optional: true
        - id: parameters.upgradePolicy.automaticOSUpgrade
          type:
            - boolean
          description: >-
            Whether OS

            upgrades should automatically be applied to scale set instances in a
            rolling

            fashion when a newer version of the image becomes available.
          optional: true
        - id: parameters.virtualMachineProfile
          type:
            - object
          description: |-
            The virtual machine
            profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile
          type:
            - object
          description: |-
            The virtual
            machine scale set OS profile.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.customData
          type:
            - string
          description: |-
            A
            base-64 encoded string of custom data.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.windowsConfiguration
          type:
            - object
          description: |-
            The
            Windows Configuration of the OS profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent
          type:
            - boolean
          description: >-
            Indicates whether virtual machine agent should be provisioned on the
            virtual

            machine. <br><br> When this property is not specified in the request
            body,

            default behavior is to set it to true.  This will ensure that VM
            Agent is

            installed on the VM so that extensions can be added to the VM later.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: Indicates whether virtual machine is enabled for automatic updates.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.timeZone
          type:
            - string
          description: >-
            Specifies the time zone of the virtual machine. e.g. "Pacific
            Standard Time"
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent
          type:
            - array
          description: >-
            Specifies additional base-64 encoded XML formatted information that
            can be

            included in the Unattend.xml file, which is used by Windows Setup.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM
          type:
            - object
          description: >-
            Specifies the Windows Remote Management listeners. This enables
            remote

            Windows PowerShell.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners
          type:
            - array
          description: The list of Windows Remote Management listeners
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration
          type:
            - object
          description: |-
            The Linux
            Configuration of the OS profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication
          type:
            - boolean
          description: Specifies whether password authentication should be disabled.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh
          type:
            - object
          description: Specifies the ssh key configuration for a Linux OS.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys
          type:
            - array
          description: >-
            The list of SSH public keys used to authenticate with linux based
            VMs.
          optional: true
        - id: parameters.virtualMachineProfile.osProfile.secrets
          type:
            - array
          description: |-
            The List
            of certificates for addition to the VM.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set storage profile.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference
          type:
            - object
          description: |-
            The image
            reference.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.publisher
          type:
            - string
          description: The image publisher.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.offer
          type:
            - string
          description: >-
            Specifies the offer of the platform image or marketplace image used
            to

            create the virtual machine.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.sku
          type:
            - string
          description: |-
            The
            image SKU.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.imageReference.version
          type:
            - string
          description: >-
            Specifies the version of the platform image or marketplace image
            used to

            create the virtual machine. The allowed formats are
            Major.Minor.Build or

            'latest'. Major, Minor, and Build are decimal numbers. Specify
            'latest' to

            use the latest version of an image available at deploy time. Even if
            you use

            'latest', the VM image will not automatically update after deploy
            time even

            if a new version becomes available.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.imageReference.id
          type:
            - string
          description: |-
            Resource
            Id
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk
          type:
            - object
          description: |-
            The
            OS disk.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.caching
          type:
            - string
          description: |-
            The caching
            type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image
          type:
            - object
          description: >-
            The Source

            User Image VirtualHardDisk. This VirtualHardDisk will be copied
            before using

            it to attach to the Virtual Machine. If SourceImage is provided, the

            destination VirtualHardDisk should not exist.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.image.uri
          type:
            - string
          description: |-
            Specifies
            the virtual hard disk's uri.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.vhdContainers
          type:
            - array
          description: |-
            The
            list of virtual hard disk container uris.
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk
          type:
            - object
          description: |-
            The
            managed disk parameters.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.storageProfile.osDisk.managedDisk.storageAccountType
          type:
            - string
          description: >-
            Specifies the storage account type for the managed disk. Possible
            values

            are: Standard_LRS or Premium_LRS. Possible values include:
            'Standard_LRS',

            'Premium_LRS'
          optional: true
        - id: parameters.virtualMachineProfile.storageProfile.dataDisks
          type:
            - array
          description: The data disks.
          optional: true
        - id: parameters.virtualMachineProfile.networkProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set network profile.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.networkProfile.networkInterfaceConfigurations
          type:
            - array
          description: The list of network configurations.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set diagnostics profile.
          optional: true
        - id: parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics
          type:
            - object
          description: >-
            Boot

            Diagnostics is a debugging feature which allows you to view Console
            Output

            and Screenshot to diagnose VM status. <br><br> For Linux Virtual
            Machines,

            you can easily view the output of your console log. <br><br> For
            both

            Windows and Linux virtual machines, Azure also enables you to see a

            screenshot of the VM from the hypervisor.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.enabled
          type:
            - boolean
          description: Whether boot diagnostics should be enabled on the Virtual Machine.
          optional: true
        - id: >-
            parameters.virtualMachineProfile.diagnosticsProfile.bootDiagnostics.storageUri
          type:
            - string
          description: |-
            Uri of the storage account to use for placing the console output and
            screenshot.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile
          type:
            - object
          description: |-
            The
            virtual machine scale set extension profile.
          optional: true
        - id: parameters.virtualMachineProfile.extensionProfile.extensions
          type:
            - array
          description: |-
            The virtual
            machine scale set child extension resources.
          optional: true
        - id: parameters.virtualMachineProfile.licenseType
          type:
            - string
          description: |-
            The license
            type, which is for bring your own license scenario.
          optional: true
        - id: parameters.overprovision
          type:
            - boolean
          description: |-
            Specifies whether the Virtual
            Machine Scale Set should be overprovisioned.
          optional: true
        - id: parameters.singlePlacementGroup
          type:
            - boolean
          description: >-
            When true this limits the

            scale set to a single placement group, of max size 100 virtual
            machines.
          optional: true
        - id: parameters.identity
          type:
            - object
          description: |-
            The identity of the virtual machine
            scale set, if configured.
          optional: true
        - id: parameters.identity.type
          type:
            - string
          description: >-
            The type of identity used for the

            virtual machine scale set. Currently, the only supported type is

            'SystemAssigned', which implicitly creates an identity. Possible
            values

            include: 'SystemAssigned'
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginUpdate(resourceGroupName, vmScaleSetName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    summary: Deletes a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginDeleteMethod'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginDeleteMethod'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginDeleteMethod(resourceGroupName, vmScaleSetName, options,
      optionalCallback)
    summary: Deletes a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeleteMethod(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteMethod(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginDeallocateWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginDeallocateWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginDeallocateWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeallocateWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeallocateWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginDeallocate'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginDeallocate'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginDeallocate(resourceGroupName, vmScaleSetName, options,
      optionalCallback)
    summary: >-
      Deallocates specific virtual machines in a VM scale set. Shuts down the

      virtual machines and releases the compute resources. You are not billed
      for

      the compute resources that this virtual machine scale set deallocates.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeallocate(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeallocate(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginDeleteInstancesWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginDeleteInstancesWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginDeleteInstancesWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, instanceIds, options)
    summary: Deletes virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstancesWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, instanceIds, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceIds
          type:
            - array
          description: The virtual machine scale set instance ids.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginDeleteInstancesWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, instanceIds, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginDeleteInstances'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginDeleteInstances'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginDeleteInstances(resourceGroupName, vmScaleSetName, instanceIds,
      options, optionalCallback)
    summary: Deletes virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginDeleteInstances(resourceGroupName,
      vmScaleSetName, instanceIds, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceIds
          type:
            - array
          description: The virtual machine scale set instance ids.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginDeleteInstances(resourceGroupName, vmScaleSetName,
        instanceIds, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginPowerOffWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginPowerOffWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginPowerOffWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginPowerOffWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginPowerOffWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginPowerOff'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginPowerOff'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginPowerOff(resourceGroupName, vmScaleSetName, options,
      optionalCallback)
    summary: >-
      Power off (stop) one or more virtual machines in a VM scale set. Note that

      resources are still attached and you are getting charged for the
      resources.

      Instead, use deallocate to release resources and avoid charges.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginPowerOff(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginPowerOff(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginRestartWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginRestartWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginRestartWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: Restarts one or more virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginRestartWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginRestartWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginRestart'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginRestart'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'beginRestart(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: Restarts one or more virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginRestart(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginRestart(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginStartWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginStartWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginStartWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: Starts one or more virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginStartWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginStartWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginStart'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginStart'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'beginStart(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: Starts one or more virtual machines in a VM scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginStart(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginStart(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginUpdateInstancesWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginUpdateInstancesWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginUpdateInstancesWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, instanceIds, options)
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstancesWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, instanceIds, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceIds
          type:
            - array
          description: The virtual machine scale set instance ids.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginUpdateInstancesWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, instanceIds, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginUpdateInstances'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginUpdateInstances'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginUpdateInstances(resourceGroupName, vmScaleSetName, instanceIds,
      options, optionalCallback)
    summary: >-
      Upgrades one or more virtual machines to the latest SKU set in the VM
      scale

      set model.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginUpdateInstances(resourceGroupName,
      vmScaleSetName, instanceIds, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: instanceIds
          type:
            - array
          description: The virtual machine scale set instance ids.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginUpdateInstances(resourceGroupName, vmScaleSetName,
        instanceIds, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginReimageWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginReimageWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginReimageWithHttpOperationResponse(resourceGroupName, vmScaleSetName,
      options)
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginReimageWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginReimageWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginReimage'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginReimage'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'beginReimage(resourceGroupName, vmScaleSetName, options, optionalCallback)'
    summary: >-
      Reimages (upgrade the operating system) one or more virtual machines in a
      VM

      scale set.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginReimage(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginReimage(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#beginReimageAllWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#beginReimageAllWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginReimageAllWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginReimageAllWithHttpOperationResponse(resourceGroupName,
      vmScaleSetName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<OperationStatusResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginReimageAllWithHttpOperationResponse(resourceGroupName,
        vmScaleSetName, options)
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#beginReimageAll'
    id: 'azure-arm-compute.VirtualMachineScaleSets#beginReimageAll'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: >-
      beginReimageAll(resourceGroupName, vmScaleSetName, options,
      optionalCallback)
    summary: >-
      Reimages all the disks ( including data disks ) in the virtual machines in
      a

      VM scale set. This operation is only supported for managed disks.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.beginReimageAll(resourceGroupName,
      vmScaleSetName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OperationStatusResponse} - The deserialized result object.'
        value: '{OperationStatusResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link OperationStatusResponse} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: vmScaleSetName
          type:
            - string
          description: The name of the VM scale set.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.instanceIds
          type:
            - array
          description: >-
            The virtual machine scale set instance

            ids. Omitting the virtual machine scale set instance ids will result
            in the

            operation being performed on all virtual machines in the virtual
            machine

            scale set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function beginReimageAll(resourceGroupName, vmScaleSetName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#listNextWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#listNextWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets a list of all VM scale sets under a resource group.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSetListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSetListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#listNext'
    id: 'azure-arm-compute.VirtualMachineScaleSets#listNext'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Gets a list of all VM scale sets under a resource group.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VirtualMachineScaleSetListResult} - The deserialized result object.'
        value: '{VirtualMachineScaleSetListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListResult} for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#listAllNextWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#listAllNextWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listAllNextWithHttpOperationResponse(nextPageLink, options)'
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listAllNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSetListWithLinkResult>} -
          The deserialized result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSetListWithLinkResult>} -
          The deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listAllNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#listAllNext'
    id: 'azure-arm-compute.VirtualMachineScaleSets#listAllNext'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listAllNext(nextPageLink, options, optionalCallback)'
    summary: >-
      Gets a list of all VM Scale Sets in the subscription, regardless of the

      associated resource group. Use nextLink property in the response to get
      the

      next page of VM Scale Sets. Do this till nextLink is not null to fetch all

      the VM Scale Sets.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listAllNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {VirtualMachineScaleSetListWithLinkResult} - The deserialized result
          object.
        value: >-
          {VirtualMachineScaleSetListWithLinkResult} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListWithLinkResult}
                               for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listAllNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-compute.VirtualMachineScaleSets#listSkusNextWithHttpOperationResponse
    id: >-
      azure-arm-compute.VirtualMachineScaleSets#listSkusNextWithHttpOperationResponse
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listSkusNextWithHttpOperationResponse(nextPageLink, options)'
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listSkusNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VirtualMachineScaleSetListSkusResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<VirtualMachineScaleSetListSkusResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listSkusNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-compute.VirtualMachineScaleSets#listSkusNext'
    id: 'azure-arm-compute.VirtualMachineScaleSets#listSkusNext'
    parent: azure-arm-compute.VirtualMachineScaleSets
    name: 'listSkusNext(nextPageLink, options, optionalCallback)'
    summary: |-
      Gets a list of SKUs available for your VM scale set, including the minimum
      and maximum VM instances allowed for each SKU.
    fullName: >-
      azure-arm-compute.VirtualMachineScaleSets.listSkusNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {VirtualMachineScaleSetListSkusResult} - The deserialized result
          object.
        value: >-
          {VirtualMachineScaleSetListSkusResult} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
        value: |-
          {Error} - The error object.

          {function} optionalCallback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object if an error did not occur.
                               See {@link VirtualMachineScaleSetListSkusResult} for
                               more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listSkusNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-arm-compute.ComputeManagementClient
    name: ComputeManagementClient
    fullName: azure-arm-compute.ComputeManagementClient
    isExternal: false

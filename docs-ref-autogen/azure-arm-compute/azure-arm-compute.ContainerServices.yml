### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-compute.ContainerServices
    id: azure-arm-compute.ContainerServices
    name: ContainerServices
    summary: |-
      ContainerServices
      __NOTE__: An instance of this class is automatically created for an
      instance of the ComputeManagementClient.
      Initializes a new instance of the ContainerServices class.
    fullName: azure-arm-compute.ContainerServices
    type: Class
    children:
      - 'azure-arm-compute.ContainerServices.#ctor'
      - 'azure-arm-compute.ContainerServices#client'
      - 'azure-arm-compute.ContainerServices#list'
      - 'azure-arm-compute.ContainerServices#createOrUpdate'
      - 'azure-arm-compute.ContainerServices#get'
      - 'azure-arm-compute.ContainerServices#deleteMethod'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod'
      - 'azure-arm-compute.ContainerServices#listNext'
      - 'azure-arm-compute.ContainerServices#listByResourceGroupNext'
  - id: 'azure-arm-compute.ContainerServices.#ctor'
    uid: 'azure-arm-compute.ContainerServices.#ctor'
    parent: azure-arm-compute.ContainerServices
    name: ContainerServices(client)
    fullName: azure-arm-compute.ContainerServices.ContainerServices(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-compute.ComputeManagementClient
          description: Reference to the service client.
      content: new ContainerServices(client)
  - uid: 'azure-arm-compute.ContainerServices#client'
    id: 'azure-arm-compute.ContainerServices#client'
    parent: azure-arm-compute.ContainerServices
    name: client
    summary: ''
    fullName: azure-arm-compute.ContainerServices.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-compute.ContainerServices#list'
    id: 'azure-arm-compute.ContainerServices#list'
    parent: azure-arm-compute.ContainerServices
    name: 'list(options, callback)'
    summary: >-
      Gets a list of container services in the specified subscription.


      Gets a list of container services in the specified subscription. The

      operation returns properties of each container service including state,

      orchestrator, number of masters and agents, and FQDNs of masters and
      agents.
    fullName: 'azure-arm-compute.ContainerServices.list(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ContainerServiceListResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function list(options, callback)'
    children:
      - 'azure-arm-compute.ContainerServices#list~client'
      - 'azure-arm-compute.ContainerServices#list~callback'
      - 'azure-arm-compute.ContainerServices#list~options'
      - 'azure-arm-compute.ContainerServices#list~apiVersion'
      - 'azure-arm-compute.ContainerServices#list~baseUrl'
      - 'azure-arm-compute.ContainerServices#list~requestUrl'
      - 'azure-arm-compute.ContainerServices#list~requestUrl'
      - 'azure-arm-compute.ContainerServices#list~queryParameters'
      - 'azure-arm-compute.ContainerServices#list~requestUrl'
      - 'azure-arm-compute.ContainerServices#list~httpRequest'
      - 'azure-arm-compute.ContainerServices#list~headerName'
  - uid: 'azure-arm-compute.ContainerServices#createOrUpdate'
    id: 'azure-arm-compute.ContainerServices#createOrUpdate'
    parent: azure-arm-compute.ContainerServices
    name: >-
      createOrUpdate(resourceGroupName, containerServiceName, parameters,
      options, callback)
    summary: |-
      Creates or updates a container service.

      Creates or updates a container service with the specified configuration of
      orchestrator, masters, and agents.
    fullName: >-
      azure-arm-compute.ContainerServices.createOrUpdate(resourceGroupName,
      containerServiceName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: parameters.orchestratorProfile
          type:
            - object
          description: |-
            Properties of the
            orchestrator.
          optional: true
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: >-
            The

            orchestrator to use to manage container service cluster resources.
            Valid

            values are Swarm, DCOS, and Custom. Possible values include:
            'Swarm',

            'DCOS', 'Custom', 'Kubernetes'
        - id: parameters.customProfile
          type:
            - object
          description: Properties for custom clusters.
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: |-
            The name of the custom
            orchestrator to use.
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: |-
            Properties for cluster
            service principals.
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: |-
            The ID for the
            service principal.
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: |-
            The secret
            password associated with the service principal.
        - id: parameters.masterProfile
          type:
            - object
          description: Properties of master agents.
        - id: parameters.masterProfile.count
          type:
            - number
          description: >-
            Number of masters (VMs) in

            the container service cluster. Allowed values are 1, 3, and 5. The
            default

            value is 1.
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: |-
            DNS prefix to be used to
            create the FQDN for master.
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
        - id: parameters.windowsProfile
          type:
            - object
          description: Properties of Windows VMs.
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Windows VMs.
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: |-
            The administrator
            password to use for Windows VMs.
        - id: parameters.linuxProfile
          type:
            - object
          description: Properties of Linux VMs.
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Linux VMs.
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: |-
            The ssh key configuration for
            Linux VMs.
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: |-
            the list of SSH public
            keys used to authenticate with Linux-based VMs.
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: |-
            Properties of the diagnostic
            agent.
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: |-
            Profile for the
            container service VM diagnostic agent.
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: |-
            Whether
            the VM diagnostic agent is provisioned on the VM.
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ContainerService> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdate(resourceGroupName, containerServiceName,
        parameters, options, callback)
    children:
      - 'azure-arm-compute.ContainerServices#createOrUpdate~client'
      - 'azure-arm-compute.ContainerServices#createOrUpdate~callback'
      - 'azure-arm-compute.ContainerServices#createOrUpdate~options'
  - uid: 'azure-arm-compute.ContainerServices#get'
    id: 'azure-arm-compute.ContainerServices#get'
    parent: azure-arm-compute.ContainerServices
    name: 'get(resourceGroupName, containerServiceName, options, callback)'
    summary: |-
      Gets the properties of the specified container service.

      Gets the properties of the specified container service in the specified
      subscription and resource group. The operation returns the properties
      including state, orchestrator, number of masters and agents, and FQDNs of
      masters and agents.
    fullName: >-
      azure-arm-compute.ContainerServices.get(resourceGroupName,
      containerServiceName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ContainerService> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function get(resourceGroupName, containerServiceName, options, callback)'
    children:
      - 'azure-arm-compute.ContainerServices#get~client'
      - 'azure-arm-compute.ContainerServices#get~callback'
      - 'azure-arm-compute.ContainerServices#get~options'
      - 'azure-arm-compute.ContainerServices#get~apiVersion'
      - 'azure-arm-compute.ContainerServices#get~baseUrl'
      - 'azure-arm-compute.ContainerServices#get~requestUrl'
      - 'azure-arm-compute.ContainerServices#get~requestUrl'
      - 'azure-arm-compute.ContainerServices#get~requestUrl'
      - 'azure-arm-compute.ContainerServices#get~requestUrl'
      - 'azure-arm-compute.ContainerServices#get~queryParameters'
      - 'azure-arm-compute.ContainerServices#get~requestUrl'
      - 'azure-arm-compute.ContainerServices#get~httpRequest'
      - 'azure-arm-compute.ContainerServices#get~headerName'
  - uid: 'azure-arm-compute.ContainerServices#deleteMethod'
    id: 'azure-arm-compute.ContainerServices#deleteMethod'
    parent: azure-arm-compute.ContainerServices
    name: 'deleteMethod(resourceGroupName, containerServiceName, options, callback)'
    summary: >-
      Deletes the specified container service.


      Deletes the specified container service in the specified subscription and

      resource group. The operation does not delete other resources created as

      part of creating a container service, including storage accounts, VMs, and

      availability sets. All the other resources created with the container

      service are part of the same resource group and can be deleted
      individually.
    fullName: >-
      azure-arm-compute.ContainerServices.deleteMethod(resourceGroupName,
      containerServiceName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function deleteMethod(resourceGroupName, containerServiceName, options,
        callback)
    children:
      - 'azure-arm-compute.ContainerServices#deleteMethod~client'
      - 'azure-arm-compute.ContainerServices#deleteMethod~callback'
      - 'azure-arm-compute.ContainerServices#deleteMethod~options'
  - uid: 'azure-arm-compute.ContainerServices#listByResourceGroup'
    id: 'azure-arm-compute.ContainerServices#listByResourceGroup'
    parent: azure-arm-compute.ContainerServices
    name: 'listByResourceGroup(resourceGroupName, options, callback)'
    summary: >-
      Gets a list of container services in the specified resource group.


      Gets a list of container services in the specified subscription and
      resource

      group. The operation returns properties of each container service
      including

      state, orchestrator, number of masters and agents, and FQDNs of masters
      and

      agents.
    fullName: >-
      azure-arm-compute.ContainerServices.listByResourceGroup(resourceGroupName,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ContainerServiceListResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listByResourceGroup(resourceGroupName, options, callback)'
    children:
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~client'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~callback'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~options'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~apiVersion'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~baseUrl'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~requestUrl'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~requestUrl'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~requestUrl'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~queryParameters'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~requestUrl'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~httpRequest'
      - 'azure-arm-compute.ContainerServices#listByResourceGroup~headerName'
  - uid: 'azure-arm-compute.ContainerServices#beginCreateOrUpdate'
    id: 'azure-arm-compute.ContainerServices#beginCreateOrUpdate'
    parent: azure-arm-compute.ContainerServices
    name: >-
      beginCreateOrUpdate(resourceGroupName, containerServiceName, parameters,
      options, callback)
    summary: |-
      Creates or updates a container service.

      Creates or updates a container service with the specified configuration of
      orchestrator, masters, and agents.
    fullName: >-
      azure-arm-compute.ContainerServices.beginCreateOrUpdate(resourceGroupName,
      containerServiceName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: parameters
          type:
            - object
          description: |-
            Parameters supplied to the Create or Update a
            Container Service operation.
        - id: parameters.orchestratorProfile
          type:
            - object
          description: |-
            Properties of the
            orchestrator.
          optional: true
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: >-
            The

            orchestrator to use to manage container service cluster resources.
            Valid

            values are Swarm, DCOS, and Custom. Possible values include:
            'Swarm',

            'DCOS', 'Custom', 'Kubernetes'
        - id: parameters.customProfile
          type:
            - object
          description: Properties for custom clusters.
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: |-
            The name of the custom
            orchestrator to use.
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: |-
            Properties for cluster
            service principals.
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: |-
            The ID for the
            service principal.
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: |-
            The secret
            password associated with the service principal.
        - id: parameters.masterProfile
          type:
            - object
          description: Properties of master agents.
        - id: parameters.masterProfile.count
          type:
            - number
          description: >-
            Number of masters (VMs) in

            the container service cluster. Allowed values are 1, 3, and 5. The
            default

            value is 1.
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: |-
            DNS prefix to be used to
            create the FQDN for master.
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
        - id: parameters.windowsProfile
          type:
            - object
          description: Properties of Windows VMs.
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Windows VMs.
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: |-
            The administrator
            password to use for Windows VMs.
        - id: parameters.linuxProfile
          type:
            - object
          description: Properties of Linux VMs.
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: |-
            The administrator
            username to use for Linux VMs.
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: |-
            The ssh key configuration for
            Linux VMs.
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: |-
            the list of SSH public
            keys used to authenticate with Linux-based VMs.
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: |-
            Properties of the diagnostic
            agent.
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: |-
            Profile for the
            container service VM diagnostic agent.
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: |-
            Whether
            the VM diagnostic agent is provisioned on the VM.
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ContainerService> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function beginCreateOrUpdate(resourceGroupName, containerServiceName,
        parameters, options, callback)
    children:
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~client'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~callback'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~options'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~apiVersion'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~baseUrl'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~queryParameters'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~httpRequest'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~headerName'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestContent'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestModel'
      - >-
        azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestModelMapper
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestModel'
      - 'azure-arm-compute.ContainerServices#beginCreateOrUpdate~requestContent'
      - >-
        azure-arm-compute.ContainerServices#beginCreateOrUpdate~serializationError
  - uid: 'azure-arm-compute.ContainerServices#beginDeleteMethod'
    id: 'azure-arm-compute.ContainerServices#beginDeleteMethod'
    parent: azure-arm-compute.ContainerServices
    name: >-
      beginDeleteMethod(resourceGroupName, containerServiceName, options,
      callback)
    summary: >-
      Deletes the specified container service.


      Deletes the specified container service in the specified subscription and

      resource group. The operation does not delete other resources created as

      part of creating a container service, including storage accounts, VMs, and

      availability sets. All the other resources created with the container

      service are part of the same resource group and can be deleted
      individually.
    fullName: >-
      azure-arm-compute.ContainerServices.beginDeleteMethod(resourceGroupName,
      containerServiceName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: |-
            The name of the container service in
            the specified subscription and resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function beginDeleteMethod(resourceGroupName, containerServiceName,
        options, callback)
    children:
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~client'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~callback'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~options'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~apiVersion'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~baseUrl'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~queryParameters'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~requestUrl'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~httpRequest'
      - 'azure-arm-compute.ContainerServices#beginDeleteMethod~headerName'
  - uid: 'azure-arm-compute.ContainerServices#listNext'
    id: 'azure-arm-compute.ContainerServices#listNext'
    parent: azure-arm-compute.ContainerServices
    name: 'listNext(nextPageLink, options, callback)'
    summary: >-
      Gets a list of container services in the specified subscription.


      Gets a list of container services in the specified subscription. The

      operation returns properties of each container service including state,

      orchestrator, number of masters and agents, and FQDNs of masters and
      agents.
    fullName: >-
      azure-arm-compute.ContainerServices.listNext(nextPageLink, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ContainerServiceListResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-compute.ContainerServices#listNext~client'
      - 'azure-arm-compute.ContainerServices#listNext~callback'
      - 'azure-arm-compute.ContainerServices#listNext~options'
      - 'azure-arm-compute.ContainerServices#listNext~requestUrl'
      - 'azure-arm-compute.ContainerServices#listNext~requestUrl'
      - 'azure-arm-compute.ContainerServices#listNext~httpRequest'
      - 'azure-arm-compute.ContainerServices#listNext~headerName'
  - uid: 'azure-arm-compute.ContainerServices#listByResourceGroupNext'
    id: 'azure-arm-compute.ContainerServices#listByResourceGroupNext'
    parent: azure-arm-compute.ContainerServices
    name: 'listByResourceGroupNext(nextPageLink, options, callback)'
    summary: >-
      Gets a list of container services in the specified resource group.


      Gets a list of container services in the specified subscription and
      resource

      group. The operation returns properties of each container service
      including

      state, orchestrator, number of masters and agents, and FQDNs of masters
      and

      agents.
    fullName: >-
      azure-arm-compute.ContainerServices.listByResourceGroupNext(nextPageLink,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ContainerServiceListResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listByResourceGroupNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-compute.ContainerServices#listByResourceGroupNext~client'
      - 'azure-arm-compute.ContainerServices#listByResourceGroupNext~callback'
      - 'azure-arm-compute.ContainerServices#listByResourceGroupNext~options'
      - 'azure-arm-compute.ContainerServices#listByResourceGroupNext~requestUrl'
      - 'azure-arm-compute.ContainerServices#listByResourceGroupNext~requestUrl'
      - 'azure-arm-compute.ContainerServices#listByResourceGroupNext~httpRequest'
      - 'azure-arm-compute.ContainerServices#listByResourceGroupNext~headerName'
references:
  - uid: azure-arm-compute.ComputeManagementClient
    name: ComputeManagementClient
    fullName: azure-arm-compute.ComputeManagementClient
    isExternal: false
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true

### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-website.ServerFarms
    id: azure-arm-website.ServerFarms
    name: ServerFarms
    summary: |-
      ServerFarms
      __NOTE__: An instance of this class is automatically created for an
      instance of the WebSiteManagementClient.
      Initializes a new instance of the ServerFarms class.
    fullName: azure-arm-website.ServerFarms
    type: Class
    children:
      - 'azure-arm-website.ServerFarms.#ctor'
      - 'azure-arm-website.ServerFarms#client'
      - 'azure-arm-website.ServerFarms#getServerFarms'
      - 'azure-arm-website.ServerFarms#getServerFarm'
      - 'azure-arm-website.ServerFarms#createOrUpdateServerFarm'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm'
      - 'azure-arm-website.ServerFarms#deleteServerFarm'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet'
      - 'azure-arm-website.ServerFarms#getRouteForVnet'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute'
      - 'azure-arm-website.ServerFarms#updateVnetRoute'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway'
      - 'azure-arm-website.ServerFarms#getServerFarmSites'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext'
  - id: 'azure-arm-website.ServerFarms.#ctor'
    uid: 'azure-arm-website.ServerFarms.#ctor'
    parent: azure-arm-website.ServerFarms
    name: ServerFarms(client)
    fullName: azure-arm-website.ServerFarms.ServerFarms(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-website.WebSiteManagementClient
          description: Reference to the service client.
      content: new ServerFarms(client)
  - uid: 'azure-arm-website.ServerFarms#client'
    id: 'azure-arm-website.ServerFarms#client'
    parent: azure-arm-website.ServerFarms
    name: client
    summary: ''
    fullName: azure-arm-website.ServerFarms.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-website.ServerFarms#getServerFarms'
    id: 'azure-arm-website.ServerFarms#getServerFarms'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarms(resourceGroupName, options, callback)'
    summary: |-
      Gets collection of App Service Plans in a resource group for a
      given subscription.
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarms(resourceGroupName, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ServerFarmCollection> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getServerFarms(resourceGroupName, options, callback)'
    children:
      - 'azure-arm-website.ServerFarms#getServerFarms~client'
      - 'azure-arm-website.ServerFarms#getServerFarms~callback'
      - 'azure-arm-website.ServerFarms#getServerFarms~options'
      - 'azure-arm-website.ServerFarms#getServerFarms~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarms~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarms~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarms~regex'
      - 'azure-arm-website.ServerFarms#getServerFarms~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarms~queryParameters'
      - 'azure-arm-website.ServerFarms#getServerFarms~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarms~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarms~headerName'
  - uid: 'azure-arm-website.ServerFarms#getServerFarm'
    id: 'azure-arm-website.ServerFarms#getServerFarm'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarm(resourceGroupName, name, options, callback)'
    summary: Gets specified App Service Plan in a resource group
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarm(resourceGroupName, name,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ServerFarmWithRichSku> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getServerFarm(resourceGroupName, name, options, callback)'
    children:
      - 'azure-arm-website.ServerFarms#getServerFarm~client'
      - 'azure-arm-website.ServerFarms#getServerFarm~callback'
      - 'azure-arm-website.ServerFarms#getServerFarm~options'
      - 'azure-arm-website.ServerFarms#getServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarm~regex'
      - 'azure-arm-website.ServerFarms#getServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarm~queryParameters'
      - 'azure-arm-website.ServerFarms#getServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarm~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarm~headerName'
  - uid: 'azure-arm-website.ServerFarms#createOrUpdateServerFarm'
    id: 'azure-arm-website.ServerFarms#createOrUpdateServerFarm'
    parent: azure-arm-website.ServerFarms
    name: >-
      createOrUpdateServerFarm(resourceGroupName, name, serverFarmEnvelope,
      options, callback)
    summary: Creates or updates an App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.createOrUpdateServerFarm(resourceGroupName,
      name, serverFarmEnvelope, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: serverFarmEnvelope
          type:
            - object
          description: Details of App Service Plan
        - id: serverFarmEnvelope.serverFarmWithRichSkuName
          type:
            - string
          description: |-
            Name for the
            App Service Plan
          optional: true
        - id: serverFarmEnvelope.workerTierName
          type:
            - string
          description: |-
            Target worker tier
            assigned to the App Service Plan
          optional: true
        - id: serverFarmEnvelope.adminSiteName
          type:
            - string
          description: |-
            App Service Plan
            administration site
          optional: true
        - id: serverFarmEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: >-
            Specification for the hosting environment (App Service Environment)
            to use

            for the App Service Plan
          optional: true
        - id: serverFarmEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource
            id of the hostingEnvironment (App Service Environment)
          optional: true
        - id: serverFarmEnvelope.hostingEnvironmentProfile.name
          type:
            - string
          description: |-
            Name of
            the hostingEnvironment (App Service Environment) (read only)
          optional: true
        - id: serverFarmEnvelope.hostingEnvironmentProfile.type
          type:
            - string
          description: >-
            Resource type of the hostingEnvironment (App Service Environment)
            (read

            only)
          optional: true
        - id: serverFarmEnvelope.maximumNumberOfWorkers
          type:
            - number
          description: |-
            Maximum number
            of instances that can be assigned to this App Service Plan
          optional: true
        - id: serverFarmEnvelope.perSiteScaling
          type:
            - boolean
          description: |-
            If True apps assigned
            to this App Service Plan can be scaled independently
            If False apps assigned to this App Service Plan will scale to
            all instances of the plan
          optional: true
        - id: serverFarmEnvelope.reserved
          type:
            - boolean
          description: |-
            Enables creation of a Linux
            App Service Plan
          optional: true
        - id: serverFarmEnvelope.sku
          type:
            - object
          description: ''
          optional: true
        - id: serverFarmEnvelope.sku.name
          type:
            - string
          description: Name of the resource sku
          optional: true
        - id: serverFarmEnvelope.sku.tier
          type:
            - string
          description: |-
            Service Tier of the resource
            sku
          optional: true
        - id: serverFarmEnvelope.sku.size
          type:
            - string
          description: |-
            Size specifier of the
            resource sku
          optional: true
        - id: serverFarmEnvelope.sku.family
          type:
            - string
          description: |-
            Family code of the resource
            sku
          optional: true
        - id: serverFarmEnvelope.sku.capacity
          type:
            - number
          description: |-
            Current number of
            instances assigned to the resource
          optional: true
        - id: serverFarmEnvelope.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: serverFarmEnvelope.name
          type:
            - string
          description: Resource Name
          optional: true
        - id: serverFarmEnvelope.kind
          type:
            - string
          description: Kind of resource
          optional: true
        - id: serverFarmEnvelope.location
          type:
            - string
          description: Resource Location
        - id: serverFarmEnvelope.type
          type:
            - string
          description: Resource type
          optional: true
        - id: serverFarmEnvelope.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.allowPendingState
          type:
            - boolean
          description: |-
            OBSOLETE: If true, allow
            pending state for App Service Plan
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ServerFarmWithRichSku> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdateServerFarm(resourceGroupName, name,
        serverFarmEnvelope, options, callback)
    children:
      - 'azure-arm-website.ServerFarms#createOrUpdateServerFarm~client'
      - 'azure-arm-website.ServerFarms#createOrUpdateServerFarm~callback'
      - 'azure-arm-website.ServerFarms#createOrUpdateServerFarm~options'
  - uid: 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm'
    id: 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm'
    parent: azure-arm-website.ServerFarms
    name: >-
      beginCreateOrUpdateServerFarm(resourceGroupName, name, serverFarmEnvelope,
      options, callback)
    summary: Creates or updates an App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.beginCreateOrUpdateServerFarm(resourceGroupName,
      name, serverFarmEnvelope, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: serverFarmEnvelope
          type:
            - object
          description: Details of App Service Plan
        - id: serverFarmEnvelope.serverFarmWithRichSkuName
          type:
            - string
          description: |-
            Name for the
            App Service Plan
          optional: true
        - id: serverFarmEnvelope.workerTierName
          type:
            - string
          description: |-
            Target worker tier
            assigned to the App Service Plan
          optional: true
        - id: serverFarmEnvelope.adminSiteName
          type:
            - string
          description: |-
            App Service Plan
            administration site
          optional: true
        - id: serverFarmEnvelope.hostingEnvironmentProfile
          type:
            - object
          description: >-
            Specification for the hosting environment (App Service Environment)
            to use

            for the App Service Plan
          optional: true
        - id: serverFarmEnvelope.hostingEnvironmentProfile.id
          type:
            - string
          description: |-
            Resource
            id of the hostingEnvironment (App Service Environment)
          optional: true
        - id: serverFarmEnvelope.hostingEnvironmentProfile.name
          type:
            - string
          description: |-
            Name of
            the hostingEnvironment (App Service Environment) (read only)
          optional: true
        - id: serverFarmEnvelope.hostingEnvironmentProfile.type
          type:
            - string
          description: >-
            Resource type of the hostingEnvironment (App Service Environment)
            (read

            only)
          optional: true
        - id: serverFarmEnvelope.maximumNumberOfWorkers
          type:
            - number
          description: |-
            Maximum number
            of instances that can be assigned to this App Service Plan
          optional: true
        - id: serverFarmEnvelope.perSiteScaling
          type:
            - boolean
          description: |-
            If True apps assigned
            to this App Service Plan can be scaled independently
            If False apps assigned to this App Service Plan will scale to
            all instances of the plan
          optional: true
        - id: serverFarmEnvelope.reserved
          type:
            - boolean
          description: |-
            Enables creation of a Linux
            App Service Plan
          optional: true
        - id: serverFarmEnvelope.sku
          type:
            - object
          description: ''
          optional: true
        - id: serverFarmEnvelope.sku.name
          type:
            - string
          description: Name of the resource sku
          optional: true
        - id: serverFarmEnvelope.sku.tier
          type:
            - string
          description: |-
            Service Tier of the resource
            sku
          optional: true
        - id: serverFarmEnvelope.sku.size
          type:
            - string
          description: |-
            Size specifier of the
            resource sku
          optional: true
        - id: serverFarmEnvelope.sku.family
          type:
            - string
          description: |-
            Family code of the resource
            sku
          optional: true
        - id: serverFarmEnvelope.sku.capacity
          type:
            - number
          description: |-
            Current number of
            instances assigned to the resource
          optional: true
        - id: serverFarmEnvelope.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: serverFarmEnvelope.name
          type:
            - string
          description: Resource Name
          optional: true
        - id: serverFarmEnvelope.kind
          type:
            - string
          description: Kind of resource
          optional: true
        - id: serverFarmEnvelope.location
          type:
            - string
          description: Resource Location
        - id: serverFarmEnvelope.type
          type:
            - string
          description: Resource type
          optional: true
        - id: serverFarmEnvelope.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.allowPendingState
          type:
            - boolean
          description: |-
            OBSOLETE: If true, allow
            pending state for App Service Plan
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ServerFarmWithRichSku> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function beginCreateOrUpdateServerFarm(resourceGroupName, name,
        serverFarmEnvelope, options, callback)
    children:
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~client'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~callback'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~options'
      - >-
        azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~allowPendingState
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~regex'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestUrl'
      - >-
        azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~queryParameters
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~httpRequest'
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~headerName'
      - >-
        azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestContent
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestModel'
      - >-
        azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestModelMapper
      - 'azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestModel'
      - >-
        azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~requestContent
      - >-
        azure-arm-website.ServerFarms#beginCreateOrUpdateServerFarm~serializationError
  - uid: 'azure-arm-website.ServerFarms#deleteServerFarm'
    id: 'azure-arm-website.ServerFarms#deleteServerFarm'
    parent: azure-arm-website.ServerFarms
    name: 'deleteServerFarm(resourceGroupName, name, options, callback)'
    summary: Deletes a App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.deleteServerFarm(resourceGroupName, name,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function deleteServerFarm(resourceGroupName, name, options, callback)'
    children:
      - 'azure-arm-website.ServerFarms#deleteServerFarm~client'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~callback'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~options'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~regex'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~queryParameters'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~httpRequest'
      - 'azure-arm-website.ServerFarms#deleteServerFarm~headerName'
  - uid: 'azure-arm-website.ServerFarms#getServerFarmMetrics'
    id: 'azure-arm-website.ServerFarms#getServerFarmMetrics'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarmMetrics(resourceGroupName, name, options, callback)'
    summary: Queries for App Serice Plan metrics
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmMetrics(resourceGroupName,
      name, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.details
          type:
            - boolean
          description: |-
            If true, metrics are broken down per App
            Service Plan instance
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Return only usages/metrics specified in

            the filter. Filter conforms to odata syntax. Example:
            $filter=(name.value

            eq 'Metric1' or name.value eq 'Metric2') and startTime eq

            '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and
            timeGrain

            eq duration'[Hour|Minute|Day]'.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ResourceMetricCollection> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getServerFarmMetrics(resourceGroupName, name, options,
        callback)
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~client'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~options'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~details'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~filter'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~regex'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~queryParameters'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarmMetrics~headerName'
  - uid: 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions'
    id: 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarmMetricDefintions(resourceGroupName, name, options, callback)'
    summary: List of metrics that can be queried for an App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmMetricDefintions(resourceGroupName,
      name, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:MetricDefinitionCollection> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getServerFarmMetricDefintions(resourceGroupName, name, options,
        callback)
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~client'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~options'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~regex'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~requestUrl'
      - >-
        azure-arm-website.ServerFarms#getServerFarmMetricDefintions~queryParameters
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintions~headerName'
  - uid: 'azure-arm-website.ServerFarms#getVnetsForServerFarm'
    id: 'azure-arm-website.ServerFarms#getVnetsForServerFarm'
    parent: azure-arm-website.ServerFarms
    name: 'getVnetsForServerFarm(resourceGroupName, name, options, callback)'
    summary: Gets list of vnets associated with App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.getVnetsForServerFarm(resourceGroupName,
      name, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {array} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getVnetsForServerFarm(resourceGroupName, name, options,
        callback)
    children:
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~client'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~callback'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~options'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~regex'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~queryParameters'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~httpRequest'
      - 'azure-arm-website.ServerFarms#getVnetsForServerFarm~headerName'
  - uid: 'azure-arm-website.ServerFarms#getVnetFromServerFarm'
    id: 'azure-arm-website.ServerFarms#getVnetFromServerFarm'
    parent: azure-arm-website.ServerFarms
    name: >-
      getVnetFromServerFarm(resourceGroupName, name, vnetName, options,
      callback)
    summary: Gets a vnet associated with an App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.getVnetFromServerFarm(resourceGroupName,
      name, vnetName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: vnetName
          type:
            - string
          description: Name of virtual network
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:VnetInfo> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getVnetFromServerFarm(resourceGroupName, name, vnetName,
        options, callback)
    children:
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~client'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~callback'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~options'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~regex'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~queryParameters'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~httpRequest'
      - 'azure-arm-website.ServerFarms#getVnetFromServerFarm~headerName'
  - uid: 'azure-arm-website.ServerFarms#getRoutesForVnet'
    id: 'azure-arm-website.ServerFarms#getRoutesForVnet'
    parent: azure-arm-website.ServerFarms
    name: 'getRoutesForVnet(resourceGroupName, name, vnetName, options, callback)'
    summary: |-
      Gets a list of all routes associated with a vnet, in an app
      service plan
    fullName: >-
      azure-arm-website.ServerFarms.getRoutesForVnet(resourceGroupName, name,
      vnetName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: vnetName
          type:
            - string
          description: Name of virtual network
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {array} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getRoutesForVnet(resourceGroupName, name, vnetName, options,
        callback)
    children:
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~client'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~callback'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~options'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~regex'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~queryParameters'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~httpRequest'
      - 'azure-arm-website.ServerFarms#getRoutesForVnet~headerName'
  - uid: 'azure-arm-website.ServerFarms#getRouteForVnet'
    id: 'azure-arm-website.ServerFarms#getRouteForVnet'
    parent: azure-arm-website.ServerFarms
    name: >-
      getRouteForVnet(resourceGroupName, name, vnetName, routeName, options,
      callback)
    summary: |-
      Gets a specific route associated with a vnet, in an app service
      plan
    fullName: >-
      azure-arm-website.ServerFarms.getRouteForVnet(resourceGroupName, name,
      vnetName, routeName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: vnetName
          type:
            - string
          description: Name of virtual network
        - id: routeName
          type:
            - string
          description: Name of the virtual network route
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {array} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getRouteForVnet(resourceGroupName, name, vnetName, routeName,
        options, callback)
    children:
      - 'azure-arm-website.ServerFarms#getRouteForVnet~client'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~callback'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~options'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~regex'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~queryParameters'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~requestUrl'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~httpRequest'
      - 'azure-arm-website.ServerFarms#getRouteForVnet~headerName'
  - uid: 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute'
    id: 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute'
    parent: azure-arm-website.ServerFarms
    name: >-
      createOrUpdateVnetRoute(resourceGroupName, name, vnetName, routeName,
      route, options, callback)
    summary: |-
      Creates a new route or updates an existing route for a vnet in an
      app service plan.
    fullName: >-
      azure-arm-website.ServerFarms.createOrUpdateVnetRoute(resourceGroupName,
      name, vnetName, routeName, route, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: vnetName
          type:
            - string
          description: Name of virtual network
        - id: routeName
          type:
            - string
          description: Name of the virtual network route
        - id: route
          type:
            - object
          description: The route object
        - id: route.vnetRouteName
          type:
            - string
          description: |-
            The name of this route. This is only
            returned by the server and does not need to be set by the client.
          optional: true
        - id: route.startAddress
          type:
            - string
          description: >-
            The starting address for this route.

            This may also include a CIDR notation, in which case the end address
            must

            not be specified.
          optional: true
        - id: route.endAddress
          type:
            - string
          description: >-
            The ending address for this route. If

            the start address is specified in CIDR notation, this must be
            omitted.
          optional: true
        - id: route.routeType
          type:
            - string
          description: >-
            The type of route this is:

            DEFAULT - By default, every web app has routes to the local

            address ranges specified by RFC1918

            INHERITED - Routes inherited from the real Virtual Network

            routes

            STATIC - Static route set on the web app only


            These values will be used for syncing a Web App's routes with

            those from a Virtual Network. This operation will clear all DEFAULT
            and

            INHERITED routes and replace them

            with new INHERITED routes.
          optional: true
        - id: route.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: route.name
          type:
            - string
          description: Resource Name
          optional: true
        - id: route.kind
          type:
            - string
          description: Kind of resource
          optional: true
        - id: route.location
          type:
            - string
          description: Resource Location
        - id: route.type
          type:
            - string
          description: Resource type
          optional: true
        - id: route.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:VnetRoute> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdateVnetRoute(resourceGroupName, name, vnetName,
        routeName, route, options, callback)
    children:
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~client'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~callback'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~options'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~regex'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~queryParameters'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~httpRequest'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~headerName'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestContent'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestModel'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestModelMapper'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestModel'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~requestContent'
      - 'azure-arm-website.ServerFarms#createOrUpdateVnetRoute~serializationError'
  - uid: 'azure-arm-website.ServerFarms#deleteVnetRoute'
    id: 'azure-arm-website.ServerFarms#deleteVnetRoute'
    parent: azure-arm-website.ServerFarms
    name: >-
      deleteVnetRoute(resourceGroupName, name, vnetName, routeName, options,
      callback)
    summary: Deletes an existing route for a vnet in an app service plan.
    fullName: >-
      azure-arm-website.ServerFarms.deleteVnetRoute(resourceGroupName, name,
      vnetName, routeName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: vnetName
          type:
            - string
          description: Name of virtual network
        - id: routeName
          type:
            - string
          description: Name of the virtual network route
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function deleteVnetRoute(resourceGroupName, name, vnetName, routeName,
        options, callback)
    children:
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~client'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~callback'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~options'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~regex'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~queryParameters'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~httpRequest'
      - 'azure-arm-website.ServerFarms#deleteVnetRoute~headerName'
  - uid: 'azure-arm-website.ServerFarms#updateVnetRoute'
    id: 'azure-arm-website.ServerFarms#updateVnetRoute'
    parent: azure-arm-website.ServerFarms
    name: >-
      updateVnetRoute(resourceGroupName, name, vnetName, routeName, route,
      options, callback)
    summary: |-
      Creates a new route or updates an existing route for a vnet in an
      app service plan.
    fullName: >-
      azure-arm-website.ServerFarms.updateVnetRoute(resourceGroupName, name,
      vnetName, routeName, route, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: vnetName
          type:
            - string
          description: Name of virtual network
        - id: routeName
          type:
            - string
          description: Name of the virtual network route
        - id: route
          type:
            - object
          description: The route object
        - id: route.vnetRouteName
          type:
            - string
          description: |-
            The name of this route. This is only
            returned by the server and does not need to be set by the client.
          optional: true
        - id: route.startAddress
          type:
            - string
          description: >-
            The starting address for this route.

            This may also include a CIDR notation, in which case the end address
            must

            not be specified.
          optional: true
        - id: route.endAddress
          type:
            - string
          description: >-
            The ending address for this route. If

            the start address is specified in CIDR notation, this must be
            omitted.
          optional: true
        - id: route.routeType
          type:
            - string
          description: >-
            The type of route this is:

            DEFAULT - By default, every web app has routes to the local

            address ranges specified by RFC1918

            INHERITED - Routes inherited from the real Virtual Network

            routes

            STATIC - Static route set on the web app only


            These values will be used for syncing a Web App's routes with

            those from a Virtual Network. This operation will clear all DEFAULT
            and

            INHERITED routes and replace them

            with new INHERITED routes.
          optional: true
        - id: route.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: route.name
          type:
            - string
          description: Resource Name
          optional: true
        - id: route.kind
          type:
            - string
          description: Kind of resource
          optional: true
        - id: route.location
          type:
            - string
          description: Resource Location
        - id: route.type
          type:
            - string
          description: Resource type
          optional: true
        - id: route.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:VnetRoute> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function updateVnetRoute(resourceGroupName, name, vnetName, routeName,
        route, options, callback)
    children:
      - 'azure-arm-website.ServerFarms#updateVnetRoute~client'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~callback'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~options'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~regex'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~queryParameters'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestUrl'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~httpRequest'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~headerName'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestContent'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestModel'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestModelMapper'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestModel'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~requestContent'
      - 'azure-arm-website.ServerFarms#updateVnetRoute~serializationError'
  - uid: 'azure-arm-website.ServerFarms#getServerFarmVnetGateway'
    id: 'azure-arm-website.ServerFarms#getServerFarmVnetGateway'
    parent: azure-arm-website.ServerFarms
    name: >-
      getServerFarmVnetGateway(resourceGroupName, name, vnetName, gatewayName,
      options, callback)
    summary: Gets the vnet gateway.
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmVnetGateway(resourceGroupName,
      name, vnetName, gatewayName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of the App Service Plan
        - id: vnetName
          type:
            - string
          description: Name of the virtual network
        - id: gatewayName
          type:
            - string
          description: |-
            Name of the gateway. Only the 'primary' gateway
            is supported.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:VnetGateway> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getServerFarmVnetGateway(resourceGroupName, name, vnetName,
        gatewayName, options, callback)
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~client'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~options'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~regex'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~queryParameters'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarmVnetGateway~headerName'
  - uid: 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway'
    id: 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway'
    parent: azure-arm-website.ServerFarms
    name: >-
      updateServerFarmVnetGateway(resourceGroupName, name, vnetName,
      gatewayName, connectionEnvelope, options, callback)
    summary: Updates the vnet gateway
    fullName: >-
      azure-arm-website.ServerFarms.updateServerFarmVnetGateway(resourceGroupName,
      name, vnetName, gatewayName, connectionEnvelope, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The resource group
        - id: name
          type:
            - string
          description: The name of the App Service Plan
        - id: vnetName
          type:
            - string
          description: The name of the virtual network
        - id: gatewayName
          type:
            - string
          description: |-
            The name of the gateway. Only 'primary' is
            supported.
        - id: connectionEnvelope
          type:
            - object
          description: The gateway entity.
        - id: connectionEnvelope.vnetName
          type:
            - string
          description: The VNET name.
          optional: true
        - id: connectionEnvelope.vpnPackageUri
          type:
            - string
          description: |-
            The URI where the Vpn
            package can be downloaded
          optional: true
        - id: connectionEnvelope.id
          type:
            - string
          description: Resource Id
          optional: true
        - id: connectionEnvelope.name
          type:
            - string
          description: Resource Name
          optional: true
        - id: connectionEnvelope.kind
          type:
            - string
          description: Kind of resource
          optional: true
        - id: connectionEnvelope.location
          type:
            - string
          description: Resource Location
        - id: connectionEnvelope.type
          type:
            - string
          description: Resource type
          optional: true
        - id: connectionEnvelope.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:VnetGateway> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function updateServerFarmVnetGateway(resourceGroupName, name, vnetName,
        gatewayName, connectionEnvelope, options, callback)
    children:
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~client'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~callback'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~options'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~regex'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestUrl'
      - >-
        azure-arm-website.ServerFarms#updateServerFarmVnetGateway~queryParameters
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestUrl'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~httpRequest'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~headerName'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestContent'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestModel'
      - >-
        azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestModelMapper
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestModel'
      - 'azure-arm-website.ServerFarms#updateServerFarmVnetGateway~requestContent'
      - >-
        azure-arm-website.ServerFarms#updateServerFarmVnetGateway~serializationError
  - uid: 'azure-arm-website.ServerFarms#getServerFarmSites'
    id: 'azure-arm-website.ServerFarms#getServerFarmSites'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarmSites(resourceGroupName, name, options, callback)'
    summary: Gets list of Apps associated with an App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmSites(resourceGroupName, name,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.skipToken
          type:
            - string
          description: >-
            Skip to of web apps in a list. If

            specified, the resulting list will contain web apps starting from

            (including) the skipToken. Else, the resulting list contains web
            apps from

            the start of the list
          optional: true
        - id: options.filter
          type:
            - string
          description: |-
            Supported filter: $filter=state eq
            running. Returns only web apps that are currently running
          optional: true
        - id: options.top
          type:
            - string
          description: |-
            List page size. If specified, results are
            paged.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SiteCollection> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getServerFarmSites(resourceGroupName, name, options, callback)'
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmSites~client'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~options'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~skipToken'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~filter'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~top'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~regex'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~queryParameters'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarmSites~headerName'
  - uid: 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm'
    id: 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm'
    parent: azure-arm-website.ServerFarms
    name: >-
      rebootWorkerForServerFarm(resourceGroupName, name, workerName, options,
      callback)
    summary: |-
      Submit a reboot request for a worker machine in the specified
      server farm
    fullName: >-
      azure-arm-website.ServerFarms.rebootWorkerForServerFarm(resourceGroupName,
      name, workerName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of server farm
        - id: workerName
          type:
            - string
          description: 'Name of worker machine, typically starts with RD'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function rebootWorkerForServerFarm(resourceGroupName, name, workerName,
        options, callback)
    children:
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~client'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~callback'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~options'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~regex'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~queryParameters'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~httpRequest'
      - 'azure-arm-website.ServerFarms#rebootWorkerForServerFarm~headerName'
  - uid: 'azure-arm-website.ServerFarms#restartSitesForServerFarm'
    id: 'azure-arm-website.ServerFarms#restartSitesForServerFarm'
    parent: azure-arm-website.ServerFarms
    name: 'restartSitesForServerFarm(resourceGroupName, name, options, callback)'
    summary: Restarts web apps in a specified App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.restartSitesForServerFarm(resourceGroupName,
      name, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of App Service Plan
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.softRestart
          type:
            - boolean
          description: >-
            Soft restart applies the

            configuration settings and restarts the apps if necessary. Hard
            restart

            always restarts and reprovisions the apps
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function restartSitesForServerFarm(resourceGroupName, name, options,
        callback)
    children:
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~client'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~callback'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~options'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~softRestart'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~regex'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~queryParameters'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~requestUrl'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~httpRequest'
      - 'azure-arm-website.ServerFarms#restartSitesForServerFarm~headerName'
  - uid: 'azure-arm-website.ServerFarms#getServerFarmOperation'
    id: 'azure-arm-website.ServerFarms#getServerFarmOperation'
    parent: azure-arm-website.ServerFarms
    name: >-
      getServerFarmOperation(resourceGroupName, name, operationId, options,
      callback)
    summary: Gets a server farm operation
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmOperation(resourceGroupName,
      name, operationId, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Name of resource group
        - id: name
          type:
            - string
          description: Name of server farm
        - id: operationId
          type:
            - string
          description: Id of Server farm operation"&gt;
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ServerFarmWithRichSku> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getServerFarmOperation(resourceGroupName, name, operationId,
        options, callback)
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~client'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~options'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~regex'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~queryParameters'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarmOperation~headerName'
  - uid: 'azure-arm-website.ServerFarms#getServerFarmsNext'
    id: 'azure-arm-website.ServerFarms#getServerFarmsNext'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarmsNext(nextPageLink, options, callback)'
    summary: |-
      Gets collection of App Service Plans in a resource group for a
      given subscription.
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmsNext(nextPageLink, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ServerFarmCollection> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getServerFarmsNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~client'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~options'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~regex'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarmsNext~headerName'
  - uid: 'azure-arm-website.ServerFarms#getServerFarmMetricsNext'
    id: 'azure-arm-website.ServerFarms#getServerFarmMetricsNext'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarmMetricsNext(nextPageLink, options, callback)'
    summary: Queries for App Serice Plan metrics
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmMetricsNext(nextPageLink,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ResourceMetricCollection> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getServerFarmMetricsNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~client'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~options'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~regex'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricsNext~headerName'
  - uid: 'azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext'
    id: 'azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarmMetricDefintionsNext(nextPageLink, options, callback)'
    summary: List of metrics that can be queried for an App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmMetricDefintionsNext(nextPageLink,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:MetricDefinitionCollection> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getServerFarmMetricDefintionsNext(nextPageLink, options,
        callback)
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~client'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~options'
      - >-
        azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~requestUrl
      - >-
        azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~requestUrl
      - 'azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~regex'
      - >-
        azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~requestUrl
      - >-
        azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~httpRequest
      - >-
        azure-arm-website.ServerFarms#getServerFarmMetricDefintionsNext~headerName
  - uid: 'azure-arm-website.ServerFarms#getServerFarmSitesNext'
    id: 'azure-arm-website.ServerFarms#getServerFarmSitesNext'
    parent: azure-arm-website.ServerFarms
    name: 'getServerFarmSitesNext(nextPageLink, options, callback)'
    summary: Gets list of Apps associated with an App Service Plan
    fullName: >-
      azure-arm-website.ServerFarms.getServerFarmSitesNext(nextPageLink,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:SiteCollection> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getServerFarmSitesNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~client'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~callback'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~options'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~regex'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~requestUrl'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~httpRequest'
      - 'azure-arm-website.ServerFarms#getServerFarmSitesNext~headerName'
references:
  - uid: azure-arm-website.WebSiteManagementClient
    name: WebSiteManagementClient
    fullName: azure-arm-website.WebSiteManagementClient
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true

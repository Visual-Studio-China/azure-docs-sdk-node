### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-datalake-store.FileSystem
    id: azure-arm-datalake-store.FileSystem
    name: FileSystem
    summary: |-
      FileSystem
      __NOTE__: An instance of this class is automatically created for an
      instance of the DataLakeStoreFileSystemManagementClient.
      Initializes a new instance of the FileSystem class.
    fullName: azure-arm-datalake-store.FileSystem
    type: Class
    children:
      - 'azure-arm-datalake-store.FileSystem.#ctor'
      - 'azure-arm-datalake-store.FileSystem#client'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry'
      - 'azure-arm-datalake-store.FileSystem#checkAccess'
      - 'azure-arm-datalake-store.FileSystem#mkdirs'
      - 'azure-arm-datalake-store.FileSystem#concat'
      - 'azure-arm-datalake-store.FileSystem#msConcat'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus'
      - 'azure-arm-datalake-store.FileSystem#append'
      - 'azure-arm-datalake-store.FileSystem#create'
      - 'azure-arm-datalake-store.FileSystem#open'
      - 'azure-arm-datalake-store.FileSystem#setAcl'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl'
      - 'azure-arm-datalake-store.FileSystem#removeAcl'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod'
      - 'azure-arm-datalake-store.FileSystem#rename'
      - 'azure-arm-datalake-store.FileSystem#setOwner'
      - 'azure-arm-datalake-store.FileSystem#setPermission'
  - id: 'azure-arm-datalake-store.FileSystem.#ctor'
    uid: 'azure-arm-datalake-store.FileSystem.#ctor'
    parent: azure-arm-datalake-store.FileSystem
    name: FileSystem(client)
    fullName: azure-arm-datalake-store.FileSystem.FileSystem(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-datalake-store.DataLakeStoreFileSystemManagementClient
          description: Reference to the service client.
      content: new FileSystem(client)
  - uid: 'azure-arm-datalake-store.FileSystem#client'
    id: 'azure-arm-datalake-store.FileSystem#client'
    parent: azure-arm-datalake-store.FileSystem
    name: client
    summary: ''
    fullName: azure-arm-datalake-store.FileSystem.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-datalake-store.FileSystem#concurrentAppend'
    id: 'azure-arm-datalake-store.FileSystem#concurrentAppend'
    parent: azure-arm-datalake-store.FileSystem
    name: 'concurrentAppend(accountName, filePath, streamContents, options, callback)'
    summary: >-
      Appends to the specified file. This method supports multiple concurrent

      appends to the file. NOTE: ConcurrentAppend and normal (serial) Append

      CANNOT be used interchangeably; once a file has been appended to using

      either of these append options, it can only be appended to using that
      append

      option. ConcurrentAppend DOES NOT guarantee order and can result in

      duplicated data landing in the target file.
    fullName: >-
      azure-arm-datalake-store.FileSystem.concurrentAppend(accountName,
      filePath, streamContents, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: filePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of the
            file to which to append using concurrent append.
        - id: streamContents
          type:
            - object
          description: |-
            The file contents to include when appending
            to the file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.appendMode
          type:
            - string
          description: >-
            Indicates the concurrent append call

            should create the file if it doesn't exist or just open the existing
            file

            for append. Possible values include: 'autocreate'
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: >-
            Optionally indicates what to do after

            completion of the concurrent append. DATA indicates more data is
            coming so

            no sync takes place, METADATA indicates a sync should be done to
            refresh

            metadata of the file only. CLOSE indicates that both the stream and
            metadata

            should be refreshed upon append completion. Possible values include:
            'DATA',

            'METADATA', 'CLOSE'
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function concurrentAppend(accountName, filePath, streamContents,
        options, callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~client'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~callback'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~options'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~appendMode'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~syncFlag'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~op'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~transferEncoding'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~allowedValues'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~allowedValues1'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~headerName'
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend~requestContent'
  - uid: 'azure-arm-datalake-store.FileSystem#setFileExpiry'
    id: 'azure-arm-datalake-store.FileSystem#setFileExpiry'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setFileExpiry(accountName, filePath, expiryOption, options, callback)'
    summary: |-
      Sets or removes the expiration time on the specified file. This operation
      can only be executed against files. Folders are not supported.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setFileExpiry(accountName, filePath,
      expiryOption, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: filePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of the
            file on which to set or remove the expiration time.
        - id: expiryOption
          type:
            - string
          description: >-
            Indicates the type of expiration to use for the

            file: 1. NeverExpire: ExpireTime is ignored. 2. RelativeToNow:
            ExpireTime is

            an integer in milliseconds representing the expiration date relative
            to when

            file expiration is updated. 3. RelativeToCreationDate: ExpireTime is
            an

            integer in milliseconds representing the expiration date relative to
            file

            creation. 4. Absolute: ExpireTime is an integer in milliseconds, as
            a Unix

            timestamp relative to 1/1/1970 00:00:00. Possible values include:

            'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expireTime
          type:
            - number
          description: |-
            The time that the file will expire,
            corresponding to the ExpiryOption that was set.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function setFileExpiry(accountName, filePath, expiryOption, options,
        callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~client'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~callback'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~options'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~expireTime'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~op'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~allowedValues'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#checkAccess'
    id: 'azure-arm-datalake-store.FileSystem#checkAccess'
    parent: azure-arm-datalake-store.FileSystem
    name: 'checkAccess(accountName, path, options, callback)'
    summary: Checks if the specified access is available at the given path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.checkAccess(accountName, path,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: path
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of the
            file or directory for which to check access.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fsaction
          type:
            - string
          description: |-
            File system operation read/write/execute
            in string form, matching regex pattern '[rwx-]{3}'
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function checkAccess(accountName, path, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#checkAccess~client'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~callback'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~options'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~fsaction'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~op'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#checkAccess~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#mkdirs'
    id: 'azure-arm-datalake-store.FileSystem#mkdirs'
    parent: azure-arm-datalake-store.FileSystem
    name: 'mkdirs(accountName, path, options, callback)'
    summary: Creates a directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.mkdirs(accountName, path, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: path
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of the
            directory to create.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:FileOperationResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function mkdirs(accountName, path, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#mkdirs~client'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~callback'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~options'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~op'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#mkdirs~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#concat'
    id: 'azure-arm-datalake-store.FileSystem#concat'
    parent: azure-arm-datalake-store.FileSystem
    name: 'concat(accountName, destinationPath, sources, options, callback)'
    summary: |-
      Concatenates the list of source files into the destination file, removing
      all source files upon success.
    fullName: >-
      azure-arm-datalake-store.FileSystem.concat(accountName, destinationPath,
      sources, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: destinationPath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/')
            of the destination file resulting from the concatenation.
        - id: sources
          type:
            - array
          description: >-
            A list of comma seperated Data Lake Store paths

            (starting with '/') of the files to concatenate, in the order in
            which they

            should be concatenated.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function concat(accountName, destinationPath, sources, options,
        callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#concat~client'
      - 'azure-arm-datalake-store.FileSystem#concat~callback'
      - 'azure-arm-datalake-store.FileSystem#concat~options'
      - 'azure-arm-datalake-store.FileSystem#concat~op'
      - 'azure-arm-datalake-store.FileSystem#concat~i'
      - 'azure-arm-datalake-store.FileSystem#concat~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#concat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concat~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#concat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#concat~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#concat~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#msConcat'
    id: 'azure-arm-datalake-store.FileSystem#msConcat'
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      msConcat(accountName, msConcatDestinationPath, streamContents, options,
      callback)
    summary: |-
      Concatenates the list of source files into the destination file, deleting
      all source files upon success. This method accepts more source file paths
      than the Concat method. This method and the parameters it accepts are
      subject to change for usability in an upcoming version.
    fullName: >-
      azure-arm-datalake-store.FileSystem.msConcat(accountName,
      msConcatDestinationPath, streamContents, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: msConcatDestinationPath
          type:
            - string
          description: |-
            The Data Lake Store path (starting
            with '/') of the destination file resulting from the concatenation.
        - id: streamContents
          type:
            - object
          description: |-
            A list of Data Lake Store paths (starting
            with '/') of the source files. Must be in the format: sources=<comma
            separated list>
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.deleteSourceDirectory
          type:
            - boolean
          description: >-
            Indicates that as an

            optimization instead of deleting each individual source stream,
            delete the

            source stream folder if all streams are in the same folder instead.
            This

            results in a substantial performance improvement when the only
            streams in

            the folder are part of the concatenation operation. WARNING: This
            includes

            the deletion of any other files that are not source files. Only set
            this to

            true when source files are the only files in the source directory.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function msConcat(accountName, msConcatDestinationPath, streamContents,
        options, callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#msConcat~client'
      - 'azure-arm-datalake-store.FileSystem#msConcat~callback'
      - 'azure-arm-datalake-store.FileSystem#msConcat~options'
      - 'azure-arm-datalake-store.FileSystem#msConcat~deleteSourceDirectory'
      - 'azure-arm-datalake-store.FileSystem#msConcat~op'
      - 'azure-arm-datalake-store.FileSystem#msConcat~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#msConcat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#msConcat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#msConcat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#msConcat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#msConcat~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#msConcat~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#msConcat~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#msConcat~headerName'
      - 'azure-arm-datalake-store.FileSystem#msConcat~requestContent'
  - uid: 'azure-arm-datalake-store.FileSystem#listFileStatus'
    id: 'azure-arm-datalake-store.FileSystem#listFileStatus'
    parent: azure-arm-datalake-store.FileSystem
    name: 'listFileStatus(accountName, listFilePath, options, callback)'
    summary: |-
      Get the list of file status objects specified by the file path, with
      optional pagination parameters
    fullName: >-
      azure-arm-datalake-store.FileSystem.listFileStatus(accountName,
      listFilePath, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: listFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of
            the directory to list.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listSize
          type:
            - number
          description: |-
            Gets or sets the number of items to
            return. Optional.
          optional: true
        - id: options.listAfter
          type:
            - string
          description: >-
            Gets or sets the item or lexographical

            index after which to begin returning results. For example, a file
            list of

            'a','b','d' and listAfter='b' will return 'd', and a listAfter='c'
            will also

            return 'd'. Optional.
          optional: true
        - id: options.listBefore
          type:
            - string
          description: >-
            Gets or sets the item or lexographical

            index before which to begin returning results. For example, a file
            list of

            'a','b','d' and listBefore='d' will return 'a','b', and a
            listBefore='c'

            will also return 'a','b'. Optional.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:FileStatusesResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listFileStatus(accountName, listFilePath, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~client'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~callback'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~options'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~listSize'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~listAfter'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~listBefore'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~op'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#listFileStatus~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#getContentSummary'
    id: 'azure-arm-datalake-store.FileSystem#getContentSummary'
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      getContentSummary(accountName, getContentSummaryFilePath, options,
      callback)
    summary: Gets the file content summary object specified by the file path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getContentSummary(accountName,
      getContentSummaryFilePath, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: getContentSummaryFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting
            with '/') of the file for which to retrieve the summary.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ContentSummaryResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getContentSummary(accountName, getContentSummaryFilePath,
        options, callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~client'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~callback'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~options'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~op'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#getContentSummary~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#getFileStatus'
    id: 'azure-arm-datalake-store.FileSystem#getFileStatus'
    parent: azure-arm-datalake-store.FileSystem
    name: 'getFileStatus(accountName, getFilePath, options, callback)'
    summary: Get the file status object specified by the file path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getFileStatus(accountName,
      getFilePath, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: getFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of
            the file or directory for which to retrieve the status.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:FileStatusResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getFileStatus(accountName, getFilePath, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~client'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~callback'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~options'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~op'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#getFileStatus~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#append'
    id: 'azure-arm-datalake-store.FileSystem#append'
    parent: azure-arm-datalake-store.FileSystem
    name: 'append(accountName, directFilePath, streamContents, options, callback)'
    summary: >-
      Appends to the specified file. This method does not support multiple

      concurrent appends to the file. NOTE: Concurrent append and normal
      (serial)

      append CANNOT be used interchangeably. Once a file has been appended to

      using either append option, it can only be appended to using that append

      option. Use the ConcurrentAppend option if you would like support for

      concurrent appends.
    fullName: >-
      azure-arm-datalake-store.FileSystem.append(accountName, directFilePath,
      streamContents, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: directFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/')
            of the file to which to append.
        - id: streamContents
          type:
            - object
          description: |-
            The file contents to include when appending
            to the file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.offset
          type:
            - number
          description: |-
            The optional offset in the stream to begin
            the append operation. Default is to append at the end of the stream.
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: >-
            Optionally indicates what to do after

            completion of the append. DATA indicates more data is coming so no
            sync

            takes place, METADATA indicates a sync should be done to refresh
            metadata of

            the file only. CLOSE indicates that both the stream and metadata
            should be

            refreshed upon append completion. Possible values include: 'DATA',

            'METADATA', 'CLOSE'
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function append(accountName, directFilePath, streamContents, options,
        callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#append~client'
      - 'azure-arm-datalake-store.FileSystem#append~callback'
      - 'azure-arm-datalake-store.FileSystem#append~options'
      - 'azure-arm-datalake-store.FileSystem#append~offset'
      - 'azure-arm-datalake-store.FileSystem#append~syncFlag'
      - 'azure-arm-datalake-store.FileSystem#append~op'
      - 'azure-arm-datalake-store.FileSystem#append~appendParameter'
      - 'azure-arm-datalake-store.FileSystem#append~allowedValues'
      - 'azure-arm-datalake-store.FileSystem#append~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#append~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#append~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#append~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#append~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#append~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#append~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#append~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#append~headerName'
      - 'azure-arm-datalake-store.FileSystem#append~requestContent'
  - uid: 'azure-arm-datalake-store.FileSystem#create'
    id: 'azure-arm-datalake-store.FileSystem#create'
    parent: azure-arm-datalake-store.FileSystem
    name: 'create(accountName, directFilePath, options, callback)'
    summary: Creates a file with optionally specified content.
    fullName: >-
      azure-arm-datalake-store.FileSystem.create(accountName, directFilePath,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: directFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/')
            of the file to create.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.streamContents
          type:
            - object
          description: >-
            The file contents to include when

            creating the file. This parameter is optional, resulting in an empty
            file if

            not specified.
          optional: true
        - id: options.overwrite
          type:
            - boolean
          description: |-
            The indication of if the file should be
            overwritten.
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: >-
            Optionally indicates what to do after

            completion of the append. DATA indicates more data is coming so no
            sync

            takes place, METADATA indicates a sync should be done to refresh
            metadata of

            the file only. CLOSE indicates that both the stream and metadata
            should be

            refreshed upon append completion. Possible values include: 'DATA',

            'METADATA', 'CLOSE'
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function create(accountName, directFilePath, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#create~client'
      - 'azure-arm-datalake-store.FileSystem#create~callback'
      - 'azure-arm-datalake-store.FileSystem#create~options'
      - 'azure-arm-datalake-store.FileSystem#create~streamContents'
      - 'azure-arm-datalake-store.FileSystem#create~overwrite'
      - 'azure-arm-datalake-store.FileSystem#create~syncFlag'
      - 'azure-arm-datalake-store.FileSystem#create~op'
      - 'azure-arm-datalake-store.FileSystem#create~write'
      - 'azure-arm-datalake-store.FileSystem#create~allowedValues'
      - 'azure-arm-datalake-store.FileSystem#create~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#create~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#create~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#create~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#create~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#create~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#create~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#create~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#create~headerName'
      - 'azure-arm-datalake-store.FileSystem#create~requestContent'
  - uid: 'azure-arm-datalake-store.FileSystem#open'
    id: 'azure-arm-datalake-store.FileSystem#open'
    parent: azure-arm-datalake-store.FileSystem
    name: 'open(accountName, directFilePath, options, callback)'
    summary: Opens and reads from the specified file.
    fullName: >-
      azure-arm-datalake-store.FileSystem.open(accountName, directFilePath,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: directFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/')
            of the file to open.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.length
          type:
            - number
          description: |-
            The number of bytes that the server will
            attempt to retrieve. It will retrieve <= length bytes.
          optional: true
        - id: options.offset
          type:
            - number
          description: The byte offset to start reading data from.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function open(accountName, directFilePath, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#open~client'
      - 'azure-arm-datalake-store.FileSystem#open~callback'
      - 'azure-arm-datalake-store.FileSystem#open~options'
      - 'azure-arm-datalake-store.FileSystem#open~length'
      - 'azure-arm-datalake-store.FileSystem#open~offset'
      - 'azure-arm-datalake-store.FileSystem#open~op'
      - 'azure-arm-datalake-store.FileSystem#open~read'
      - 'azure-arm-datalake-store.FileSystem#open~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#open~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#open~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#open~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#open~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#open~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#open~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#open~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#open~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#setAcl'
    id: 'azure-arm-datalake-store.FileSystem#setAcl'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setAcl(accountName, setAclFilePath, aclspec, options, callback)'
    summary: Sets the Access Control List (ACL) for a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setAcl(accountName, setAclFilePath,
      aclspec, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: setAclFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/')
            of the file or directory on which to set the ACL.
        - id: aclspec
          type:
            - string
          description: |-
            The ACL spec included in ACL creation operations in
            the format '[default:]user|group|other::r|-w|-x|-'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function setAcl(accountName, setAclFilePath, aclspec, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#setAcl~client'
      - 'azure-arm-datalake-store.FileSystem#setAcl~callback'
      - 'azure-arm-datalake-store.FileSystem#setAcl~options'
      - 'azure-arm-datalake-store.FileSystem#setAcl~op'
      - 'azure-arm-datalake-store.FileSystem#setAcl~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#setAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setAcl~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#setAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setAcl~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#setAcl~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#modifyAclEntries'
    id: 'azure-arm-datalake-store.FileSystem#modifyAclEntries'
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      modifyAclEntries(accountName, modifyAclFilePath, aclspec, options,
      callback)
    summary: Modifies existing Access Control List (ACL) entries on a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.modifyAclEntries(accountName,
      modifyAclFilePath, aclspec, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: modifyAclFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with
            '/') of the file or directory with the ACL being modified.
        - id: aclspec
          type:
            - string
          description: |-
            The ACL specification included in ACL modification
            operations in the format '[default:]user|group|other::r|-w|-x|-'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function modifyAclEntries(accountName, modifyAclFilePath, aclspec,
        options, callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~client'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~callback'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~options'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~op'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#removeAclEntries'
    id: 'azure-arm-datalake-store.FileSystem#removeAclEntries'
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      removeAclEntries(accountName, removeAclFilePath, aclspec, options,
      callback)
    summary: Removes existing Access Control List (ACL) entries for a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeAclEntries(accountName,
      removeAclFilePath, aclspec, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: removeAclFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with
            '/') of the file or directory with the ACL being removed.
        - id: aclspec
          type:
            - string
          description: |-
            The ACL spec included in ACL removal operations in
            the format '[default:]user|group|other'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function removeAclEntries(accountName, removeAclFilePath, aclspec,
        options, callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~client'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~callback'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~options'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~op'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#removeDefaultAcl'
    id: 'azure-arm-datalake-store.FileSystem#removeDefaultAcl'
    parent: azure-arm-datalake-store.FileSystem
    name: 'removeDefaultAcl(accountName, defaultAclFilePath, options, callback)'
    summary: |-
      Removes the existing Default Access Control List (ACL) of the specified
      directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeDefaultAcl(accountName,
      defaultAclFilePath, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: defaultAclFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with
            '/') of the directory with the default ACL being removed.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function removeDefaultAcl(accountName, defaultAclFilePath, options,
        callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~client'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~callback'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~options'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~op'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#removeAcl'
    id: 'azure-arm-datalake-store.FileSystem#removeAcl'
    parent: azure-arm-datalake-store.FileSystem
    name: 'removeAcl(accountName, aclFilePath, options, callback)'
    summary: |-
      Removes the existing Access Control List (ACL) of the specified file or
      directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeAcl(accountName, aclFilePath,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: aclFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of
            the file or directory with the ACL being removed.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function removeAcl(accountName, aclFilePath, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#removeAcl~client'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~callback'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~options'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~op'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#removeAcl~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#getAclStatus'
    id: 'azure-arm-datalake-store.FileSystem#getAclStatus'
    parent: azure-arm-datalake-store.FileSystem
    name: 'getAclStatus(accountName, aclFilePath, options, callback)'
    summary: >-
      Gets Access Control List (ACL) entries for the specified file or
      directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getAclStatus(accountName, aclFilePath,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: aclFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of
            the file or directory for which to get the ACL.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:AclStatusResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getAclStatus(accountName, aclFilePath, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~client'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~callback'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~options'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~op'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#getAclStatus~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#deleteMethod'
    id: 'azure-arm-datalake-store.FileSystem#deleteMethod'
    parent: azure-arm-datalake-store.FileSystem
    name: 'deleteMethod(accountName, filePath, options, callback)'
    summary: 'Deletes the requested file or directory, optionally recursively.'
    fullName: >-
      azure-arm-datalake-store.FileSystem.deleteMethod(accountName, filePath,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: filePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/') of the
            file or directory to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: |-
            The optional switch indicating if the
            delete should be recursive
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:FileOperationResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function deleteMethod(accountName, filePath, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~client'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~callback'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~options'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~recursive'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~op'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#deleteMethod~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#rename'
    id: 'azure-arm-datalake-store.FileSystem#rename'
    parent: azure-arm-datalake-store.FileSystem
    name: 'rename(accountName, renameFilePath, destination, options, callback)'
    summary: Rename a file or directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.rename(accountName, renameFilePath,
      destination, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: renameFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with '/')
            of the file or directory to move/rename.
        - id: destination
          type:
            - string
          description: The path to move/rename the file or folder to
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:FileOperationResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function rename(accountName, renameFilePath, destination, options,
        callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#rename~client'
      - 'azure-arm-datalake-store.FileSystem#rename~callback'
      - 'azure-arm-datalake-store.FileSystem#rename~options'
      - 'azure-arm-datalake-store.FileSystem#rename~op'
      - 'azure-arm-datalake-store.FileSystem#rename~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#rename~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#rename~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#rename~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#rename~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#rename~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#rename~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#rename~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#rename~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#setOwner'
    id: 'azure-arm-datalake-store.FileSystem#setOwner'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setOwner(accountName, setOwnerFilePath, options, callback)'
    summary: Sets the owner of a file or directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setOwner(accountName,
      setOwnerFilePath, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: setOwnerFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting with
            '/') of the file or directory for which to set the owner.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.owner
          type:
            - string
          description: |-
            The AAD Object ID of the user owner of the
            file or directory. If empty, the property will remain unchanged.
          optional: true
        - id: options.group
          type:
            - string
          description: |-
            The AAD Object ID of the group owner of the
            file or directory. If empty, the property will remain unchanged.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function setOwner(accountName, setOwnerFilePath, options, callback)'
    children:
      - 'azure-arm-datalake-store.FileSystem#setOwner~client'
      - 'azure-arm-datalake-store.FileSystem#setOwner~callback'
      - 'azure-arm-datalake-store.FileSystem#setOwner~options'
      - 'azure-arm-datalake-store.FileSystem#setOwner~owner'
      - 'azure-arm-datalake-store.FileSystem#setOwner~group'
      - 'azure-arm-datalake-store.FileSystem#setOwner~op'
      - 'azure-arm-datalake-store.FileSystem#setOwner~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#setOwner~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setOwner~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setOwner~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setOwner~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setOwner~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#setOwner~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setOwner~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#setOwner~headerName'
  - uid: 'azure-arm-datalake-store.FileSystem#setPermission'
    id: 'azure-arm-datalake-store.FileSystem#setPermission'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setPermission(accountName, setPermissionFilePath, options, callback)'
    summary: Sets the permission of the file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setPermission(accountName,
      setPermissionFilePath, options, callback)
    type: Method
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: |-
            The Azure Data Lake Store account to execute
            filesystem operations on.
        - id: setPermissionFilePath
          type:
            - string
          description: |-
            The Data Lake Store path (starting
            with '/') of the file or directory for which to set the permission.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.permission
          type:
            - string
          description: |-
            A string representation of the
            permission (i.e 'rwx'). If empty, this property remains unchanged.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function setPermission(accountName, setPermissionFilePath, options,
        callback)
    children:
      - 'azure-arm-datalake-store.FileSystem#setPermission~client'
      - 'azure-arm-datalake-store.FileSystem#setPermission~callback'
      - 'azure-arm-datalake-store.FileSystem#setPermission~options'
      - 'azure-arm-datalake-store.FileSystem#setPermission~permission'
      - 'azure-arm-datalake-store.FileSystem#setPermission~op'
      - 'azure-arm-datalake-store.FileSystem#setPermission~baseUrl'
      - 'azure-arm-datalake-store.FileSystem#setPermission~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setPermission~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setPermission~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setPermission~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setPermission~queryParameters'
      - 'azure-arm-datalake-store.FileSystem#setPermission~requestUrl'
      - 'azure-arm-datalake-store.FileSystem#setPermission~httpRequest'
      - 'azure-arm-datalake-store.FileSystem#setPermission~headerName'
references:
  - uid: azure-arm-datalake-store.DataLakeStoreFileSystemManagementClient
    name: DataLakeStoreFileSystemManagementClient
    fullName: azure-arm-datalake-store.DataLakeStoreFileSystemManagementClient
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true

### YamlMime:UniversalReference
items:
  - uid: azure-arm-resource.ManagementLocks
    id: azure-arm-resource.ManagementLocks
    name: ManagementLocks
    summary: |-
      ManagementLocks
      __NOTE__: An instance of this class is automatically created for an
      instance of the ManagementLockClient.
      Initializes a new instance of the ManagementLocks class.
    fullName: azure-arm-resource.ManagementLocks
    source:
      id: azure-arm-resource.ManagementLocks
      path: lib\services\resourceManagement\lib\lock\operations\managementLocks.js
      startLine: 2957
      remote:
        branch: master
        path: lib\services\resourceManagement\lib\lock\operations\managementLocks.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    langs:
      - js
    type: Class
    children:
      - 'azure-arm-resource.ManagementLocks.#ctor'
      - >-
        azure-arm-resource.ManagementLocks#createOrUpdateAtResourceGroupLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#createOrUpdateAtResourceGroupLevel'
      - >-
        azure-arm-resource.ManagementLocks#deleteAtResourceGroupLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#deleteAtResourceGroupLevel'
      - >-
        azure-arm-resource.ManagementLocks#getAtResourceGroupLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#getAtResourceGroupLevel'
      - >-
        azure-arm-resource.ManagementLocks#createOrUpdateByScopeWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#createOrUpdateByScope'
      - >-
        azure-arm-resource.ManagementLocks#deleteByScopeWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#deleteByScope'
      - 'azure-arm-resource.ManagementLocks#getByScopeWithHttpOperationResponse'
      - 'azure-arm-resource.ManagementLocks#getByScope'
      - >-
        azure-arm-resource.ManagementLocks#createOrUpdateAtResourceLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#createOrUpdateAtResourceLevel'
      - >-
        azure-arm-resource.ManagementLocks#deleteAtResourceLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#deleteAtResourceLevel'
      - >-
        azure-arm-resource.ManagementLocks#getAtResourceLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#getAtResourceLevel'
      - >-
        azure-arm-resource.ManagementLocks#createOrUpdateAtSubscriptionLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#createOrUpdateAtSubscriptionLevel'
      - >-
        azure-arm-resource.ManagementLocks#deleteAtSubscriptionLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#deleteAtSubscriptionLevel'
      - >-
        azure-arm-resource.ManagementLocks#getAtSubscriptionLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#getAtSubscriptionLevel'
      - >-
        azure-arm-resource.ManagementLocks#listAtResourceGroupLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#listAtResourceGroupLevel'
      - >-
        azure-arm-resource.ManagementLocks#listAtResourceLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#listAtResourceLevel'
      - >-
        azure-arm-resource.ManagementLocks#listAtSubscriptionLevelWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#listAtSubscriptionLevel'
      - >-
        azure-arm-resource.ManagementLocks#listAtResourceGroupLevelNextWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#listAtResourceGroupLevelNext'
      - >-
        azure-arm-resource.ManagementLocks#listAtResourceLevelNextWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#listAtResourceLevelNext'
      - >-
        azure-arm-resource.ManagementLocks#listAtSubscriptionLevelNextWithHttpOperationResponse
      - 'azure-arm-resource.ManagementLocks#listAtSubscriptionLevelNext'
  - id: 'azure-arm-resource.ManagementLocks.#ctor'
    uid: 'azure-arm-resource.ManagementLocks.#ctor'
    parent: azure-arm-resource.ManagementLocks
    name: ManagementLocks(client)
    fullName: azure-arm-resource.ManagementLocks.ManagementLocks(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-resource.ManagementLockClient
          description: Reference to the service client.
      content: new ManagementLocks(client)
    langs:
      - js
  - uid: >-
      azure-arm-resource.ManagementLocks#createOrUpdateAtResourceGroupLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#createOrUpdateAtResourceGroupLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      createOrUpdateAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
      lockName, parameters, options)
    summary: >-
      Creates or updates a management lock at the resource group level.


      When you apply a lock at a parent scope, all child resources inherit the

      same lock. To create management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
      lockName, parameters, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to lock.
        - id: lockName
          type:
            - string
          description: >-
            The lock name. The lock name can be a maximum of

            260 characters. It cannot contain <, > %, &, :, \, ?, /, or any
            control

            characters.
        - id: parameters
          type:
            - object
          description: The management lock parameters.
        - id: parameters.level
          type:
            - string
          description: >-
            The level of the lock. Possible values are:

            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users

            are able to read and modify the resources, but not delete. ReadOnly
            means

            authorized users can only read from a resource, but they can't
            modify or

            delete it. Possible values include: 'NotSpecified', 'CanNotDelete',

            'ReadOnly'
        - id: parameters.notes
          type:
            - string
          description: |-
            Notes about the lock. Maximum of 512
            characters.
          optional: true
        - id: parameters.owners
          type:
            - array
          description: The owners of the lock.
          optional: true
        - id: parameters.name
          type:
            - string
          description: The name of the lock.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
        lockName, parameters, options)
  - uid: 'azure-arm-resource.ManagementLocks#createOrUpdateAtResourceGroupLevel'
    id: 'azure-arm-resource.ManagementLocks#createOrUpdateAtResourceGroupLevel'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      createOrUpdateAtResourceGroupLevel(resourceGroupName, lockName,
      parameters, options, optionalCallback)
    summary: >-
      Creates or updates a management lock at the resource group level.


      When you apply a lock at a parent scope, all child resources inherit the

      same lock. To create management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevel(resourceGroupName,
      lockName, parameters, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group to lock.
        - id: lockName
          type:
            - string
          description: >-
            The lock name. The lock name can be a maximum of

            260 characters. It cannot contain <, > %, &, :, \, ?, /, or any
            control

            characters.
        - id: parameters
          type:
            - object
          description: The management lock parameters.
        - id: parameters.level
          type:
            - string
          description: >-
            The level of the lock. Possible values are:

            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users

            are able to read and modify the resources, but not delete. ReadOnly
            means

            authorized users can only read from a resource, but they can't
            modify or

            delete it. Possible values include: 'NotSpecified', 'CanNotDelete',

            'ReadOnly'
        - id: parameters.notes
          type:
            - string
          description: |-
            Notes about the lock. Maximum of 512
            characters.
          optional: true
        - id: parameters.owners
          type:
            - array
          description: The owners of the lock.
          optional: true
        - id: parameters.name
          type:
            - string
          description: The name of the lock.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateAtResourceGroupLevel(resourceGroupName, lockName,
        parameters, options, optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#deleteAtResourceGroupLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#deleteAtResourceGroupLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      deleteAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
      lockName, options)
    summary: >-
      Deletes a management lock at the resource group level.


      To delete management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
      lockName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the lock.
        - id: lockName
          type:
            - string
          description: The name of lock to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
        lockName, options)
  - uid: 'azure-arm-resource.ManagementLocks#deleteAtResourceGroupLevel'
    id: 'azure-arm-resource.ManagementLocks#deleteAtResourceGroupLevel'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      deleteAtResourceGroupLevel(resourceGroupName, lockName, options,
      optionalCallback)
    summary: >-
      Deletes a management lock at the resource group level.


      To delete management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevel(resourceGroupName,
      lockName, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the lock.
        - id: lockName
          type:
            - string
          description: The name of lock to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteAtResourceGroupLevel(resourceGroupName, lockName,
        options, optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#getAtResourceGroupLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#getAtResourceGroupLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      getAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
      lockName, options)
    summary: Gets a management lock at the resource group level.
    fullName: >-
      azure-arm-resource.ManagementLocks.getAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
      lockName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the locked resource group.
        - id: lockName
          type:
            - string
          description: The name of the lock to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
        lockName, options)
  - uid: 'azure-arm-resource.ManagementLocks#getAtResourceGroupLevel'
    id: 'azure-arm-resource.ManagementLocks#getAtResourceGroupLevel'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      getAtResourceGroupLevel(resourceGroupName, lockName, options,
      optionalCallback)
    summary: Gets a management lock at the resource group level.
    fullName: >-
      azure-arm-resource.ManagementLocks.getAtResourceGroupLevel(resourceGroupName,
      lockName, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the locked resource group.
        - id: lockName
          type:
            - string
          description: The name of the lock to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getAtResourceGroupLevel(resourceGroupName, lockName, options,
        optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#createOrUpdateByScopeWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#createOrUpdateByScopeWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      createOrUpdateByScopeWithHttpOperationResponse(scope, lockName,
      parameters, options)
    summary: Create or update a management lock by scope.
    fullName: >-
      azure-arm-resource.ManagementLocks.createOrUpdateByScopeWithHttpOperationResponse(scope,
      lockName, parameters, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope for the lock. When providing a scope for the

            assignment, use '/subscriptions/{subscriptionId}' for subscriptions,

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for

            resource groups, and

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'

            for resources.
        - id: lockName
          type:
            - string
          description: The name of lock.
        - id: parameters
          type:
            - object
          description: Create or update management lock parameters.
        - id: parameters.level
          type:
            - string
          description: >-
            The level of the lock. Possible values are:

            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users

            are able to read and modify the resources, but not delete. ReadOnly
            means

            authorized users can only read from a resource, but they can't
            modify or

            delete it. Possible values include: 'NotSpecified', 'CanNotDelete',

            'ReadOnly'
        - id: parameters.notes
          type:
            - string
          description: |-
            Notes about the lock. Maximum of 512
            characters.
          optional: true
        - id: parameters.owners
          type:
            - array
          description: The owners of the lock.
          optional: true
        - id: parameters.name
          type:
            - string
          description: The name of the lock.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateByScopeWithHttpOperationResponse(scope, lockName,
        parameters, options)
  - uid: 'azure-arm-resource.ManagementLocks#createOrUpdateByScope'
    id: 'azure-arm-resource.ManagementLocks#createOrUpdateByScope'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      createOrUpdateByScope(scope, lockName, parameters, options,
      optionalCallback)
    summary: Create or update a management lock by scope.
    fullName: >-
      azure-arm-resource.ManagementLocks.createOrUpdateByScope(scope, lockName,
      parameters, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: >-
            The scope for the lock. When providing a scope for the

            assignment, use '/subscriptions/{subscriptionId}' for subscriptions,

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}'
            for

            resource groups, and

            '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePathIfPresent}/{resourceType}/{resourceName}'

            for resources.
        - id: lockName
          type:
            - string
          description: The name of lock.
        - id: parameters
          type:
            - object
          description: Create or update management lock parameters.
        - id: parameters.level
          type:
            - string
          description: >-
            The level of the lock. Possible values are:

            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users

            are able to read and modify the resources, but not delete. ReadOnly
            means

            authorized users can only read from a resource, but they can't
            modify or

            delete it. Possible values include: 'NotSpecified', 'CanNotDelete',

            'ReadOnly'
        - id: parameters.notes
          type:
            - string
          description: |-
            Notes about the lock. Maximum of 512
            characters.
          optional: true
        - id: parameters.owners
          type:
            - array
          description: The owners of the lock.
          optional: true
        - id: parameters.name
          type:
            - string
          description: The name of the lock.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateByScope(scope, lockName, parameters, options,
        optionalCallback)
  - uid: 'azure-arm-resource.ManagementLocks#deleteByScopeWithHttpOperationResponse'
    id: 'azure-arm-resource.ManagementLocks#deleteByScopeWithHttpOperationResponse'
    parent: azure-arm-resource.ManagementLocks
    name: 'deleteByScopeWithHttpOperationResponse(scope, lockName, options)'
    summary: Delete a management lock by scope.
    fullName: >-
      azure-arm-resource.ManagementLocks.deleteByScopeWithHttpOperationResponse(scope,
      lockName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: The scope for the lock.
        - id: lockName
          type:
            - string
          description: The name of lock.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteByScopeWithHttpOperationResponse(scope, lockName,
        options)
  - uid: 'azure-arm-resource.ManagementLocks#deleteByScope'
    id: 'azure-arm-resource.ManagementLocks#deleteByScope'
    parent: azure-arm-resource.ManagementLocks
    name: 'deleteByScope(scope, lockName, options, optionalCallback)'
    summary: Delete a management lock by scope.
    fullName: >-
      azure-arm-resource.ManagementLocks.deleteByScope(scope, lockName, options,
      optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: The scope for the lock.
        - id: lockName
          type:
            - string
          description: The name of lock.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function deleteByScope(scope, lockName, options, optionalCallback)'
  - uid: 'azure-arm-resource.ManagementLocks#getByScopeWithHttpOperationResponse'
    id: 'azure-arm-resource.ManagementLocks#getByScopeWithHttpOperationResponse'
    parent: azure-arm-resource.ManagementLocks
    name: 'getByScopeWithHttpOperationResponse(scope, lockName, options)'
    summary: Get a management lock by scope.
    fullName: >-
      azure-arm-resource.ManagementLocks.getByScopeWithHttpOperationResponse(scope,
      lockName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: The scope for the lock.
        - id: lockName
          type:
            - string
          description: The name of lock.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getByScopeWithHttpOperationResponse(scope, lockName, options)'
  - uid: 'azure-arm-resource.ManagementLocks#getByScope'
    id: 'azure-arm-resource.ManagementLocks#getByScope'
    parent: azure-arm-resource.ManagementLocks
    name: 'getByScope(scope, lockName, options, optionalCallback)'
    summary: Get a management lock by scope.
    fullName: >-
      azure-arm-resource.ManagementLocks.getByScope(scope, lockName, options,
      optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: The scope for the lock.
        - id: lockName
          type:
            - string
          description: The name of lock.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getByScope(scope, lockName, options, optionalCallback)'
  - uid: >-
      azure-arm-resource.ManagementLocks#createOrUpdateAtResourceLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#createOrUpdateAtResourceLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      createOrUpdateAtResourceLevelWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, parameters, options)
    summary: >-
      Creates or updates a management lock at the resource level or any

      level below the resource.


      When you apply a lock at a parent scope, all child resources inherit the

      same lock. To create management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevelWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, parameters, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the resource to lock.
        - id: resourceProviderNamespace
          type:
            - string
          description: |-
            The resource provider namespace of
            the resource to lock.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to lock.
        - id: resourceName
          type:
            - string
          description: The name of the resource to lock.
        - id: lockName
          type:
            - string
          description: >-
            The name of lock. The lock name can be a maximum of

            260 characters. It cannot contain <, > %, &, :, \, ?, /, or any
            control

            characters.
        - id: parameters
          type:
            - object
          description: |-
            Parameters for creating or updating a  management
            lock.
        - id: parameters.level
          type:
            - string
          description: >-
            The level of the lock. Possible values are:

            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users

            are able to read and modify the resources, but not delete. ReadOnly
            means

            authorized users can only read from a resource, but they can't
            modify or

            delete it. Possible values include: 'NotSpecified', 'CanNotDelete',

            'ReadOnly'
        - id: parameters.notes
          type:
            - string
          description: |-
            Notes about the lock. Maximum of 512
            characters.
          optional: true
        - id: parameters.owners
          type:
            - array
          description: The owners of the lock.
          optional: true
        - id: parameters.name
          type:
            - string
          description: The name of the lock.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateAtResourceLevelWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, lockName, parameters, options)
  - uid: 'azure-arm-resource.ManagementLocks#createOrUpdateAtResourceLevel'
    id: 'azure-arm-resource.ManagementLocks#createOrUpdateAtResourceLevel'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      createOrUpdateAtResourceLevel(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, parameters, options, optionalCallback)
    summary: >-
      Creates or updates a management lock at the resource level or any

      level below the resource.


      When you apply a lock at a parent scope, all child resources inherit the

      same lock. To create management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevel(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, parameters, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the resource to lock.
        - id: resourceProviderNamespace
          type:
            - string
          description: |-
            The resource provider namespace of
            the resource to lock.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the resource to lock.
        - id: resourceName
          type:
            - string
          description: The name of the resource to lock.
        - id: lockName
          type:
            - string
          description: >-
            The name of lock. The lock name can be a maximum of

            260 characters. It cannot contain <, > %, &, :, \, ?, /, or any
            control

            characters.
        - id: parameters
          type:
            - object
          description: |-
            Parameters for creating or updating a  management
            lock.
        - id: parameters.level
          type:
            - string
          description: >-
            The level of the lock. Possible values are:

            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users

            are able to read and modify the resources, but not delete. ReadOnly
            means

            authorized users can only read from a resource, but they can't
            modify or

            delete it. Possible values include: 'NotSpecified', 'CanNotDelete',

            'ReadOnly'
        - id: parameters.notes
          type:
            - string
          description: |-
            Notes about the lock. Maximum of 512
            characters.
          optional: true
        - id: parameters.owners
          type:
            - array
          description: The owners of the lock.
          optional: true
        - id: parameters.name
          type:
            - string
          description: The name of the lock.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateAtResourceLevel(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, lockName, parameters, options, optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#deleteAtResourceLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#deleteAtResourceLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      deleteAtResourceLevelWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, options)
    summary: >-
      Deletes the management lock of a resource or any level below the

      resource.


      To delete management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.deleteAtResourceLevelWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the resource with the lock to delete.
        - id: resourceProviderNamespace
          type:
            - string
          description: |-
            The resource provider namespace of
            the resource with the lock to delete.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: |-
            The resource type of the resource with the lock
            to delete.
        - id: resourceName
          type:
            - string
          description: |-
            The name of the resource with the lock to
            delete.
        - id: lockName
          type:
            - string
          description: The name of the lock to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteAtResourceLevelWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, lockName, options)
  - uid: 'azure-arm-resource.ManagementLocks#deleteAtResourceLevel'
    id: 'azure-arm-resource.ManagementLocks#deleteAtResourceLevel'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      deleteAtResourceLevel(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, lockName, options,
      optionalCallback)
    summary: >-
      Deletes the management lock of a resource or any level below the

      resource.


      To delete management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.deleteAtResourceLevel(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the resource with the lock to delete.
        - id: resourceProviderNamespace
          type:
            - string
          description: |-
            The resource provider namespace of
            the resource with the lock to delete.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: |-
            The resource type of the resource with the lock
            to delete.
        - id: resourceName
          type:
            - string
          description: |-
            The name of the resource with the lock to
            delete.
        - id: lockName
          type:
            - string
          description: The name of the lock to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function deleteAtResourceLevel(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, lockName, options, optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#getAtResourceLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#getAtResourceLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      getAtResourceLevelWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, options)
    summary: Get the management lock of a resource or any level below resource.
    fullName: >-
      azure-arm-resource.ManagementLocks.getAtResourceLevelWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type:
            - string
          description: |-
            The namespace of the resource
            provider.
        - id: parentResourcePath
          type:
            - string
          description: |-
            An extra path parameter needed in some
            services, like SQL Databases.
        - id: resourceType
          type:
            - string
          description: The type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource.
        - id: lockName
          type:
            - string
          description: The name of lock.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getAtResourceLevelWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, lockName, options)
  - uid: 'azure-arm-resource.ManagementLocks#getAtResourceLevel'
    id: 'azure-arm-resource.ManagementLocks#getAtResourceLevel'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      getAtResourceLevel(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, lockName, options,
      optionalCallback)
    summary: Get the management lock of a resource or any level below resource.
    fullName: >-
      azure-arm-resource.ManagementLocks.getAtResourceLevel(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      lockName, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type:
            - string
          description: |-
            The namespace of the resource
            provider.
        - id: parentResourcePath
          type:
            - string
          description: |-
            An extra path parameter needed in some
            services, like SQL Databases.
        - id: resourceType
          type:
            - string
          description: The type of the resource.
        - id: resourceName
          type:
            - string
          description: The name of the resource.
        - id: lockName
          type:
            - string
          description: The name of lock.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function getAtResourceLevel(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, lockName, options, optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#createOrUpdateAtSubscriptionLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#createOrUpdateAtSubscriptionLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      createOrUpdateAtSubscriptionLevelWithHttpOperationResponse(lockName,
      parameters, options)
    summary: >-
      Creates or updates a management lock at the subscription level.


      When you apply a lock at a parent scope, all child resources inherit the

      same lock. To create management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevelWithHttpOperationResponse(lockName,
      parameters, options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: lockName
          type:
            - string
          description: >-
            The name of lock. The lock name can be a maximum of

            260 characters. It cannot contain <, > %, &, :, \, ?, /, or any
            control

            characters.
        - id: parameters
          type:
            - object
          description: The management lock parameters.
        - id: parameters.level
          type:
            - string
          description: >-
            The level of the lock. Possible values are:

            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users

            are able to read and modify the resources, but not delete. ReadOnly
            means

            authorized users can only read from a resource, but they can't
            modify or

            delete it. Possible values include: 'NotSpecified', 'CanNotDelete',

            'ReadOnly'
        - id: parameters.notes
          type:
            - string
          description: |-
            Notes about the lock. Maximum of 512
            characters.
          optional: true
        - id: parameters.owners
          type:
            - array
          description: The owners of the lock.
          optional: true
        - id: parameters.name
          type:
            - string
          description: The name of the lock.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createOrUpdateAtSubscriptionLevelWithHttpOperationResponse(lockName,
        parameters, options)
  - uid: 'azure-arm-resource.ManagementLocks#createOrUpdateAtSubscriptionLevel'
    id: 'azure-arm-resource.ManagementLocks#createOrUpdateAtSubscriptionLevel'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      createOrUpdateAtSubscriptionLevel(lockName, parameters, options,
      optionalCallback)
    summary: >-
      Creates or updates a management lock at the subscription level.


      When you apply a lock at a parent scope, all child resources inherit the

      same lock. To create management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevel(lockName,
      parameters, options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: lockName
          type:
            - string
          description: >-
            The name of lock. The lock name can be a maximum of

            260 characters. It cannot contain <, > %, &, :, \, ?, /, or any
            control

            characters.
        - id: parameters
          type:
            - object
          description: The management lock parameters.
        - id: parameters.level
          type:
            - string
          description: >-
            The level of the lock. Possible values are:

            NotSpecified, CanNotDelete, ReadOnly. CanNotDelete means authorized
            users

            are able to read and modify the resources, but not delete. ReadOnly
            means

            authorized users can only read from a resource, but they can't
            modify or

            delete it. Possible values include: 'NotSpecified', 'CanNotDelete',

            'ReadOnly'
        - id: parameters.notes
          type:
            - string
          description: |-
            Notes about the lock. Maximum of 512
            characters.
          optional: true
        - id: parameters.owners
          type:
            - array
          description: The owners of the lock.
          optional: true
        - id: parameters.name
          type:
            - string
          description: The name of the lock.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function createOrUpdateAtSubscriptionLevel(lockName, parameters,
        options, optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#deleteAtSubscriptionLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#deleteAtSubscriptionLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: 'deleteAtSubscriptionLevelWithHttpOperationResponse(lockName, options)'
    summary: >-
      Deletes the management lock at the subscription level.


      To delete management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevelWithHttpOperationResponse(lockName,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: lockName
          type:
            - string
          description: The name of lock to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteAtSubscriptionLevelWithHttpOperationResponse(lockName,
        options)
  - uid: 'azure-arm-resource.ManagementLocks#deleteAtSubscriptionLevel'
    id: 'azure-arm-resource.ManagementLocks#deleteAtSubscriptionLevel'
    parent: azure-arm-resource.ManagementLocks
    name: 'deleteAtSubscriptionLevel(lockName, options, optionalCallback)'
    summary: >-
      Deletes the management lock at the subscription level.


      To delete management locks, you must have access to

      Microsoft.Authorization/* or Microsoft.Authorization/locks/* actions. Of
      the

      built-in roles, only Owner and User Access Administrator are granted those

      actions.
    fullName: >-
      azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevel(lockName,
      options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: lockName
          type:
            - string
          description: The name of lock to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function deleteAtSubscriptionLevel(lockName, options, optionalCallback)'
  - uid: >-
      azure-arm-resource.ManagementLocks#getAtSubscriptionLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#getAtSubscriptionLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: 'getAtSubscriptionLevelWithHttpOperationResponse(lockName, options)'
    summary: Gets a management lock at the subscription level.
    fullName: >-
      azure-arm-resource.ManagementLocks.getAtSubscriptionLevelWithHttpOperationResponse(lockName,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: lockName
          type:
            - string
          description: The name of the lock to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getAtSubscriptionLevelWithHttpOperationResponse(lockName,
        options)
  - uid: 'azure-arm-resource.ManagementLocks#getAtSubscriptionLevel'
    id: 'azure-arm-resource.ManagementLocks#getAtSubscriptionLevel'
    parent: azure-arm-resource.ManagementLocks
    name: 'getAtSubscriptionLevel(lockName, options, optionalCallback)'
    summary: Gets a management lock at the subscription level.
    fullName: >-
      azure-arm-resource.ManagementLocks.getAtSubscriptionLevel(lockName,
      options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: lockName
          type:
            - string
          description: The name of the lock to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function getAtSubscriptionLevel(lockName, options, optionalCallback)'
  - uid: >-
      azure-arm-resource.ManagementLocks#listAtResourceGroupLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#listAtResourceGroupLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      listAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
      options)
    summary: Gets all the management locks for a resource group.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the locks to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName,
        options)
  - uid: 'azure-arm-resource.ManagementLocks#listAtResourceGroupLevel'
    id: 'azure-arm-resource.ManagementLocks#listAtResourceGroupLevel'
    parent: azure-arm-resource.ManagementLocks
    name: 'listAtResourceGroupLevel(resourceGroupName, options, optionalCallback)'
    summary: Gets all the management locks for a resource group.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtResourceGroupLevel(resourceGroupName,
      options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the locks to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAtResourceGroupLevel(resourceGroupName, options,
        optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#listAtResourceLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#listAtResourceLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      listAtResourceLevelWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      options)
    summary: Gets all the management locks for a resource or any level below resource.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtResourceLevelWithHttpOperationResponse(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the locked resource. The name is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: |-
            The namespace of the resource
            provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the locked resource.
        - id: resourceName
          type:
            - string
          description: The name of the locked resource.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listAtResourceLevelWithHttpOperationResponse(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, options)
  - uid: 'azure-arm-resource.ManagementLocks#listAtResourceLevel'
    id: 'azure-arm-resource.ManagementLocks#listAtResourceLevel'
    parent: azure-arm-resource.ManagementLocks
    name: >-
      listAtResourceLevel(resourceGroupName, resourceProviderNamespace,
      parentResourcePath, resourceType, resourceName, options, optionalCallback)
    summary: Gets all the management locks for a resource or any level below resource.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtResourceLevel(resourceGroupName,
      resourceProviderNamespace, parentResourcePath, resourceType, resourceName,
      options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group containing
            the locked resource. The name is case insensitive.
        - id: resourceProviderNamespace
          type:
            - string
          description: |-
            The namespace of the resource
            provider.
        - id: parentResourcePath
          type:
            - string
          description: The parent resource identity.
        - id: resourceType
          type:
            - string
          description: The resource type of the locked resource.
        - id: resourceName
          type:
            - string
          description: The name of the locked resource.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAtResourceLevel(resourceGroupName,
        resourceProviderNamespace, parentResourcePath, resourceType,
        resourceName, options, optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#listAtSubscriptionLevelWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#listAtSubscriptionLevelWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: listAtSubscriptionLevelWithHttpOperationResponse(options)
    summary: Gets all the management locks for a subscription.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtSubscriptionLevelWithHttpOperationResponse(options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listAtSubscriptionLevelWithHttpOperationResponse(options)
  - uid: 'azure-arm-resource.ManagementLocks#listAtSubscriptionLevel'
    id: 'azure-arm-resource.ManagementLocks#listAtSubscriptionLevel'
    parent: azure-arm-resource.ManagementLocks
    name: 'listAtSubscriptionLevel(options, optionalCallback)'
    summary: Gets all the management locks for a subscription.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtSubscriptionLevel(options,
      optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: 'function listAtSubscriptionLevel(options, optionalCallback)'
  - uid: >-
      azure-arm-resource.ManagementLocks#listAtResourceGroupLevelNextWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#listAtResourceGroupLevelNextWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      listAtResourceGroupLevelNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: Gets all the management locks for a resource group.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNextWithHttpOperationResponse(nextPageLink,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listAtResourceGroupLevelNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-resource.ManagementLocks#listAtResourceGroupLevelNext'
    id: 'azure-arm-resource.ManagementLocks#listAtResourceGroupLevelNext'
    parent: azure-arm-resource.ManagementLocks
    name: 'listAtResourceGroupLevelNext(nextPageLink, options, optionalCallback)'
    summary: Gets all the management locks for a resource group.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNext(nextPageLink,
      options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAtResourceGroupLevelNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#listAtResourceLevelNextWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#listAtResourceLevelNextWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: 'listAtResourceLevelNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets all the management locks for a resource or any level below resource.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtResourceLevelNextWithHttpOperationResponse(nextPageLink,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listAtResourceLevelNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-resource.ManagementLocks#listAtResourceLevelNext'
    id: 'azure-arm-resource.ManagementLocks#listAtResourceLevelNext'
    parent: azure-arm-resource.ManagementLocks
    name: 'listAtResourceLevelNext(nextPageLink, options, optionalCallback)'
    summary: Gets all the management locks for a resource or any level below resource.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtResourceLevelNext(nextPageLink,
      options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAtResourceLevelNext(nextPageLink, options,
        optionalCallback)
  - uid: >-
      azure-arm-resource.ManagementLocks#listAtSubscriptionLevelNextWithHttpOperationResponse
    id: >-
      azure-arm-resource.ManagementLocks#listAtSubscriptionLevelNextWithHttpOperationResponse
    parent: azure-arm-resource.ManagementLocks
    name: >-
      listAtSubscriptionLevelNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: Gets all the management locks for a subscription.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNextWithHttpOperationResponse(nextPageLink,
      options)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listAtSubscriptionLevelNextWithHttpOperationResponse(nextPageLink,
        options)
  - uid: 'azure-arm-resource.ManagementLocks#listAtSubscriptionLevelNext'
    id: 'azure-arm-resource.ManagementLocks#listAtSubscriptionLevelNext'
    parent: azure-arm-resource.ManagementLocks
    name: 'listAtSubscriptionLevelNext(nextPageLink, options, optionalCallback)'
    summary: Gets all the management locks for a subscription.
    fullName: >-
      azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNext(nextPageLink,
      options, optionalCallback)
    langs:
      - js
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: |-
          If a callback was passed as the last parameter
          then it returns the callback else returns a Promise.

          {Promise} A promise is returned
      content: >-
        function listAtSubscriptionLevelNext(nextPageLink, options,
        optionalCallback)
references:
  - uid: azure-arm-resource.ManagementLockClient
    name: ManagementLockClient
    fullName: azure-arm-resource.ManagementLockClient
    isExternal: false

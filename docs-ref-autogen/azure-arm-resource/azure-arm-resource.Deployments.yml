### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-resource.Deployments
    id: azure-arm-resource.Deployments
    name: Deployments
    summary: |-
      Deployments
      __NOTE__: An instance of this class is automatically created for an
      instance of the ResourceManagementClient.
      Initializes a new instance of the Deployments class.
    fullName: azure-arm-resource.Deployments
    type: Class
    children:
      - 'azure-arm-resource.Deployments.#ctor'
      - 'azure-arm-resource.Deployments#client'
      - 'azure-arm-resource.Deployments#deleteMethod'
      - 'azure-arm-resource.Deployments#beginDeleteMethod'
      - 'azure-arm-resource.Deployments#checkExistence'
      - 'azure-arm-resource.Deployments#createOrUpdate'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate'
      - 'azure-arm-resource.Deployments#get'
      - 'azure-arm-resource.Deployments#cancel'
      - 'azure-arm-resource.Deployments#validate'
      - 'azure-arm-resource.Deployments#exportTemplate'
      - 'azure-arm-resource.Deployments#list'
      - 'azure-arm-resource.Deployments#listNext'
  - id: 'azure-arm-resource.Deployments.#ctor'
    uid: 'azure-arm-resource.Deployments.#ctor'
    parent: azure-arm-resource.Deployments
    name: Deployments(client)
    fullName: azure-arm-resource.Deployments.Deployments(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-resource.ResourceManagementClient
          description: Reference to the service client.
      content: new Deployments(client)
  - uid: 'azure-arm-resource.Deployments#client'
    id: 'azure-arm-resource.Deployments#client'
    parent: azure-arm-resource.Deployments
    name: client
    summary: ''
    fullName: azure-arm-resource.Deployments.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-resource.Deployments#deleteMethod'
    id: 'azure-arm-resource.Deployments#deleteMethod'
    parent: azure-arm-resource.Deployments
    name: 'deleteMethod(resourceGroupName, deploymentName, options, callback)'
    summary: >-
      Deletes a deployment from the deployment history.


      A template deployment that is currently running cannot be deleted.
      Deleting

      a template deployment removes the associated deployment operations.

      Deleting a template deployment does not affect the state of the resource

      group. This is an asynchronous operation that returns a status of 202

      until the template deployment is successfully deleted. The Location

      response header contains the URI that is used to obtain the status of the

      process. While the process is running, a call to the URI in the Location

      header returns a status of 202. When the process finishes, the URI in the

      Location header returns a status of 204 on success. If the asynchronous

      request failed, the URI in the Location header returns an error-level

      status code.
    fullName: >-
      azure-arm-resource.Deployments.deleteMethod(resourceGroupName,
      deploymentName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group with the
            deployment to delete. The name is case insensitive.
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function deleteMethod(resourceGroupName, deploymentName, options,
        callback)
    children:
      - 'azure-arm-resource.Deployments#deleteMethod~client'
      - 'azure-arm-resource.Deployments#deleteMethod~callback'
      - 'azure-arm-resource.Deployments#deleteMethod~options'
  - uid: 'azure-arm-resource.Deployments#beginDeleteMethod'
    id: 'azure-arm-resource.Deployments#beginDeleteMethod'
    parent: azure-arm-resource.Deployments
    name: 'beginDeleteMethod(resourceGroupName, deploymentName, options, callback)'
    summary: >-
      Deletes a deployment from the deployment history.


      A template deployment that is currently running cannot be deleted.
      Deleting

      a template deployment removes the associated deployment operations.

      Deleting a template deployment does not affect the state of the resource

      group. This is an asynchronous operation that returns a status of 202

      until the template deployment is successfully deleted. The Location

      response header contains the URI that is used to obtain the status of the

      process. While the process is running, a call to the URI in the Location

      header returns a status of 202. When the process finishes, the URI in the

      Location header returns a status of 204 on success. If the asynchronous

      request failed, the URI in the Location header returns an error-level

      status code.
    fullName: >-
      azure-arm-resource.Deployments.beginDeleteMethod(resourceGroupName,
      deploymentName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group with the
            deployment to delete. The name is case insensitive.
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function beginDeleteMethod(resourceGroupName, deploymentName, options,
        callback)
    children:
      - 'azure-arm-resource.Deployments#beginDeleteMethod~client'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~callback'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~options'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~baseUrl'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~requestUrl'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~requestUrl'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~requestUrl'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~requestUrl'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~queryParameters'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~requestUrl'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~httpRequest'
      - 'azure-arm-resource.Deployments#beginDeleteMethod~headerName'
  - uid: 'azure-arm-resource.Deployments#checkExistence'
    id: 'azure-arm-resource.Deployments#checkExistence'
    parent: azure-arm-resource.Deployments
    name: 'checkExistence(resourceGroupName, deploymentName, options, callback)'
    summary: Checks whether the deployment exists.
    fullName: >-
      azure-arm-resource.Deployments.checkExistence(resourceGroupName,
      deploymentName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group with the
            deployment to check. The name is case insensitive.
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to check.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {boolean} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function checkExistence(resourceGroupName, deploymentName, options,
        callback)
    children:
      - 'azure-arm-resource.Deployments#checkExistence~client'
      - 'azure-arm-resource.Deployments#checkExistence~callback'
      - 'azure-arm-resource.Deployments#checkExistence~options'
      - 'azure-arm-resource.Deployments#checkExistence~baseUrl'
      - 'azure-arm-resource.Deployments#checkExistence~requestUrl'
      - 'azure-arm-resource.Deployments#checkExistence~requestUrl'
      - 'azure-arm-resource.Deployments#checkExistence~requestUrl'
      - 'azure-arm-resource.Deployments#checkExistence~requestUrl'
      - 'azure-arm-resource.Deployments#checkExistence~queryParameters'
      - 'azure-arm-resource.Deployments#checkExistence~requestUrl'
      - 'azure-arm-resource.Deployments#checkExistence~httpRequest'
      - 'azure-arm-resource.Deployments#checkExistence~headerName'
  - uid: 'azure-arm-resource.Deployments#createOrUpdate'
    id: 'azure-arm-resource.Deployments#createOrUpdate'
    parent: azure-arm-resource.Deployments
    name: >-
      createOrUpdate(resourceGroupName, deploymentName, parameters, options,
      callback)
    summary: >-
      Deploys resources to a resource group.


      You can provide the template and parameters directly in the request or
      link

      to JSON files.
    fullName: >-
      azure-arm-resource.Deployments.createOrUpdate(resourceGroupName,
      deploymentName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to deploy

            the resources to. The name is case insensitive. The resource group
            must

            already exist.
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Additional parameters supplied to the operation.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
          optional: true
        - id: parameters.properties.template
          type:
            - object
          description: >-
            The template content. You

            use this element when you want to pass the template syntax directly
            in the

            request rather than link to an existing template. It can be a
            JObject or

            well-formed JSON string. Use either the templateLink property or the

            template property, but not both.
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: >-
            The URI of the

            template. Use either the templateLink property or the template
            property,

            but not both.
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: |-
            The URI of the
            template to deploy.
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: |-
            If
            included, must match the ContentVersion in the template.
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: >-
            Name and value pairs

            that define the deployment parameters for the template. You use this

            element when you want to provide the parameter values directly in
            the

            request rather than link to an existing parameter file. Use either
            the

            parametersLink property or the parameters property, but not both. It
            can

            be a JObject or a well formed JSON string.
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: >-
            The URI of

            parameters file. You use this element to link to an existing
            parameters

            file. Use either the parametersLink property or the parameters
            property,

            but not both.
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: |-
            The URI of the
            parameters file.
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: |-
            If
            included, must match the ContentVersion in the template.
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: >-
            The mode that is used to deploy

            resources. This value can be either Incremental or Complete. In

            Incremental mode, resources are deployed without deleting existing

            resources that are not included in the template. In Complete mode,

            resources are deployed and existing resources in the resource group
            that

            are not included in the template are deleted. Be careful when using

            Complete mode as you may unintentionally delete resources. Possible
            values

            include: 'Incremental', 'Complete'
        - id: parameters.properties.debugSetting
          type:
            - object
          description: |-
            The debug setting of
            the deployment.
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: >-
            Specifies

            the type of information to log for debugging. The permitted values
            are

            none, requestContent, responseContent, or both requestContent and

            responseContent separated by a comma. The default is none. When
            setting

            this value, carefully consider the type of information you are
            passing in

            during deployment. By logging information about the request or
            response,

            you could potentially expose sensitive data that is retrieved
            through the

            deployment operations.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:DeploymentExtended> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdate(resourceGroupName, deploymentName, parameters,
        options, callback)
    children:
      - 'azure-arm-resource.Deployments#createOrUpdate~client'
      - 'azure-arm-resource.Deployments#createOrUpdate~callback'
      - 'azure-arm-resource.Deployments#createOrUpdate~options'
  - uid: 'azure-arm-resource.Deployments#beginCreateOrUpdate'
    id: 'azure-arm-resource.Deployments#beginCreateOrUpdate'
    parent: azure-arm-resource.Deployments
    name: >-
      beginCreateOrUpdate(resourceGroupName, deploymentName, parameters,
      options, callback)
    summary: >-
      Deploys resources to a resource group.


      You can provide the template and parameters directly in the request or
      link

      to JSON files.
    fullName: >-
      azure-arm-resource.Deployments.beginCreateOrUpdate(resourceGroupName,
      deploymentName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group to deploy

            the resources to. The name is case insensitive. The resource group
            must

            already exist.
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Additional parameters supplied to the operation.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
          optional: true
        - id: parameters.properties.template
          type:
            - object
          description: >-
            The template content. You

            use this element when you want to pass the template syntax directly
            in the

            request rather than link to an existing template. It can be a
            JObject or

            well-formed JSON string. Use either the templateLink property or the

            template property, but not both.
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: >-
            The URI of the

            template. Use either the templateLink property or the template
            property,

            but not both.
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: |-
            The URI of the
            template to deploy.
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: |-
            If
            included, must match the ContentVersion in the template.
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: >-
            Name and value pairs

            that define the deployment parameters for the template. You use this

            element when you want to provide the parameter values directly in
            the

            request rather than link to an existing parameter file. Use either
            the

            parametersLink property or the parameters property, but not both. It
            can

            be a JObject or a well formed JSON string.
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: >-
            The URI of

            parameters file. You use this element to link to an existing
            parameters

            file. Use either the parametersLink property or the parameters
            property,

            but not both.
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: |-
            The URI of the
            parameters file.
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: |-
            If
            included, must match the ContentVersion in the template.
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: >-
            The mode that is used to deploy

            resources. This value can be either Incremental or Complete. In

            Incremental mode, resources are deployed without deleting existing

            resources that are not included in the template. In Complete mode,

            resources are deployed and existing resources in the resource group
            that

            are not included in the template are deleted. Be careful when using

            Complete mode as you may unintentionally delete resources. Possible
            values

            include: 'Incremental', 'Complete'
        - id: parameters.properties.debugSetting
          type:
            - object
          description: |-
            The debug setting of
            the deployment.
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: >-
            Specifies

            the type of information to log for debugging. The permitted values
            are

            none, requestContent, responseContent, or both requestContent and

            responseContent separated by a comma. The default is none. When
            setting

            this value, carefully consider the type of information you are
            passing in

            during deployment. By logging information about the request or
            response,

            you could potentially expose sensitive data that is retrieved
            through the

            deployment operations.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:DeploymentExtended> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function beginCreateOrUpdate(resourceGroupName, deploymentName,
        parameters, options, callback)
    children:
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~client'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~callback'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~options'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~baseUrl'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~queryParameters'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestUrl'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~httpRequest'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~headerName'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestContent'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestModel'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestModelMapper'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestModel'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~requestContent'
      - 'azure-arm-resource.Deployments#beginCreateOrUpdate~serializationError'
  - uid: 'azure-arm-resource.Deployments#get'
    id: 'azure-arm-resource.Deployments#get'
    parent: azure-arm-resource.Deployments
    name: 'get(resourceGroupName, deploymentName, options, callback)'
    summary: Gets a deployment.
    fullName: >-
      azure-arm-resource.Deployments.get(resourceGroupName, deploymentName,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group. The name
            is case insensitive.
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:DeploymentExtended> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function get(resourceGroupName, deploymentName, options, callback)'
    children:
      - 'azure-arm-resource.Deployments#get~client'
      - 'azure-arm-resource.Deployments#get~callback'
      - 'azure-arm-resource.Deployments#get~options'
      - 'azure-arm-resource.Deployments#get~baseUrl'
      - 'azure-arm-resource.Deployments#get~requestUrl'
      - 'azure-arm-resource.Deployments#get~requestUrl'
      - 'azure-arm-resource.Deployments#get~requestUrl'
      - 'azure-arm-resource.Deployments#get~requestUrl'
      - 'azure-arm-resource.Deployments#get~queryParameters'
      - 'azure-arm-resource.Deployments#get~requestUrl'
      - 'azure-arm-resource.Deployments#get~httpRequest'
      - 'azure-arm-resource.Deployments#get~headerName'
  - uid: 'azure-arm-resource.Deployments#cancel'
    id: 'azure-arm-resource.Deployments#cancel'
    parent: azure-arm-resource.Deployments
    name: 'cancel(resourceGroupName, deploymentName, options, callback)'
    summary: |-
      Cancels a currently running template deployment.

      You can cancel a deployment only if the provisioningState is Accepted or
      Running. After the deployment is canceled, the provisioningState is set to
      Canceled. Canceling a template deployment stops the currently running
      template deployment and leaves the resource group partially deployed.
    fullName: >-
      azure-arm-resource.Deployments.cancel(resourceGroupName, deploymentName,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group. The name
            is case insensitive.
        - id: deploymentName
          type:
            - string
          description: The name of the deployment to cancel.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function cancel(resourceGroupName, deploymentName, options, callback)'
    children:
      - 'azure-arm-resource.Deployments#cancel~client'
      - 'azure-arm-resource.Deployments#cancel~callback'
      - 'azure-arm-resource.Deployments#cancel~options'
      - 'azure-arm-resource.Deployments#cancel~baseUrl'
      - 'azure-arm-resource.Deployments#cancel~requestUrl'
      - 'azure-arm-resource.Deployments#cancel~requestUrl'
      - 'azure-arm-resource.Deployments#cancel~requestUrl'
      - 'azure-arm-resource.Deployments#cancel~requestUrl'
      - 'azure-arm-resource.Deployments#cancel~queryParameters'
      - 'azure-arm-resource.Deployments#cancel~requestUrl'
      - 'azure-arm-resource.Deployments#cancel~httpRequest'
      - 'azure-arm-resource.Deployments#cancel~headerName'
  - uid: 'azure-arm-resource.Deployments#validate'
    id: 'azure-arm-resource.Deployments#validate'
    parent: azure-arm-resource.Deployments
    name: 'validate(resourceGroupName, deploymentName, parameters, options, callback)'
    summary: |-
      Validates whether the specified template is syntactically correct and will
      be accepted by Azure Resource Manager..
    fullName: >-
      azure-arm-resource.Deployments.validate(resourceGroupName, deploymentName,
      parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group the
            template will be deployed to. The name is case insensitive.
        - id: deploymentName
          type:
            - string
          description: The name of the deployment.
        - id: parameters
          type:
            - object
          description: Parameters to validate.
        - id: parameters.properties
          type:
            - object
          description: The deployment properties.
          optional: true
        - id: parameters.properties.template
          type:
            - object
          description: >-
            The template content. You

            use this element when you want to pass the template syntax directly
            in the

            request rather than link to an existing template. It can be a
            JObject or

            well-formed JSON string. Use either the templateLink property or the

            template property, but not both.
          optional: true
        - id: parameters.properties.templateLink
          type:
            - object
          description: >-
            The URI of the

            template. Use either the templateLink property or the template
            property,

            but not both.
          optional: true
        - id: parameters.properties.templateLink.uri
          type:
            - string
          description: |-
            The URI of the
            template to deploy.
        - id: parameters.properties.templateLink.contentVersion
          type:
            - string
          description: |-
            If
            included, must match the ContentVersion in the template.
          optional: true
        - id: parameters.properties.parameters
          type:
            - object
          description: >-
            Name and value pairs

            that define the deployment parameters for the template. You use this

            element when you want to provide the parameter values directly in
            the

            request rather than link to an existing parameter file. Use either
            the

            parametersLink property or the parameters property, but not both. It
            can

            be a JObject or a well formed JSON string.
          optional: true
        - id: parameters.properties.parametersLink
          type:
            - object
          description: >-
            The URI of

            parameters file. You use this element to link to an existing
            parameters

            file. Use either the parametersLink property or the parameters
            property,

            but not both.
          optional: true
        - id: parameters.properties.parametersLink.uri
          type:
            - string
          description: |-
            The URI of the
            parameters file.
        - id: parameters.properties.parametersLink.contentVersion
          type:
            - string
          description: |-
            If
            included, must match the ContentVersion in the template.
          optional: true
        - id: parameters.properties.mode
          type:
            - string
          description: >-
            The mode that is used to deploy

            resources. This value can be either Incremental or Complete. In

            Incremental mode, resources are deployed without deleting existing

            resources that are not included in the template. In Complete mode,

            resources are deployed and existing resources in the resource group
            that

            are not included in the template are deleted. Be careful when using

            Complete mode as you may unintentionally delete resources. Possible
            values

            include: 'Incremental', 'Complete'
        - id: parameters.properties.debugSetting
          type:
            - object
          description: |-
            The debug setting of
            the deployment.
          optional: true
        - id: parameters.properties.debugSetting.detailLevel
          type:
            - string
          description: >-
            Specifies

            the type of information to log for debugging. The permitted values
            are

            none, requestContent, responseContent, or both requestContent and

            responseContent separated by a comma. The default is none. When
            setting

            this value, carefully consider the type of information you are
            passing in

            during deployment. By logging information about the request or
            response,

            you could potentially expose sensitive data that is retrieved
            through the

            deployment operations.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:DeploymentValidateResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function validate(resourceGroupName, deploymentName, parameters,
        options, callback)
    children:
      - 'azure-arm-resource.Deployments#validate~client'
      - 'azure-arm-resource.Deployments#validate~callback'
      - 'azure-arm-resource.Deployments#validate~options'
      - 'azure-arm-resource.Deployments#validate~baseUrl'
      - 'azure-arm-resource.Deployments#validate~requestUrl'
      - 'azure-arm-resource.Deployments#validate~requestUrl'
      - 'azure-arm-resource.Deployments#validate~requestUrl'
      - 'azure-arm-resource.Deployments#validate~requestUrl'
      - 'azure-arm-resource.Deployments#validate~queryParameters'
      - 'azure-arm-resource.Deployments#validate~requestUrl'
      - 'azure-arm-resource.Deployments#validate~httpRequest'
      - 'azure-arm-resource.Deployments#validate~headerName'
      - 'azure-arm-resource.Deployments#validate~requestContent'
      - 'azure-arm-resource.Deployments#validate~requestModel'
      - 'azure-arm-resource.Deployments#validate~requestModelMapper'
      - 'azure-arm-resource.Deployments#validate~requestModel'
      - 'azure-arm-resource.Deployments#validate~requestContent'
      - 'azure-arm-resource.Deployments#validate~serializationError'
  - uid: 'azure-arm-resource.Deployments#exportTemplate'
    id: 'azure-arm-resource.Deployments#exportTemplate'
    parent: azure-arm-resource.Deployments
    name: 'exportTemplate(resourceGroupName, deploymentName, options, callback)'
    summary: Exports the template used for specified deployment.
    fullName: >-
      azure-arm-resource.Deployments.exportTemplate(resourceGroupName,
      deploymentName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group. The name
            is case insensitive.
        - id: deploymentName
          type:
            - string
          description: |-
            The name of the deployment from which to get
            the template.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:DeploymentExportResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function exportTemplate(resourceGroupName, deploymentName, options,
        callback)
    children:
      - 'azure-arm-resource.Deployments#exportTemplate~client'
      - 'azure-arm-resource.Deployments#exportTemplate~callback'
      - 'azure-arm-resource.Deployments#exportTemplate~options'
      - 'azure-arm-resource.Deployments#exportTemplate~baseUrl'
      - 'azure-arm-resource.Deployments#exportTemplate~requestUrl'
      - 'azure-arm-resource.Deployments#exportTemplate~requestUrl'
      - 'azure-arm-resource.Deployments#exportTemplate~requestUrl'
      - 'azure-arm-resource.Deployments#exportTemplate~requestUrl'
      - 'azure-arm-resource.Deployments#exportTemplate~queryParameters'
      - 'azure-arm-resource.Deployments#exportTemplate~requestUrl'
      - 'azure-arm-resource.Deployments#exportTemplate~httpRequest'
      - 'azure-arm-resource.Deployments#exportTemplate~headerName'
  - uid: 'azure-arm-resource.Deployments#list'
    id: 'azure-arm-resource.Deployments#list'
    parent: azure-arm-resource.Deployments
    name: 'list(resourceGroupName, options, callback)'
    summary: Get all the deployments for a resource group.
    fullName: 'azure-arm-resource.Deployments.list(resourceGroupName, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group with the
            deployments to get. The name is case insensitive.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: |-
            The filter to apply on the operation. For
            example, you can use $filter=provisioningState eq '{state}'.
          optional: true
        - id: options.top
          type:
            - number
          description: |-
            The number of results to get. If null is
            passed, returns all deployments.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:DeploymentListResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function list(resourceGroupName, options, callback)'
    children:
      - 'azure-arm-resource.Deployments#list~client'
      - 'azure-arm-resource.Deployments#list~callback'
      - 'azure-arm-resource.Deployments#list~options'
      - 'azure-arm-resource.Deployments#list~filter'
      - 'azure-arm-resource.Deployments#list~top'
      - 'azure-arm-resource.Deployments#list~baseUrl'
      - 'azure-arm-resource.Deployments#list~requestUrl'
      - 'azure-arm-resource.Deployments#list~requestUrl'
      - 'azure-arm-resource.Deployments#list~requestUrl'
      - 'azure-arm-resource.Deployments#list~queryParameters'
      - 'azure-arm-resource.Deployments#list~requestUrl'
      - 'azure-arm-resource.Deployments#list~httpRequest'
      - 'azure-arm-resource.Deployments#list~headerName'
  - uid: 'azure-arm-resource.Deployments#listNext'
    id: 'azure-arm-resource.Deployments#listNext'
    parent: azure-arm-resource.Deployments
    name: 'listNext(nextPageLink, options, callback)'
    summary: Get all the deployments for a resource group.
    fullName: 'azure-arm-resource.Deployments.listNext(nextPageLink, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:DeploymentListResult> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-resource.Deployments#listNext~client'
      - 'azure-arm-resource.Deployments#listNext~callback'
      - 'azure-arm-resource.Deployments#listNext~options'
      - 'azure-arm-resource.Deployments#listNext~requestUrl'
      - 'azure-arm-resource.Deployments#listNext~requestUrl'
      - 'azure-arm-resource.Deployments#listNext~httpRequest'
      - 'azure-arm-resource.Deployments#listNext~headerName'
references:
  - uid: azure-arm-resource.ResourceManagementClient
    name: ResourceManagementClient
    fullName: azure-arm-resource.ResourceManagementClient
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: number
    name: number
    fullName: number
    isExternal: true

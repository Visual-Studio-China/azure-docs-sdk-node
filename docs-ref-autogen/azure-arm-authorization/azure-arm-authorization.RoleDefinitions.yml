### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-authorization.RoleDefinitions
    id: azure-arm-authorization.RoleDefinitions
    name: RoleDefinitions
    summary: |-
      RoleDefinitions
      __NOTE__: An instance of this class is automatically created for an
      instance of the AuthorizationManagementClient.
      Initializes a new instance of the RoleDefinitions class.
    fullName: azure-arm-authorization.RoleDefinitions
    type: Class
    children:
      - 'azure-arm-authorization.RoleDefinitions.#ctor'
      - 'azure-arm-authorization.RoleDefinitions#client'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod'
      - 'azure-arm-authorization.RoleDefinitions#get'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate'
      - 'azure-arm-authorization.RoleDefinitions#getById'
      - 'azure-arm-authorization.RoleDefinitions#list'
      - 'azure-arm-authorization.RoleDefinitions#listNext'
  - id: 'azure-arm-authorization.RoleDefinitions.#ctor'
    uid: 'azure-arm-authorization.RoleDefinitions.#ctor'
    parent: azure-arm-authorization.RoleDefinitions
    name: RoleDefinitions(client)
    fullName: azure-arm-authorization.RoleDefinitions.RoleDefinitions(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-authorization.AuthorizationManagementClient
          description: Reference to the service client.
      content: new RoleDefinitions(client)
  - uid: 'azure-arm-authorization.RoleDefinitions#client'
    id: 'azure-arm-authorization.RoleDefinitions#client'
    parent: azure-arm-authorization.RoleDefinitions
    name: client
    summary: ''
    fullName: azure-arm-authorization.RoleDefinitions.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-authorization.RoleDefinitions#deleteMethod'
    id: 'azure-arm-authorization.RoleDefinitions#deleteMethod'
    parent: azure-arm-authorization.RoleDefinitions
    name: 'deleteMethod(scope, roleDefinitionId, options, callback)'
    summary: Deletes the role definition.
    fullName: >-
      azure-arm-authorization.RoleDefinitions.deleteMethod(scope,
      roleDefinitionId, options, callback)
    type: Method
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: Scope
        - id: roleDefinitionId
          type:
            - string
          description: Role definition id.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:RoleDefinition> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function deleteMethod(scope, roleDefinitionId, options, callback)'
    children:
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~client'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~callback'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~options'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~regex'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~queryParameters'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~httpRequest'
      - 'azure-arm-authorization.RoleDefinitions#deleteMethod~headerName'
  - uid: 'azure-arm-authorization.RoleDefinitions#get'
    id: 'azure-arm-authorization.RoleDefinitions#get'
    parent: azure-arm-authorization.RoleDefinitions
    name: 'get(scope, roleDefinitionId, options, callback)'
    summary: Get role definition by name (GUID).
    fullName: >-
      azure-arm-authorization.RoleDefinitions.get(scope, roleDefinitionId,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: Scope
        - id: roleDefinitionId
          type:
            - string
          description: Role definition Id
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:RoleDefinition> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function get(scope, roleDefinitionId, options, callback)'
    children:
      - 'azure-arm-authorization.RoleDefinitions#get~client'
      - 'azure-arm-authorization.RoleDefinitions#get~callback'
      - 'azure-arm-authorization.RoleDefinitions#get~options'
      - 'azure-arm-authorization.RoleDefinitions#get~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#get~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#get~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#get~regex'
      - 'azure-arm-authorization.RoleDefinitions#get~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#get~queryParameters'
      - 'azure-arm-authorization.RoleDefinitions#get~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#get~httpRequest'
      - 'azure-arm-authorization.RoleDefinitions#get~headerName'
  - uid: 'azure-arm-authorization.RoleDefinitions#createOrUpdate'
    id: 'azure-arm-authorization.RoleDefinitions#createOrUpdate'
    parent: azure-arm-authorization.RoleDefinitions
    name: 'createOrUpdate(scope, roleDefinitionId, roleDefinition, options, callback)'
    summary: Creates or updates a role definition.
    fullName: >-
      azure-arm-authorization.RoleDefinitions.createOrUpdate(scope,
      roleDefinitionId, roleDefinition, options, callback)
    type: Method
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: Scope
        - id: roleDefinitionId
          type:
            - string
          description: Role definition id.
        - id: roleDefinition
          type:
            - object
          description: Role definition.
        - id: roleDefinition.id
          type:
            - string
          description: Gets or sets role definition id.
          optional: true
        - id: roleDefinition.name
          type:
            - string
          description: Gets or sets role definition name.
          optional: true
        - id: roleDefinition.type
          type:
            - string
          description: Gets or sets role definition type.
          optional: true
        - id: roleDefinition.properties
          type:
            - object
          description: |-
            Gets or sets role definition
            properties.
          optional: true
        - id: roleDefinition.properties.roleName
          type:
            - string
          description: Gets or sets role name.
          optional: true
        - id: roleDefinition.properties.description
          type:
            - string
          description: |-
            Gets or sets role
            definition description.
          optional: true
        - id: roleDefinition.properties.type
          type:
            - string
          description: Gets or sets role type.
          optional: true
        - id: roleDefinition.properties.permissions
          type:
            - array
          description: |-
            Gets or sets role
            definition permissions.
          optional: true
        - id: roleDefinition.properties.assignableScopes
          type:
            - array
          description: |-
            Gets or sets
            role definition assignable scopes.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:RoleDefinition> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function createOrUpdate(scope, roleDefinitionId, roleDefinition,
        options, callback)
    children:
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~client'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~callback'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~options'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~regex'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~queryParameters'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~httpRequest'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~headerName'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestContent'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestModel'
      - >-
        azure-arm-authorization.RoleDefinitions#createOrUpdate~requestModelMapper
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestModel'
      - 'azure-arm-authorization.RoleDefinitions#createOrUpdate~requestContent'
      - >-
        azure-arm-authorization.RoleDefinitions#createOrUpdate~serializationError
  - uid: 'azure-arm-authorization.RoleDefinitions#getById'
    id: 'azure-arm-authorization.RoleDefinitions#getById'
    parent: azure-arm-authorization.RoleDefinitions
    name: 'getById(roleDefinitionId, options, callback)'
    summary: Get role definition by name (GUID).
    fullName: >-
      azure-arm-authorization.RoleDefinitions.getById(roleDefinitionId, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: roleDefinitionId
          type:
            - string
          description: Fully qualified role definition Id
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:RoleDefinition> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function getById(roleDefinitionId, options, callback)'
    children:
      - 'azure-arm-authorization.RoleDefinitions#getById~client'
      - 'azure-arm-authorization.RoleDefinitions#getById~callback'
      - 'azure-arm-authorization.RoleDefinitions#getById~options'
      - 'azure-arm-authorization.RoleDefinitions#getById~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#getById~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#getById~regex'
      - 'azure-arm-authorization.RoleDefinitions#getById~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#getById~queryParameters'
      - 'azure-arm-authorization.RoleDefinitions#getById~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#getById~httpRequest'
      - 'azure-arm-authorization.RoleDefinitions#getById~headerName'
  - uid: 'azure-arm-authorization.RoleDefinitions#list'
    id: 'azure-arm-authorization.RoleDefinitions#list'
    parent: azure-arm-authorization.RoleDefinitions
    name: 'list(scope, options, callback)'
    summary: |-
      Get all role definitions that are applicable at scope and above. Use
      atScopeAndBelow filter to search below the given scope as well
    fullName: 'azure-arm-authorization.RoleDefinitions.list(scope, options, callback)'
    type: Method
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: Scope
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: The filter to apply on the operation.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:RoleDefinitionListResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function list(scope, options, callback)'
    children:
      - 'azure-arm-authorization.RoleDefinitions#list~client'
      - 'azure-arm-authorization.RoleDefinitions#list~callback'
      - 'azure-arm-authorization.RoleDefinitions#list~options'
      - 'azure-arm-authorization.RoleDefinitions#list~filter'
      - 'azure-arm-authorization.RoleDefinitions#list~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#list~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#list~regex'
      - 'azure-arm-authorization.RoleDefinitions#list~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#list~queryParameters'
      - 'azure-arm-authorization.RoleDefinitions#list~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#list~httpRequest'
      - 'azure-arm-authorization.RoleDefinitions#list~headerName'
  - uid: 'azure-arm-authorization.RoleDefinitions#listNext'
    id: 'azure-arm-authorization.RoleDefinitions#listNext'
    parent: azure-arm-authorization.RoleDefinitions
    name: 'listNext(nextPageLink, options, callback)'
    summary: |-
      Get all role definitions that are applicable at scope and above. Use
      atScopeAndBelow filter to search below the given scope as well
    fullName: >-
      azure-arm-authorization.RoleDefinitions.listNext(nextPageLink, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: |-
            The NextLink from the previous successful call
            to List operation.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:RoleDefinitionListResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listNext(nextPageLink, options, callback)'
    children:
      - 'azure-arm-authorization.RoleDefinitions#listNext~client'
      - 'azure-arm-authorization.RoleDefinitions#listNext~callback'
      - 'azure-arm-authorization.RoleDefinitions#listNext~options'
      - 'azure-arm-authorization.RoleDefinitions#listNext~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#listNext~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#listNext~regex'
      - 'azure-arm-authorization.RoleDefinitions#listNext~requestUrl'
      - 'azure-arm-authorization.RoleDefinitions#listNext~httpRequest'
      - 'azure-arm-authorization.RoleDefinitions#listNext~headerName'
references:
  - uid: azure-arm-authorization.AuthorizationManagementClient
    name: AuthorizationManagementClient
    fullName: azure-arm-authorization.AuthorizationManagementClient
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: array
    name: array
    fullName: array
    isExternal: true

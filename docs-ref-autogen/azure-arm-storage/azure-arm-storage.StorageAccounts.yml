### YamlMime:JavaScriptReference
items:
  - uid: azure-arm-storage.StorageAccounts
    id: azure-arm-storage.StorageAccounts
    name: StorageAccounts
    summary: |-
      StorageAccounts
      __NOTE__: An instance of this class is automatically created for an
      instance of the StorageManagementClient.
      Initializes a new instance of the StorageAccounts class.
    fullName: azure-arm-storage.StorageAccounts
    type: Class
    children:
      - 'azure-arm-storage.StorageAccounts.#ctor'
      - 'azure-arm-storage.StorageAccounts#client'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability'
      - 'azure-arm-storage.StorageAccounts#create'
      - 'azure-arm-storage.StorageAccounts#deleteMethod'
      - 'azure-arm-storage.StorageAccounts#getProperties'
      - 'azure-arm-storage.StorageAccounts#update'
      - 'azure-arm-storage.StorageAccounts#list'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup'
      - 'azure-arm-storage.StorageAccounts#listKeys'
      - 'azure-arm-storage.StorageAccounts#regenerateKey'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS'
      - 'azure-arm-storage.StorageAccounts#beginCreate'
  - id: 'azure-arm-storage.StorageAccounts.#ctor'
    uid: 'azure-arm-storage.StorageAccounts.#ctor'
    parent: azure-arm-storage.StorageAccounts
    name: StorageAccounts(client)
    fullName: azure-arm-storage.StorageAccounts.StorageAccounts(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-storage.StorageManagementClient
          description: Reference to the service client.
      content: new StorageAccounts(client)
  - uid: 'azure-arm-storage.StorageAccounts#client'
    id: 'azure-arm-storage.StorageAccounts#client'
    parent: azure-arm-storage.StorageAccounts
    name: client
    summary: ''
    fullName: azure-arm-storage.StorageAccounts.client
    type: Field
    syntax:
      content: client
  - uid: 'azure-arm-storage.StorageAccounts#checkNameAvailability'
    id: 'azure-arm-storage.StorageAccounts#checkNameAvailability'
    parent: azure-arm-storage.StorageAccounts
    name: 'checkNameAvailability(name, options, callback)'
    summary: Checks that the storage account name is valid and is not already in use.
    fullName: >-
      azure-arm-storage.StorageAccounts.checkNameAvailability(name, options,
      callback)
    type: Method
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:CheckNameAvailabilityResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function checkNameAvailability(name, options, callback)'
    children:
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~client'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~callback'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~options'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~accountName'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~baseUrl'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~requestUrl'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~requestUrl'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~queryParameters'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~requestUrl'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~httpRequest'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~headerName'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~requestContent'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~requestModel'
      - >-
        azure-arm-storage.StorageAccounts#checkNameAvailability~requestModelMapper
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~requestModel'
      - 'azure-arm-storage.StorageAccounts#checkNameAvailability~requestContent'
      - >-
        azure-arm-storage.StorageAccounts#checkNameAvailability~serializationError
  - uid: 'azure-arm-storage.StorageAccounts#create'
    id: 'azure-arm-storage.StorageAccounts#create'
    parent: azure-arm-storage.StorageAccounts
    name: 'create(resourceGroupName, accountName, parameters, options, callback)'
    summary: >-
      Asynchronously creates a new storage account with the specified
      parameters.

      If an account is already created and a subsequent create request is issued

      with different properties, the account properties will be updated. If an

      account is already created and a subsequent create or update request is

      issued with the exact same set of properties, the request will succeed.
    fullName: >-
      azure-arm-storage.StorageAccounts.create(resourceGroupName, accountName,
      parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for the created
            account.
        - id: parameters.sku
          type:
            - object
          description: Required. Gets or sets the sku name.
        - id: parameters.sku.name
          type:
            - string
          description: >-
            Gets or sets the sku name. Required for

            account creation; optional for update. Note that in older versions,
            sku name

            was called accountType. Possible values include: 'Standard_LRS',

            'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
        - id: parameters.kind
          type:
            - string
          description: |-
            Required. Indicates the type of storage
            account. Possible values include: 'Storage', 'BlobStorage'
        - id: parameters.location
          type:
            - string
          description: >-
            Required. Gets or sets the location of

            the resource. This will be one of the supported and registered Azure
            Geo

            Regions (e.g. West US, East US, Southeast Asia, etc.). The geo
            region of a

            resource cannot be changed once it is created, but if an identical
            geo

            region is specified on update, the request will succeed.
        - id: parameters.tags
          type:
            - object
          description: >-
            Gets or sets a list of key value pairs

            that describe the resource. These tags can be used for viewing and
            grouping

            this resource (across resource groups). A maximum of 15 tags can be
            provided

            for a resource. Each tag must have a key with a length no greater
            than 128

            characters and a value with a length no greater than 256 characters.
          optional: true
        - id: parameters.customDomain
          type:
            - object
          description: >-
            User domain assigned to the

            storage account. Name is the CNAME source. Only one custom domain is

            supported per storage account at this time. To clear the existing
            custom

            domain, use an empty string for the custom domain name property.
          optional: true
        - id: parameters.customDomain.name
          type:
            - string
          description: |-
            Gets or sets the custom domain
            name assigned to the storage account. Name is the CNAME source.
        - id: parameters.customDomain.useSubDomain
          type:
            - boolean
          description: >-
            Indicates whether

            indirect CName validation is enabled. Default value is false. This
            should

            only be set on updates.
          optional: true
        - id: parameters.encryption
          type:
            - object
          description: >-
            Provides the encryption settings on

            the account. If left unspecified the account encryption settings
            will remain

            the same. The default setting is unencrypted.
          optional: true
        - id: parameters.encryption.services
          type:
            - object
          description: |-
            List of services which
            support encryption.
          optional: true
        - id: parameters.encryption.services.blob
          type:
            - object
          description: |-
            The encryption
            function of the blob storage service.
          optional: true
        - id: parameters.encryption.services.blob.enabled
          type:
            - boolean
          description: >-
            A boolean

            indicating whether or not the service encrypts the data as it is
            stored.
          optional: true
        - id: parameters.accessTier
          type:
            - string
          description: >-
            Required for storage accounts where

            kind = BlobStorage. The access tier used for billing. Possible
            values

            include: 'Hot', 'Cool'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:StorageAccount> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function create(resourceGroupName, accountName, parameters, options,
        callback)
    children:
      - 'azure-arm-storage.StorageAccounts#create~client'
      - 'azure-arm-storage.StorageAccounts#create~callback'
      - 'azure-arm-storage.StorageAccounts#create~options'
  - uid: 'azure-arm-storage.StorageAccounts#deleteMethod'
    id: 'azure-arm-storage.StorageAccounts#deleteMethod'
    parent: azure-arm-storage.StorageAccounts
    name: 'deleteMethod(resourceGroupName, accountName, options, callback)'
    summary: Deletes a storage account in Microsoft Azure.
    fullName: >-
      azure-arm-storage.StorageAccounts.deleteMethod(resourceGroupName,
      accountName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {null} [result]   - The deserialized result object.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function deleteMethod(resourceGroupName, accountName, options, callback)'
    children:
      - 'azure-arm-storage.StorageAccounts#deleteMethod~client'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~callback'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~options'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~baseUrl'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~requestUrl'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~requestUrl'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~requestUrl'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~requestUrl'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~queryParameters'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~requestUrl'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~httpRequest'
      - 'azure-arm-storage.StorageAccounts#deleteMethod~headerName'
  - uid: 'azure-arm-storage.StorageAccounts#getProperties'
    id: 'azure-arm-storage.StorageAccounts#getProperties'
    parent: azure-arm-storage.StorageAccounts
    name: 'getProperties(resourceGroupName, accountName, options, callback)'
    summary: |-
      Returns the properties for the specified storage account including but not
      limited to name, SKU name, location, and account status. The ListKeys
      operation should be used to retrieve storage keys.
    fullName: >-
      azure-arm-storage.StorageAccounts.getProperties(resourceGroupName,
      accountName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:StorageAccount> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function getProperties(resourceGroupName, accountName, options,
        callback)
    children:
      - 'azure-arm-storage.StorageAccounts#getProperties~client'
      - 'azure-arm-storage.StorageAccounts#getProperties~callback'
      - 'azure-arm-storage.StorageAccounts#getProperties~options'
      - 'azure-arm-storage.StorageAccounts#getProperties~baseUrl'
      - 'azure-arm-storage.StorageAccounts#getProperties~requestUrl'
      - 'azure-arm-storage.StorageAccounts#getProperties~requestUrl'
      - 'azure-arm-storage.StorageAccounts#getProperties~requestUrl'
      - 'azure-arm-storage.StorageAccounts#getProperties~requestUrl'
      - 'azure-arm-storage.StorageAccounts#getProperties~queryParameters'
      - 'azure-arm-storage.StorageAccounts#getProperties~requestUrl'
      - 'azure-arm-storage.StorageAccounts#getProperties~httpRequest'
      - 'azure-arm-storage.StorageAccounts#getProperties~headerName'
  - uid: 'azure-arm-storage.StorageAccounts#update'
    id: 'azure-arm-storage.StorageAccounts#update'
    parent: azure-arm-storage.StorageAccounts
    name: 'update(resourceGroupName, accountName, parameters, options, callback)'
    summary: >-
      The update operation can be used to update the SKU, encryption, access
      tier,

      or tags for a storage account. It can also be used to map the account to a

      custom domain. Only one custom domain is supported per storage account;
      the

      replacement/change of custom domain is not supported. In order to replace
      an

      old custom domain, the old value must be cleared/unregistered before a new

      value can be set. The update of multiple properties is supported. This
      call

      does not change the storage keys for the account. If you want to change
      the

      storage account keys, use the regenerate keys operation. The location and

      name of the storage account cannot be changed after creation.
    fullName: >-
      azure-arm-storage.StorageAccounts.update(resourceGroupName, accountName,
      parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for the updated
            account.
        - id: parameters.sku
          type:
            - object
          description: >-
            Gets or sets the SKU name. Note that the

            SKU name cannot be updated to Standard_ZRS or Premium_LRS, nor can
            accounts

            of those sku names be updated to any other value.
          optional: true
        - id: parameters.sku.name
          type:
            - string
          description: >-
            Gets or sets the sku name. Required for

            account creation; optional for update. Note that in older versions,
            sku name

            was called accountType. Possible values include: 'Standard_LRS',

            'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
        - id: parameters.tags
          type:
            - object
          description: >-
            Gets or sets a list of key value pairs

            that describe the resource. These tags can be used in viewing and
            grouping

            this resource (across resource groups). A maximum of 15 tags can be
            provided

            for a resource. Each tag must have a key no greater in length than
            128

            characters and a value no greater in length than 256 characters.
          optional: true
        - id: parameters.customDomain
          type:
            - object
          description: >-
            Custom domain assigned to the

            storage account by the user. Name is the CNAME source. Only one
            custom

            domain is supported per storage account at this time. To clear the
            existing

            custom domain, use an empty string for the custom domain name
            property.
          optional: true
        - id: parameters.customDomain.name
          type:
            - string
          description: |-
            Gets or sets the custom domain
            name assigned to the storage account. Name is the CNAME source.
        - id: parameters.customDomain.useSubDomain
          type:
            - boolean
          description: >-
            Indicates whether

            indirect CName validation is enabled. Default value is false. This
            should

            only be set on updates.
          optional: true
        - id: parameters.encryption
          type:
            - object
          description: |-
            Provides the encryption settings on
            the account. The default setting is unencrypted.
          optional: true
        - id: parameters.encryption.services
          type:
            - object
          description: |-
            List of services which
            support encryption.
          optional: true
        - id: parameters.encryption.services.blob
          type:
            - object
          description: |-
            The encryption
            function of the blob storage service.
          optional: true
        - id: parameters.encryption.services.blob.enabled
          type:
            - boolean
          description: >-
            A boolean

            indicating whether or not the service encrypts the data as it is
            stored.
          optional: true
        - id: parameters.accessTier
          type:
            - string
          description: >-
            Required for storage accounts where

            kind = BlobStorage. The access tier used for billing. Possible
            values

            include: 'Hot', 'Cool'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:StorageAccount> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function update(resourceGroupName, accountName, parameters, options,
        callback)
    children:
      - 'azure-arm-storage.StorageAccounts#update~client'
      - 'azure-arm-storage.StorageAccounts#update~callback'
      - 'azure-arm-storage.StorageAccounts#update~options'
      - 'azure-arm-storage.StorageAccounts#update~parameters'
      - 'azure-arm-storage.StorageAccounts#update~baseUrl'
      - 'azure-arm-storage.StorageAccounts#update~requestUrl'
      - 'azure-arm-storage.StorageAccounts#update~requestUrl'
      - 'azure-arm-storage.StorageAccounts#update~requestUrl'
      - 'azure-arm-storage.StorageAccounts#update~requestUrl'
      - 'azure-arm-storage.StorageAccounts#update~queryParameters'
      - 'azure-arm-storage.StorageAccounts#update~requestUrl'
      - 'azure-arm-storage.StorageAccounts#update~httpRequest'
      - 'azure-arm-storage.StorageAccounts#update~headerName'
      - 'azure-arm-storage.StorageAccounts#update~requestContent'
      - 'azure-arm-storage.StorageAccounts#update~requestModel'
      - 'azure-arm-storage.StorageAccounts#update~requestModelMapper'
      - 'azure-arm-storage.StorageAccounts#update~requestModel'
      - 'azure-arm-storage.StorageAccounts#update~requestContent'
      - 'azure-arm-storage.StorageAccounts#update~serializationError'
  - uid: 'azure-arm-storage.StorageAccounts#list'
    id: 'azure-arm-storage.StorageAccounts#list'
    parent: azure-arm-storage.StorageAccounts
    name: 'list(options, callback)'
    summary: |-
      Lists all the storage accounts available under the subscription. Note that
      storage keys are not returned; use the ListKeys operation for this.
    fullName: 'azure-arm-storage.StorageAccounts.list(options, callback)'
    type: Method
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:StorageAccountListResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function list(options, callback)'
    children:
      - 'azure-arm-storage.StorageAccounts#list~client'
      - 'azure-arm-storage.StorageAccounts#list~callback'
      - 'azure-arm-storage.StorageAccounts#list~options'
      - 'azure-arm-storage.StorageAccounts#list~baseUrl'
      - 'azure-arm-storage.StorageAccounts#list~requestUrl'
      - 'azure-arm-storage.StorageAccounts#list~requestUrl'
      - 'azure-arm-storage.StorageAccounts#list~queryParameters'
      - 'azure-arm-storage.StorageAccounts#list~requestUrl'
      - 'azure-arm-storage.StorageAccounts#list~httpRequest'
      - 'azure-arm-storage.StorageAccounts#list~headerName'
  - uid: 'azure-arm-storage.StorageAccounts#listByResourceGroup'
    id: 'azure-arm-storage.StorageAccounts#listByResourceGroup'
    parent: azure-arm-storage.StorageAccounts
    name: 'listByResourceGroup(resourceGroupName, options, callback)'
    summary: |-
      Lists all the storage accounts available under the given resource group.
      Note that storage keys are not returned; use the ListKeys operation for
      this.
    fullName: >-
      azure-arm-storage.StorageAccounts.listByResourceGroup(resourceGroupName,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:StorageAccountListResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listByResourceGroup(resourceGroupName, options, callback)'
    children:
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~client'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~callback'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~options'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~baseUrl'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~queryParameters'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~httpRequest'
      - 'azure-arm-storage.StorageAccounts#listByResourceGroup~headerName'
  - uid: 'azure-arm-storage.StorageAccounts#listKeys'
    id: 'azure-arm-storage.StorageAccounts#listKeys'
    parent: azure-arm-storage.StorageAccounts
    name: 'listKeys(resourceGroupName, accountName, options, callback)'
    summary: Lists the access keys for the specified storage account.
    fullName: >-
      azure-arm-storage.StorageAccounts.listKeys(resourceGroupName, accountName,
      options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:StorageAccountListKeysResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function listKeys(resourceGroupName, accountName, options, callback)'
    children:
      - 'azure-arm-storage.StorageAccounts#listKeys~client'
      - 'azure-arm-storage.StorageAccounts#listKeys~callback'
      - 'azure-arm-storage.StorageAccounts#listKeys~options'
      - 'azure-arm-storage.StorageAccounts#listKeys~baseUrl'
      - 'azure-arm-storage.StorageAccounts#listKeys~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listKeys~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listKeys~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listKeys~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listKeys~queryParameters'
      - 'azure-arm-storage.StorageAccounts#listKeys~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listKeys~httpRequest'
      - 'azure-arm-storage.StorageAccounts#listKeys~headerName'
  - uid: 'azure-arm-storage.StorageAccounts#regenerateKey'
    id: 'azure-arm-storage.StorageAccounts#regenerateKey'
    parent: azure-arm-storage.StorageAccounts
    name: 'regenerateKey(resourceGroupName, accountName, keyName, options, callback)'
    summary: Regenerates one of the access keys for the specified storage account.
    fullName: >-
      azure-arm-storage.StorageAccounts.regenerateKey(resourceGroupName,
      accountName, keyName, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: keyName
          type:
            - string
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:StorageAccountListKeysResult> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function regenerateKey(resourceGroupName, accountName, keyName, options,
        callback)
    children:
      - 'azure-arm-storage.StorageAccounts#regenerateKey~client'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~callback'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~options'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~regenerateKeyParameter'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~regenerateKeyParameter'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~baseUrl'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestUrl'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestUrl'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestUrl'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestUrl'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~queryParameters'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestUrl'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~httpRequest'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~headerName'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestContent'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestModel'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestModelMapper'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestModel'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~requestContent'
      - 'azure-arm-storage.StorageAccounts#regenerateKey~serializationError'
  - uid: 'azure-arm-storage.StorageAccounts#listAccountSAS'
    id: 'azure-arm-storage.StorageAccounts#listAccountSAS'
    parent: azure-arm-storage.StorageAccounts
    name: >-
      listAccountSAS(resourceGroupName, accountName, parameters, options,
      callback)
    summary: List SAS credentials of a storage account.
    fullName: >-
      azure-arm-storage.StorageAccounts.listAccountSAS(resourceGroupName,
      accountName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide to list SAS credentials
            for the storage account.
        - id: parameters.services
          type:
            - string
          description: >-
            The signed services accessible with the

            account SAS. Possible values include: Blob (b), Queue (q), Table
            (t), File

            (f). Possible values include: 'b', 'q', 't', 'f'
        - id: parameters.resourceTypes
          type:
            - string
          description: >-
            The signed resource types that are

            accessible with the account SAS. Service (s): Access to
            service-level APIs;

            Container (c): Access to container-level APIs; Object (o): Access to

            object-level APIs for blobs, queue messages, table entities, and
            files.

            Possible values include: 's', 'c', 'o'
        - id: parameters.permissions
          type:
            - string
          description: >-
            The signed permissions for the

            account SAS. Possible values include: Read (r), Write (w), Delete
            (d), List

            (l), Add (a), Create (c), Update (u) and Process (p). Possible
            values

            include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
        - id: parameters.iPAddressOrRange
          type:
            - string
          description: |-
            An IP address or a range of IP
            addresses from which to accept requests.
          optional: true
        - id: parameters.protocols
          type:
            - string
          description: >-
            The protocol permitted for a request

            made with the account SAS. Possible values include: 'https,http',
            'https'
          optional: true
        - id: parameters.sharedAccessStartTime
          type:
            - date
          description: |-
            The time at which the SAS
            becomes valid.
          optional: true
        - id: parameters.sharedAccessExpiryTime
          type:
            - date
          description: |-
            The time at which the shared
            access signature becomes invalid.
        - id: parameters.keyToSign
          type:
            - string
          description: |-
            The key to sign the account SAS token
            with.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ListAccountSasResponse> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function listAccountSAS(resourceGroupName, accountName, parameters,
        options, callback)
    children:
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~client'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~callback'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~options'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~baseUrl'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~queryParameters'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~httpRequest'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~headerName'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestContent'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestModel'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestModelMapper'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestModel'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~requestContent'
      - 'azure-arm-storage.StorageAccounts#listAccountSAS~serializationError'
  - uid: 'azure-arm-storage.StorageAccounts#listServiceSAS'
    id: 'azure-arm-storage.StorageAccounts#listServiceSAS'
    parent: azure-arm-storage.StorageAccounts
    name: >-
      listServiceSAS(resourceGroupName, accountName, parameters, options,
      callback)
    summary: List service SAS credentials of a specific resource.
    fullName: >-
      azure-arm-storage.StorageAccounts.listServiceSAS(resourceGroupName,
      accountName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide to list service SAS
            credentials.
        - id: parameters.canonicalizedResource
          type:
            - string
          description: |-
            The canonical path to the
            signed resource.
        - id: parameters.resource
          type:
            - string
          description: >-
            The signed services accessible with the

            service SAS. Possible values include: Blob (b), Container (c), File
            (f),

            Share (s). Possible values include: 'b', 'c', 'f', 's'
        - id: parameters.permissions
          type:
            - string
          description: >-
            The signed permissions for the

            service SAS. Possible values include: Read (r), Write (w), Delete
            (d), List

            (l), Add (a), Create (c), Update (u) and Process (p). Possible
            values

            include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
          optional: true
        - id: parameters.iPAddressOrRange
          type:
            - string
          description: |-
            An IP address or a range of IP
            addresses from which to accept requests.
          optional: true
        - id: parameters.protocols
          type:
            - string
          description: >-
            The protocol permitted for a request

            made with the account SAS. Possible values include: 'https,http',
            'https'
          optional: true
        - id: parameters.sharedAccessStartTime
          type:
            - date
          description: |-
            The time at which the SAS
            becomes valid.
          optional: true
        - id: parameters.sharedAccessExpiryTime
          type:
            - date
          description: |-
            The time at which the
            shared access signature becomes invalid.
          optional: true
        - id: parameters.identifier
          type:
            - string
          description: >-
            A unique value up to 64 characters

            in length that correlates to an access policy specified for the
            container,

            queue, or table.
          optional: true
        - id: parameters.partitionKeyStart
          type:
            - string
          description: The start of partition key.
          optional: true
        - id: parameters.partitionKeyEnd
          type:
            - string
          description: The end of partition key.
          optional: true
        - id: parameters.rowKeyStart
          type:
            - string
          description: The start of row key.
          optional: true
        - id: parameters.rowKeyEnd
          type:
            - string
          description: The end of row key.
          optional: true
        - id: parameters.keyToSign
          type:
            - string
          description: |-
            The key to sign the account SAS token
            with.
          optional: true
        - id: parameters.cacheControl
          type:
            - string
          description: |-
            The response header override for
            cache control.
          optional: true
        - id: parameters.contentDisposition
          type:
            - string
          description: |-
            The response header override
            for content disposition.
          optional: true
        - id: parameters.contentEncoding
          type:
            - string
          description: |-
            The response header override
            for content encoding.
          optional: true
        - id: parameters.contentLanguage
          type:
            - string
          description: |-
            The response header override
            for content language.
          optional: true
        - id: parameters.contentType
          type:
            - string
          description: |-
            The response header override for
            content type.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:ListServiceSasResponse> for more
                               information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function listServiceSAS(resourceGroupName, accountName, parameters,
        options, callback)
    children:
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~client'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~callback'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~options'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~baseUrl'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~queryParameters'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestUrl'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~httpRequest'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~headerName'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestContent'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestModel'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestModelMapper'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestModel'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~requestContent'
      - 'azure-arm-storage.StorageAccounts#listServiceSAS~serializationError'
  - uid: 'azure-arm-storage.StorageAccounts#beginCreate'
    id: 'azure-arm-storage.StorageAccounts#beginCreate'
    parent: azure-arm-storage.StorageAccounts
    name: 'beginCreate(resourceGroupName, accountName, parameters, options, callback)'
    summary: >-
      Asynchronously creates a new storage account with the specified
      parameters.

      If an account is already created and a subsequent create request is issued

      with different properties, the account properties will be updated. If an

      account is already created and a subsequent create or update request is

      issued with the exact same set of properties, the request will succeed.
    fullName: >-
      azure-arm-storage.StorageAccounts.beginCreate(resourceGroupName,
      accountName, parameters, options, callback)
    type: Method
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: |-
            The name of the resource group within the
            user's subscription. The name is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the

            specified resource group. Storage account names must be between 3
            and 24

            characters in length and use numbers and lower-case letters only.
        - id: parameters
          type:
            - object
          description: |-
            The parameters to provide for the created
            account.
        - id: parameters.sku
          type:
            - object
          description: Required. Gets or sets the sku name.
        - id: parameters.sku.name
          type:
            - string
          description: >-
            Gets or sets the sku name. Required for

            account creation; optional for update. Note that in older versions,
            sku name

            was called accountType. Possible values include: 'Standard_LRS',

            'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
        - id: parameters.kind
          type:
            - string
          description: |-
            Required. Indicates the type of storage
            account. Possible values include: 'Storage', 'BlobStorage'
        - id: parameters.location
          type:
            - string
          description: >-
            Required. Gets or sets the location of

            the resource. This will be one of the supported and registered Azure
            Geo

            Regions (e.g. West US, East US, Southeast Asia, etc.). The geo
            region of a

            resource cannot be changed once it is created, but if an identical
            geo

            region is specified on update, the request will succeed.
        - id: parameters.tags
          type:
            - object
          description: >-
            Gets or sets a list of key value pairs

            that describe the resource. These tags can be used for viewing and
            grouping

            this resource (across resource groups). A maximum of 15 tags can be
            provided

            for a resource. Each tag must have a key with a length no greater
            than 128

            characters and a value with a length no greater than 256 characters.
          optional: true
        - id: parameters.customDomain
          type:
            - object
          description: >-
            User domain assigned to the

            storage account. Name is the CNAME source. Only one custom domain is

            supported per storage account at this time. To clear the existing
            custom

            domain, use an empty string for the custom domain name property.
          optional: true
        - id: parameters.customDomain.name
          type:
            - string
          description: |-
            Gets or sets the custom domain
            name assigned to the storage account. Name is the CNAME source.
        - id: parameters.customDomain.useSubDomain
          type:
            - boolean
          description: >-
            Indicates whether

            indirect CName validation is enabled. Default value is false. This
            should

            only be set on updates.
          optional: true
        - id: parameters.encryption
          type:
            - object
          description: >-
            Provides the encryption settings on

            the account. If left unspecified the account encryption settings
            will remain

            the same. The default setting is unencrypted.
          optional: true
        - id: parameters.encryption.services
          type:
            - object
          description: |-
            List of services which
            support encryption.
          optional: true
        - id: parameters.encryption.services.blob
          type:
            - object
          description: |-
            The encryption
            function of the blob storage service.
          optional: true
        - id: parameters.encryption.services.blob.enabled
          type:
            - boolean
          description: >-
            A boolean

            indicating whether or not the service encrypts the data as it is
            stored.
          optional: true
        - id: parameters.accessTier
          type:
            - string
          description: >-
            Required for storage accounts where

            kind = BlobStorage. The access tier used for billing. Possible
            values

            include: 'Hot', 'Cool'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:StorageAccount> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: >-
        function beginCreate(resourceGroupName, accountName, parameters,
        options, callback)
    children:
      - 'azure-arm-storage.StorageAccounts#beginCreate~client'
      - 'azure-arm-storage.StorageAccounts#beginCreate~callback'
      - 'azure-arm-storage.StorageAccounts#beginCreate~options'
      - 'azure-arm-storage.StorageAccounts#beginCreate~parameters'
      - 'azure-arm-storage.StorageAccounts#beginCreate~baseUrl'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestUrl'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestUrl'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestUrl'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestUrl'
      - 'azure-arm-storage.StorageAccounts#beginCreate~queryParameters'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestUrl'
      - 'azure-arm-storage.StorageAccounts#beginCreate~httpRequest'
      - 'azure-arm-storage.StorageAccounts#beginCreate~headerName'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestContent'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestModel'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestModelMapper'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestModel'
      - 'azure-arm-storage.StorageAccounts#beginCreate~requestContent'
      - 'azure-arm-storage.StorageAccounts#beginCreate~serializationError'
references:
  - uid: azure-arm-storage.StorageManagementClient
    name: StorageManagementClient
    fullName: azure-arm-storage.StorageManagementClient
    isExternal: false
  - uid: string
    name: string
    fullName: string
    isExternal: true
  - uid: object
    name: object
    fullName: object
    isExternal: true
  - uid: function
    name: function
    fullName: function
    isExternal: true
  - uid: boolean
    name: boolean
    fullName: boolean
    isExternal: true
  - uid: date
    name: date
    fullName: date
    isExternal: true

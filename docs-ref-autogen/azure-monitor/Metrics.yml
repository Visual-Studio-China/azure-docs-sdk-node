### YamlMime:UniversalReference
items:
  - uid: azure-monitor.Metrics
    id: azure-monitor.Metrics
    name: Metrics
    summary: |-
      Metrics
      __NOTE__: An instance of this class is automatically created for an
      instance of the MonitorClient.
      Initializes a new instance of the Metrics class.
    fullName: azure-monitor.Metrics
    source:
      id: azure-monitor.Metrics
      path: lib\services\monitor\lib\operations\metrics.js
      startLine: 28
      remote:
        branch: jsdoc
        path: lib\services\monitor\lib\operations\metrics.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-monitor.Metrics.#ctor'
      - 'azure-monitor.Metrics#list'
    langs:
      - js
  - id: 'azure-monitor.Metrics.#ctor'
    uid: 'azure-monitor.Metrics.#ctor'
    parent: azure-monitor.Metrics
    name: Metrics(client)
    fullName: azure-monitor.Metrics.Metrics(client)
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-monitor.MonitorClient
          description: Reference to the service client.
      content: new Metrics(client)
    langs:
      - js
  - uid: 'azure-monitor.Metrics#list'
    id: 'azure-monitor.Metrics#list'
    parent: azure-monitor.Metrics
    name: 'list(resourceUri, options, callback)'
    summary: Lists the metric values for a resource.
    fullName: 'azure-monitor.Metrics.list(resourceUri, options, callback)'
    type: Function
    syntax:
      parameters:
        - id: resourceUri
          type:
            - string
          description: The identifier of the resource.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.filter
          type:
            - string
          description: >-
            Reduces the set of data collected.<br>The

            filter is optional. If present it must contain a list of metric
            names to

            retrieve of the form: *(name.value eq 'metricName' [or name.value eq

            'metricName' or ...])*. Optionally, the filter can contain
            conditions for

            the following attributes *aggregationType*, *startTime*, *endTime*,
            and

            *timeGrain* of the form *attributeName operator value*. Where
            operator is

            one of *ne*, *eq*, *gt*, *lt*.<br>Several conditions can be combined
            with

            parentheses and logical operators, e.g: *and*, *or*.<br>Some example
            filter

            expressions are:<br>- $filter=(name.value eq 'RunsSucceeded') and

            aggregationType eq 'Total' and startTime eq 2016-02-20 and endTime
            eq

            2016-02-21 and timeGrain eq duration'PT1M',<br>- $filter=(name.value
            eq

            'RunsSucceeded') and (aggregationType eq 'Total' or aggregationType
            eq

            'Average') and startTime eq 2016-02-20 and endTime eq 2016-02-21 and

            timeGrain eq duration'PT1H',<br>- $filter=(name.value eq
            'ActionsCompleted'

            or name.value eq 'RunsSucceeded') and (aggregationType eq 'Total' or

            aggregationType eq 'Average') and startTime eq 2016-02-20 and
            endTime eq

            2016-02-21 and timeGrain eq duration'PT1M'.<br><br>**NOTE**: When a
            metrics

            query comes in with multiple metrics, but with no aggregation types
            defined,

            the service will pick the Primary aggregation type of the first
            metrics to

            be used as the default aggregation type for all the metrics.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: |-
            Headers that will be added to the
            request
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: |-
          callback(err, result, request, response)

                               {Error}  err        - The Error object if an error occurred, null otherwise.

                               {object} [result]   - The deserialized result object.
                               See <xref:azure-monitor.MetricCollection> for more information.

                               {object} [request]  - The HTTP Request object if an error did not occur.

                               {stream} [response] - The HTTP Response stream if an error did not occur.
      content: 'function list(resourceUri, options, callback)'
    langs:
      - js
references:
  - uid: azure-monitor.MonitorClient
    name: MonitorClient
    fullName: azure-monitor.MonitorClient
    isExternal: false
